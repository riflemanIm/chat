{"version":3,"file":"chat.cjs.production.min.js","sources":["../src/types/index.ts","../src/components/Emoji.tsx","../src/components/Typing.tsx","../src/components/Entry.tsx","../src/utils/common.ts","../src/components/MessageContent/File.tsx","../src/components/MessageContent/Video.tsx","../src/components/MessageContent/Image.tsx","../src/components/MessageContent/index.tsx","../src/components/styles.ts","../src/components/Message.tsx","../src/components/ContactStatus.tsx","../src/components/ContactList.tsx","../src/components/AddContact.tsx","../src/components/AlertDialog.tsx","../src/components/ConferenceTime.tsx","../src/hooks/useCounter.ts","../src/components/RoomHeader.tsx","../src/components/Room.tsx","../src/components/RoomListItem.tsx","../src/components/RoomList.tsx","../src/components/Conference.tsx","../src/components/ConferenceCall.tsx","../src/context/ChatContext.tsx","../src/context/RestContext.tsx","../src/context/SocketContext.tsx","../src/components/CheckAudiVideoPerm.tsx","../src/components/Alert.tsx","../src/pages/chat.tsx","../src/hooks/useSocket.ts","../src/translations/index.ts"],"sourcesContent":["export interface ChatPa {\n  activeGroupId?: number;\n  activeChatUserId?: number;\n}\n\n// Тип сообщения\nexport type MessageType =\n  | \"text\"\n  | \"image\"\n  | \"file\"\n  | \"video\"\n  | \"notify\"\n  | \"video_conference\";\n\nexport enum MessageStatus {\n  sent = 0,\n  read = 1\n}\n\nexport enum Role {\n  Unknown = 0,\n  Client = 1,\n  Agent = 2,\n  Specialist = 3,\n  Operator = 4\n}\n\nexport interface User {\n  userId: number;\n  username: string;\n  password: string;\n  avatar: string;\n  role?: Role;\n  online?: 1 | 0; // В сети\n  langCode?: string;\n}\n\n// Приватные сообщения\nexport interface PrivateMessage {\n  _id?: number;\n  userId: number;\n  contactId: number;\n  content: string;\n  messageType: MessageType;\n  status: MessageStatus;\n  cdate: string;\n  type?: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Контакт\nexport interface Contact {\n  userId: number;\n  groupId?: number;\n  username: string;\n  avatar?: string;\n  role?: Role;\n  messages?: PrivateMessage[];\n  unreadCount?: number;\n  isTop?: boolean;\n  online?: 1 | 0;\n  isManager?: 1 | 0;\n  noMoreData?: boolean;\n}\n\n// Информация о друзьях\nexport interface ContactGather {\n  [userId: number]: Contact;\n}\n\n// Групповое сообщение\nexport interface GroupMessage {\n  _id?: number;\n  userId: number;\n  groupId: number;\n  content: string;\n  messageType: MessageType;\n  cdate: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Группа\nexport interface Group {\n  groupId: number;\n  userId: number; // владелец\n  name: string;\n  notice: string;\n  messages?: GroupMessage[];\n  unreadCount?: number;\n  cdate: string;\n  isTop?: boolean;\n  members?: Contact[];\n  noMoreData?: boolean;\n}\n\n// Группы\nexport interface GroupGather {\n  [groupId: number]: Group;\n}\n\n// Ассоциации групп и пользователей\nexport interface GroupMap {\n  groupId: number;\n  userId: number;\n}\n\n// Ассоциации пользователей и друзей\nexport interface ContactMap {\n  contactId: number;\n  userId: number;\n}\n\nexport interface SendMessage {\n  message: string | File;\n  width?: number;\n  height?: number;\n  fileName?: string;\n  messageType: MessageType[0] | MessageType[1];\n  size?: number;\n}\n\n// Размер изображения\nexport interface ImageSize {\n  width: number;\n  height: number;\n}\n\n// Непрочитанные сообщения\nexport interface UnReadGather {\n  [key: string]: number;\n}\n\n// Получить сообщения постранично\nexport interface PagingParams {\n  groupId?: number;\n  userId?: number;\n  contactId?: number;\n  current: number;\n  pageSize: number;\n}\n\n// Постраничный ответ для групповых сообщений\nexport interface PagingResponse {\n  // messageArr: GroupMessage[]; - fix on messages\n  messages: GroupMessage[];\n  userArr: User[];\n}\n\nexport interface ContactUserMap {\n  contactId: number;\n  contactUserName: string;\n}\n\n// информация о том, что контакт печатает текст\nexport interface SetTyping {\n  userId?: number;\n  groupId?: number;\n  contactId?: number;\n}\n\n// Операция с сообщением\nexport interface MessageOperation {\n  userId?: number;\n  username: string;\n  groupId?: number;\n  contactId?: number;\n  _id: number;\n}\n\n// Данные конференции\nexport interface ConferenceData {\n  userId: number;\n  contactId: number;\n  id: string;\n  url?: string;\n  serverAddress?: string;\n  user?: string;\n  password?: string;\n  currentDate?: Date;\n  finishDate?: Date;\n}\n\n// Данные чата\nexport interface ChatData {\n  user: User;\n  groupData: Group[];\n  contactData: Contact[];\n  userData: User[];\n  operatorData: Contact[];\n  conferenceData: ConferenceData;\n}\n\nexport interface GroupMember {\n  groupId: number;\n  members: Contact[];\n}\n\nexport interface AddPrivateMessages {\n  pageSize: number;\n  contactId: number;\n  messages: PrivateMessage[];\n}\n\nexport interface AddGroupMessages extends PagingResponse {\n  pageSize: number;\n  groupId: number;\n}\n\nexport interface SetActiveRoom {\n  groupId?: number;\n  contactId?: number;\n}\n\nexport interface JoinGroup {\n  group: Group;\n  user: Contact;\n}\n\nexport interface SetUser {\n  user: User;\n  token: string;\n}\n\nexport type ChatRoom = Group | Contact;\nexport type ChatMessage = GroupMessage | PrivateMessage;\n\n// Операции контекстного меню\nexport enum ContextMenuType {\n  COPY = \"COPY\", // Скопировать\n  REVOKE = \"REVOKE\", // Удалить сообщение\n  TOP_REVERT = \"TOP_REVERT\", // Открепить\n  TOP = \"TOP\", // Закрепить\n  READ = \"READ\", // Прочесть всё\n  DELETE = \"DELETE\" // Удалить\n}\n","import * as React from \"react\";\nimport { Box,  } from \"@mui/material\";\nimport { makeStyles,createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    item: {\n      cursor: \"pointer\",\n    },\n  })\n);\n\ntype EmojiProps = {\n  onSelect?: (emoji: string) => void;\n};\n\ntype EmojiItemProps = {\n  emoji: string;\n};\n\nconst Emoji: React.FC<EmojiProps> = (props: EmojiProps) => {\n  const classes = useStyles();\n  const emojiClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (props.onSelect) {\n      props.onSelect((e.target as HTMLDivElement).innerText);\n    }\n  };\n\n  const Item = (itemProps: EmojiItemProps) => {\n    return (\n      <Box\n        m={0.5}\n        component=\"span\"\n        onClick={emojiClick}\n        className={classes.item}\n      >\n        {itemProps.emoji}\n      </Box>\n    );\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😃\" />\n        <Item emoji=\"😁\" />\n        <Item emoji=\"😂\" />\n        <Item emoji=\"😄\" />\n        <Item emoji=\"😅\" />\n        <Item emoji=\"😆\" />\n        <Item emoji=\"😇\" />\n        <Item emoji=\"😈\" />\n        <Item emoji=\"😉\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😊\" />\n        <Item emoji=\"😋\" />\n        <Item emoji=\"😌\" />\n        <Item emoji=\"😍\" />\n        <Item emoji=\"😎\" />\n        <Item emoji=\"😏\" />\n        <Item emoji=\"😐\" />\n        <Item emoji=\"😒\" />\n        <Item emoji=\"😓\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"❓\" />\n        <Item emoji=\"😕\" />\n        <Item emoji=\"😖\" />\n        <Item emoji=\"😗\" />\n        <Item emoji=\"😘\" />\n        <Item emoji=\"😙\" />\n        <Item emoji=\"😚\" />\n        <Item emoji=\"😜\" />\n        <Item emoji=\"😝\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😞\" />\n        <Item emoji=\"😟\" />\n        <Item emoji=\"😠\" />\n        <Item emoji=\"😡\" />\n        <Item emoji=\"😢\" />\n        <Item emoji=\"😣\" />\n        <Item emoji=\"😤\" />\n        <Item emoji=\"😥\" />\n        <Item emoji=\"😦\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😨\" />\n        <Item emoji=\"😩\" />\n        <Item emoji=\"😪\" />\n        <Item emoji=\"😫\" />\n        <Item emoji=\"😬\" />\n        <Item emoji=\"😭\" />\n        <Item emoji=\"😮\" />\n        <Item emoji=\"😯\" />\n        <Item emoji=\"😰\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😲\" />\n        <Item emoji=\"😳\" />\n        <Item emoji=\"😴\" />\n        <Item emoji=\"😵\" />\n        <Item emoji=\"🧐\" />\n        <Item emoji=\"😷\" />\n        <Item emoji=\"🙁\" />\n        <Item emoji=\"🙂\" />\n        <Item emoji=\"🙃\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤐\" />\n        <Item emoji=\"🤑\" />\n        <Item emoji=\"🤒\" />\n        <Item emoji=\"🤓\" />\n        <Item emoji=\"🤔\" />\n        <Item emoji=\"🤕\" />\n        <Item emoji=\"🤠\" />\n        <Item emoji=\"🤡\" />\n        <Item emoji=\"🤢\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤤\" />\n        <Item emoji=\"🤥\" />\n        <Item emoji=\"🤧\" />\n        <Item emoji=\"🤨\" />\n        <Item emoji=\"🤩\" />\n        <Item emoji=\"🤪\" />\n        <Item emoji=\"🤫\" />\n        <Item emoji=\"🤬\" />\n        <Item emoji=\"🤭\" />\n      </Box>\n    </Box>\n  );\n};\nexport default Emoji;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typingText: {\n      paddingLeft: theme.spacing(0.5),\n    },\n    typingDot: {\n      display: \"inline-block\",\n      verticalAlign: \"middle\",\n      width: 4,\n      height: 4,\n      margin: \"0px 2px\",\n      background: theme.palette.primary.main,\n      borderRadius: \"50%\",\n      opacity: \"0\",\n      animation: \"$loadingFade 1s infinite\",\n      \"&:nth-child(1)\": {\n        animationDelay: \"0s\",\n      },\n      \"&:nth-child(2)\": {\n        animationDelay: \"0.2s\",\n      },\n      \"&:nth-child(3)\": {\n        animationDelay: \"0.4s\",\n      },\n    },\n    \"@keyframes loadingFade\": {\n      \"0%\": {\n        opacity: 0,\n      },\n      \"50%\": {\n        opacity: 0.8,\n      },\n      \"100%\": {\n        opacity: 0,\n      },\n    },\n  })\n);\n\ntype TypingProps = {\n  message: string;\n};\n\nconst Typing: React.FC<TypingProps> = (props: TypingProps) => {\n  const classes = useStyles();\n  return (\n    <Typography color=\"primary\" variant=\"body2\" component=\"span\">\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingText}>{props.message}</span>\n    </Typography>\n  );\n};\nexport default Typing;\n","import React, { ChangeEvent, KeyboardEvent } from \"react\";\nimport {\n  Box,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Popover,\n  SvgIcon\n} from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { Send, InsertEmoticon } from \"@mui/icons-material\";\nimport Emoji from \"./Emoji\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatRoom, ImageSize, SendMessage } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    flex: \"auto\"\n  },\n  inputUpload: {\n    display: \"none\"\n  },\n  attachmentIcon: {\n    fill: \"none\",\n    stroke: \"currentColor\"\n  }\n}));\n\ntype EntryProps = {\n  chat: ChatRoom | null;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n};\n\n/**\n * Рассчитать пропорции изображения\n */\nconst getImageSize = (data: ImageSize) => {\n  let { width, height } = data;\n  if (width > 335 || height > 335) {\n    if (width > height) {\n      height = 335 * (height / width);\n      width = 335;\n    } else {\n      width = 335 * (width / height);\n      height = 335;\n    }\n  }\n  return {\n    width,\n    height\n  };\n};\n\nconst Entry: React.FC<EntryProps> = (props: EntryProps) => {\n  const classes = useStyles();\n  const { chat } = props;\n\n  const { t } = useTranslation();\n\n  const [empjiEl, setEmojiEl] = React.useState<HTMLButtonElement | null>(null);\n  const [text, setText] = React.useState(\"\");\n  const [lastTyping, setLastTyping] = React.useState({\n    chat,\n    time: 0\n  });\n\n  const handleEmojiClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setEmojiEl(event.currentTarget);\n  };\n\n  const handleEmojiClose = () => {\n    setEmojiEl(null);\n  };\n\n  const emojiSelect = (emoji: string) => {\n    setText(`${text}${emoji}`);\n    handleEmojiClose();\n  };\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setText(target.value);\n    if (\n      chat &&\n      props.onTyping &&\n      (lastTyping.chat !== chat || Date.now() - lastTyping.time >= 500)\n    ) {\n      setLastTyping({\n        chat,\n        time: Date.now()\n      });\n      props.onTyping(chat);\n    }\n  };\n\n  const sendMessage = (data: SendMessage) => {\n    if (chat && props.onSendMessage) props.onSendMessage(chat, data);\n  };\n\n  const submit = () => {\n    if (text.trim().length === 0) {\n      return;\n    }\n\n    sendMessage({ message: text, messageType: \"text\" });\n    setText(\"\");\n  };\n\n  const onSubmitClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    submit();\n  };\n\n  const onKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      submit();\n    }\n  };\n\n  const onSubmitFile = (event: React.FormEvent<HTMLInputElement>) => {\n    if (!event.currentTarget.files) return;\n    const file = event.currentTarget.files[0];\n    let messageType: string;\n    if (file.type.includes(\"image\")) {\n      messageType = \"image\";\n    } else if (file.type.includes(\"video\")) {\n      messageType = \"video\";\n    } else {\n      messageType = \"file\";\n    }\n    if (messageType === \"image\") {\n      const image = new Image();\n      const url = window.URL || window.webkitURL;\n      image.src = url.createObjectURL(file);\n      image.onload = () => {\n        const imageSize: ImageSize = getImageSize({\n          width: image.width,\n          height: image.height\n        });\n        sendMessage({\n          message: file,\n          width: imageSize.width,\n          height: imageSize.height,\n          messageType\n        });\n      };\n    } else {\n      sendMessage({\n        message: file,\n        messageType,\n        fileName: file.name,\n        size: file.size\n      });\n    }\n  };\n\n  const emojiOpen = Boolean(empjiEl);\n  const enojiId = emojiOpen ? \"simple-popover\" : undefined;\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <TextField\n        className={classes.input}\n        placeholder={t(\"CHAT.INPUT_MESSAGE\") || \"\"}\n        autoFocus={true}\n        variant=\"standard\"\n        InputProps={{\n          disableUnderline: true,\n          startAdornment: (\n            <InputAdornment position={\"start\"}>\n              <input\n                accept=\".pdf,.jpg,.jpeg,.bmp,.gif,.png,application/pdf,image/jpeg,image/bmp,image/gif,image/png\"\n                className={classes.inputUpload}\n                id=\"icon-button-file\"\n                type=\"file\"\n                onChange={onSubmitFile}\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload\"\n                  component=\"span\"\n                  size=\"small\"\n                >\n                  <SvgIcon fill=\"none\" className={classes.attachmentIcon}>\n                    <path\n                      d=\"M16.768 13.5767L11.6961 18.6486C9.35886 20.9859 5.56937 20.9859 3.23208 18.6486V18.6486C0.894789 16.3114 0.894789 12.5219 3.23208 10.1846L10.4479 2.96872C12.0875 1.32914 14.7458 1.32914 16.3854 2.96873V2.96873C18.025 4.60831 18.025 7.26659 16.3854 8.90617L9.16515 16.1264C8.23032 17.0612 6.71466 17.0612 5.77982 16.1264V16.1264C4.84499 15.1916 4.84499 13.6759 5.77982 12.7411L10.8896 7.63131\"\n                      strokeWidth=\"1.6\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </SvgIcon>\n                </IconButton>\n              </label>{\" \"}\n              <IconButton\n                aria-describedby={enojiId}\n                onClick={handleEmojiClick}\n                color=\"primary\"\n                size=\"small\"\n              >\n                <InsertEmoticon />\n              </IconButton>\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={onSubmitClick}\n            >\n              <Send />\n            </IconButton>\n          )\n        }}\n        value={text}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n      />\n      <Popover\n        id={enojiId}\n        open={emojiOpen}\n        anchorEl={empjiEl}\n        onClose={handleEmojiClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n      >\n        <Emoji onSelect={emojiSelect} />\n      </Popover>\n    </Box>\n  );\n};\nexport default Entry;\n","import dayjs from \"dayjs\";\nimport { ChatRoom, Contact, ContactGather, Group, GroupGather } from \"../types\";\n\nexport function isEmpty(value: unknown): boolean {\n  return (\n    value == null ||\n    (typeof value === \"object\" && Object.keys(value).length === 0) ||\n    (typeof value === \"string\" && value.trim().length === 0)\n  );\n}\n\n// string contains string\nexport function isContainStr(str1: string, str2: string): boolean {\n  return str2.indexOf(str1) >= 0;\n}\n\n/**\n * check URL\n * @param text\n */\nexport function isUrl(text: string): boolean {\n  // parse url\n  const UrlReg = new RegExp(/http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?/);\n  return UrlReg.test(text);\n}\n\n/**\n * Формитирование времени сообщения\n * @param time\n */\nexport function formatTime(time: Date | string | undefined) {\n  if (typeof time === \"undefined\") return null;\n  if (typeof time === \"string\") time = new Date(time);\n  // больше чем вчера\n  if (\n    dayjs()\n      .add(-1, \"days\")\n      .startOf(\"day\")\n      .isAfter(time)\n  ) {\n    return dayjs(time).format(\"DD.MM.YYYY HH:mm\");\n  }\n  // вчера\n  if (\n    dayjs()\n      .startOf(\"day\")\n      .isAfter(time)\n  ) {\n    return `Вчера в ${dayjs(time).format(\"HH:mm\")}`;\n  }\n\n  return dayjs(time).format(\"HH:mm\");\n}\n\n/**\n * Раскрыть содержимое\n * @param content - данные в строке\n */\nexport function getFileMeta(\n  content: string\n): {\n  date: string;\n  userId: string;\n  size: string;\n  name: string;\n} {\n  // Формат  [date]$[userId]$[size]$[fileName]\n  // Например fileName = 1606980397047$1a01e20f-3780-4227-84b5-5c69ca766ee5$15.41KB$123.docx\n  const meta = content.split(\"$\");\n  const [date, userId, size, name] = meta;\n  return {\n    date,\n    userId,\n    size,\n    name\n  };\n}\n\nexport function getImageMeta(\n  content: string\n): {\n  date: string;\n  userId: string;\n  width: string;\n  height: string;\n} {\n  // Формат [date]$[userId]$[width]$[height]$...\n  const meta = content.split(\"$\");\n  const [date, userId, width, height] = meta;\n  return {\n    date,\n    userId,\n    width,\n    height\n  };\n}\n\nexport function splitFileName(name: string): { name: string; ext: string } {\n  const idx = name.lastIndexOf(\".\");\n  if (idx === -1)\n    return {\n      name,\n      ext: \"\"\n    };\n  return {\n    name: name.slice(0, idx),\n    ext: name.slice(idx + 1)\n  };\n}\n\nexport const getChatId = (chat: ChatRoom | null): string | null => {\n  if (!chat) return null;\n  return (chat as Group).groupId\n    ? `group:${(chat as Group).groupId}`\n    : `user:${chat.userId}`;\n};\n\nexport const getChatName = (chat: ChatRoom): string => {\n  return (chat as Group).groupId\n    ? (chat as Group).name\n    : (chat as Contact).username;\n};\n\nexport const allMessCount = (chats: GroupGather | ContactGather) => {\n  return Object.values(chats)\n    .map(it => (it?.messages != null ? it?.messages.length : 0))\n    .reduce((a: number, b: number) => a + b, 0);\n};\n\nexport const chatRoomComparer = (a: ChatRoom, b: ChatRoom): number => {\n  const hasMessagesA = Array.isArray(a.messages) && a.messages.length > 0;\n  const hasMessagesB = Array.isArray(b.messages) && b.messages.length > 0;\n  if (\n    hasMessagesA &&\n    hasMessagesB &&\n    b.messages != null &&\n    a.messages != null\n  ) {\n    // !!! if cdate === undefined !!!\n    const bb =\n      b.messages[b.messages.length - 1].cdate != null\n        ? new Date(b.messages[b.messages.length - 1].cdate).getTime()\n        : new Date().getTime();\n\n    const aa =\n      a.messages[a.messages.length - 1].cdate != null\n        ? new Date(a.messages[a.messages.length - 1].cdate).getTime()\n        : new Date().getTime() - 1;\n    const res = bb - aa;\n\n    //console.log('res', res);\n    return res;\n  }\n  if (hasMessagesA) {\n    return -1;\n  }\n  return 1;\n};\n\nexport const getParam = (param: string) => {\n  const QueryString = window.location.search;\n  const urlParams = new URLSearchParams(QueryString);\n  return urlParams.get(param);\n};\n","import React from \"react\";\nimport { Avatar, Box } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nimport { getFileMeta, splitFileName } from \"../../utils/common\";\nimport { ChatMessage } from \"../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fileIcon: {\n      fontSize: \"0.75rem\"\n    },\n    fileBody: {\n      paddingLeft: theme.spacing(1.2)\n    }\n  })\n);\ntype FileProps = {\n  message: ChatMessage;\n};\n\nconst File: React.FC<FileProps> = ({ message }: FileProps) => {\n  const classes = useStyles();\n  const meta = getFileMeta(message.content);\n  const { name, ext } = splitFileName(meta.name);\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <Avatar className={classes.fileIcon}>{ext.toUpperCase()}</Avatar>\n      <Box display=\"flex\" flexDirection=\"column\" className={classes.fileBody}>\n        {name}\n        <span>{`${ext} ${meta.size}`}</span>\n      </Box>\n    </Box>\n  );\n};\n\nexport default File;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { ChatMessage } from \"../../types\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  mediaContent: {\n    maxWidth: 284,\n    maxHeight: 190,\n    borderRadius: theme.spacing(1.2),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 250,\n      maxHeight: 210\n    }\n  }\n}));\n\ntype VideoProps = {\n  apiUrl: string;\n  message: ChatMessage;\n  isConference: boolean;\n};\n\nconst Video: React.FC<VideoProps> = ({\n  apiUrl,\n  message,\n  isConference\n}: VideoProps) => {\n  const classes = useStyles();\n  let src = \"\";\n  if (isConference) {\n    const meta = JSON.parse(message.content);\n    src = `${apiUrl}/static/conf/${meta.visitId}/${meta.name}`;\n  } else src = `${apiUrl}/static/file/${message.content}`;\n  return (\n    <video src={src} className={classes.mediaContent} controls muted>\n      Ваш браузер не поддерживает тег video.\n    </video>\n  );\n};\n\nexport default Video;\n","import React from \"react\";\nimport Viewer from \"react-viewer\";\nimport { Theme } from \"@mui/material/styles\";\n//import { getImageMeta } from \"../../utils/common\";\nimport { ChatMessage } from \"../../types\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nimport { AspectRatio } from \"react-aspect-ratio\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mediaContent: {\n      cursor: \"pointer\",\n      borderRadius: theme.spacing(1.2),\n      maxWidth: 284,\n      //maxHeight: 190,\n      [theme.breakpoints.down(\"sm\")]: {\n        maxWidth: 250,\n        // maxHeight: 170,\n      },\n    },\n    aspect: {\n      maxWidth: 284,\n      [theme.breakpoints.down(\"sm\")]: {\n        maxWidth: 250,\n      },\n    },\n  })\n);\ntype ImageProrps = {\n  apiUrl: string;\n  message: ChatMessage;\n};\n\nconst Image: React.FC<ImageProrps> = ({ apiUrl, message }: ImageProrps) => {\n  const classes = useStyles();\n  //const meta = getImageMeta(message.content);\n\n  const [viewerVisible, setViewerVisible] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Viewer\n        zIndex={2000}\n        visible={viewerVisible}\n        changeable={false}\n        onClose={() => {\n          setViewerVisible(false);\n        }}\n        images={[\n          {\n            src: `${apiUrl}/static/image/${message.content}`,\n          },\n        ]}\n      />\n      <AspectRatio ratio=\"3/4\" className={classes.aspect}>\n        <img\n          src={`${apiUrl}/static/image/${message.content}`}\n          onClick={() => {\n            setViewerVisible(true);\n          }}\n          className={classes.mediaContent}\n          alt={message.cdate}\n        />\n      </AspectRatio>\n    </React.Fragment>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\nimport File from \"./File\";\nimport Video from \"./Video\";\nimport Image from \"./Image\";\nimport { ChatMessage } from \"../../types\";\n\ntype MessageProps = {\n  apiUrl: string;\n  message: ChatMessage;\n};\nconst MessageContent: React.FC<MessageProps> = ({\n  apiUrl,\n  message,\n}: MessageProps) => {\n  switch (message.messageType) {\n    case \"text\":\n      return <React.Fragment>{message.content}</React.Fragment>;\n    case \"video\":\n    case \"video_conference\":\n      return (\n        <Video\n          message={message}\n          apiUrl={apiUrl}\n          isConference={message.messageType === \"video_conference\"}\n        />\n      );\n    case \"image\":\n      return <Image message={message} apiUrl={apiUrl} />;\n    case \"file\":\n      return <File message={message} />;\n  }\n  return null;\n};\n\nexport default MessageContent;\n","import { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    rootContact: {\n      padding: 1,\n      paddingLeft: theme.spacing(2),\n      \"& span\": {\n        float: \"right\",\n        color: theme.palette.text.secondary,\n        fontSize: \"0.8rem\"\n      },\n      \"& $message\": {\n        backgroundColor: theme.palette.grey[200],\n        color: theme.palette.text.primary,\n        borderTopRightRadius: theme.spacing(3),\n        borderBottomRightRadius: theme.spacing(3)\n      },\n      \"& $firstMessage\": {\n        borderTopLeftRadius: theme.spacing(3),\n        marginTop: 10\n      },\n      \"& $lastMessage\": {\n        borderTopRightRadius: theme.spacing(3),\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: theme.spacing(3),\n        marginBottom: 10\n      }\n    },\n    rootUser: {\n      padding: 1,\n      paddingRight: theme.spacing(2),\n      justifyContent: \"flex-end\",\n      \"& span\": {\n        float: \"right\",\n        color: \"#D9DEEC\",\n        fontSize: \"0.8rem\"\n      },\n      \"& $message\": {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        borderTopLeftRadius: theme.spacing(3),\n        borderBottomLeftRadius: theme.spacing(3)\n      },\n      \"& $firstMessage\": {\n        borderTopRightRadius: theme.spacing(3),\n        marginTop: 10\n      },\n      \"& $lastMessage\": {\n        borderTopLeftRadius: theme.spacing(3),\n        borderBottomRightRadius: 0,\n        marginBottom: 10\n      }\n    },\n    rootNotify: {\n      justifyContent: \"center\",\n      \"& > *\": {\n        //padding: `0px ${theme.spacing(1)}`,\n        borderRadius: theme.spacing(3),\n        fontWeight: 500\n      }\n    },\n    message: {\n      //maxWidth: \"55%\",\n      //minWidth: \"50%\",\n      maxWidth: \"65%\",\n\n      [theme.breakpoints.down(\"md\")]: {\n        maxWidth: \"95%\"\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        maxWidth: \"85%\"\n      },\n      borderRadius: theme.spacing(0.6),\n      padding: theme.spacing(0.9),\n      paddingLeft: theme.spacing(1.8),\n      paddingRight: theme.spacing(1.8)\n    },\n    firstMessage: {},\n    lastMessage: {},\n\n    file: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      cursor: \"pointer\"\n    },\n    header: {\n      flex: \"0 0 100%\",\n      overflow: \"hidden\",\n      fontWeight: \"bold\"\n    },\n    body: {\n      flex: \"1 1 auto\",\n      wordBreak: \"break-word\",\n      overflow: \"hidden\"\n    },\n    status: {\n      paddingLeft: theme.spacing(1),\n      flex: \"1 1 auto\",\n      alignSelf: \"flex-end\"\n    },\n    statusImage: {\n      fontSize: \"1rem\",\n      marginRight: theme.spacing(0.5),\n      verticalAlign: \"middle\"\n    }\n  })\n);\n","import * as React from \"react\";\nimport { Box, Link, ListItem, Typography } from \"@mui/material\";\n\nimport { DoneAll, Done } from \"@mui/icons-material\";\nimport { formatTime } from \"../utils/common\";\nimport MessageContent from \"./MessageContent\";\nimport { Alert } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatMessage, Contact, PrivateMessage, User } from \"../types\";\n\n/* styles */\nimport useStyles from \"./styles\";\n\ntype MessageProps = {\n  apiUrl: string;\n  user: User;\n  message: ChatMessage;\n  owner: Contact;\n  isGroupMessage: boolean; // сообщение в группу\n  isUserFirst: boolean; // начинает группу сообщений от одного пользователя\n  isUserLast: boolean; // завершает группу сообщений от одного пользователя\n  refOnLastMess: React.RefObject<HTMLDivElement> | null;\n  onContextMenu: (event: React.MouseEvent<HTMLElement>) => void;\n};\n\nconst wrapMessage = (\n  apiUrl: string,\n  message: ChatMessage,\n  classes: ReturnType<typeof useStyles>,\n  isUserFirst: boolean,\n  isUserLast: boolean,\n  onContextMenu: ((event: React.MouseEvent<HTMLElement>) => void) | undefined,\n  child: JSX.Element\n) => {\n  const { messageType } = message;\n\n  const className =\n    isUserFirst && isUserLast\n      ? `${classes.message} ${classes.firstMessage} ${classes.lastMessage}`\n      : isUserFirst\n      ? `${classes.message} ${classes.firstMessage}`\n      : isUserLast\n      ? `${classes.message} ${classes.lastMessage}`\n      : classes.message;\n\n  if (messageType === \"file\") {\n    return (\n      <Link\n        className={`${className} ${classes.file}`}\n        underline=\"none\"\n        href={`${apiUrl}/static/file/${message.content}`}\n        target=\"_blank\"\n        download\n        onContextMenu={onContextMenu}\n      >\n        {child}\n      </Link>\n    );\n  }\n  const isMedia =\n    messageType === \"image\" ||\n    messageType === \"video\" ||\n    messageType === \"video_conference\";\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection={isMedia ? \"column\" : \"row\"}\n      flexWrap=\"wrap\"\n      className={className}\n      onContextMenu={onContextMenu}\n    >\n      {child}\n    </Box>\n  );\n};\n\nconst Message: React.FC<MessageProps> = (props: MessageProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const {\n    apiUrl,\n    message,\n    owner,\n    refOnLastMess,\n    user,\n    isGroupMessage,\n    isUserFirst,\n    isUserLast\n  } = props;\n\n  if (message.messageType === \"notify\") {\n    // Уведомление - особый случай\n    const content =\n      message.content[0] === \"{\"\n        ? JSON.parse(message.content)\n        : message.content;\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Alert\n          severity={typeof content === \"string\" ? \"info\" : content.severity}\n          ref={refOnLastMess}\n        >\n          {typeof content === \"string\" ? content : content.message}\n        </Alert>\n      </ListItem>\n    );\n  }\n\n  if (message.isRevoke) {\n    // Удаленное сообщение\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Typography variant=\"body2\" ref={refOnLastMess} align=\"center\">\n          {message.userId === user.userId\n            ? t(\"CHAT.MESSAGE.REVOKED.YOU\")\n            : `${message.revokeUserName} ${t(\"CHAT.MESSAGE.REVOKED.CONTACT\")}`}\n        </Typography>\n      </ListItem>\n    );\n  }\n\n  const isMine = user.userId === message.userId;\n\n  return (\n    <ListItem className={isMine ? classes.rootUser : classes.rootContact}>\n      {wrapMessage(\n        apiUrl,\n        message,\n        classes,\n        isUserFirst,\n        isUserLast,\n        props.onContextMenu,\n        <React.Fragment>\n          {!isMine && isGroupMessage && owner && isUserFirst && (\n            <div className={classes.header}>{owner.username}</div>\n          )}\n          <div className={classes.body}>\n            <MessageContent message={message} apiUrl={apiUrl} />\n          </div>\n          <div className={classes.status} ref={refOnLastMess}>\n            <span>\n              {isMine ? (\n                (message as PrivateMessage).status === 0 ? (\n                  <Done className={classes.statusImage} />\n                ) : (\n                  <DoneAll className={classes.statusImage} />\n                )\n              ) : null}\n              {formatTime(message.cdate)}\n            </span>\n          </div>\n        </React.Fragment>\n      )}\n    </ListItem>\n  );\n};\nexport default Message;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport Typing from \"./Typing\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"../types\";\n\ntype ContactStatusProps = {\n  contact: Contact;\n  isTyping: boolean;\n};\n\nconst ContactStatus: React.FC<ContactStatusProps> = (\n  props: ContactStatusProps\n) => {\n  const { t } = useTranslation();\n\n  if (props.isTyping) return <Typing message={t(\"CHAT.STATUS.TYPING\")} />;\n  if (props.contact.online === 1)\n    return (\n      <Typography variant=\"body2\" color=\"primary\" component=\"span\">\n        {t(\"CHAT.STATUS.ONLINE\")}\n      </Typography>\n    );\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n      {t(\"CHAT.STATUS.OFFLINE\")}\n    </Typography>\n  );\n};\n\nexport default ContactStatus;\n","import React from \"react\";\nimport {\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@mui/material\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport ContactStatus from \"./ContactStatus\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Contact } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  star: {\n    fontSize: \"0.85rem\",\n    verticalAlign: \"middle\",\n  },\n}));\n\ntype ContactListProps = {\n  apiUrl: string;\n  contacts: Contact[];\n  owner?: number;\n  onClick?: (contact: Contact) => void;\n};\n\nconst ContactList: React.FC<ContactListProps> = (props: ContactListProps) => {\n  const classes = useStyles();\n  const { apiUrl, contacts, owner } = props;\n\n  return (\n    <List aria-label=\"contacts\">\n      {contacts.map((contact) => (\n        <ListItem\n          button\n          key={contact.userId}\n          onClick={() => props.onClick && props.onClick(contact)}\n        >\n          <ListItemAvatar>\n            <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={\n              <span>\n                {contact.username}{\" \"}\n                {owner === contact.userId && (\n                  <StarIcon className={classes.star} color=\"primary\" />\n                )}\n              </span>\n            }\n            secondary={<ContactStatus contact={contact} isTyping={false} />}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\nexport default ContactList;\n","import { Dialog, DialogTitle } from \"@mui/material\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"../types\";\nimport ContactList from \"./ContactList\";\n\ninterface AddContactProps {\n  open: boolean;\n  apiUrl: string;\n  contacts: Contact[];\n  onClose: (value?: Contact) => void;\n}\n\nconst AddContact: React.FC<AddContactProps> = (\n  props: AddContactProps\n) => {\n  const { onClose, open, apiUrl, contacts } = props;\n  const { t } = useTranslation();\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleListItemClick = (contact: Contact) => {\n    onClose(contact);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"add-contact-title\"\n      open={open}\n    >\n      <DialogTitle id=\"switch-operator-title\">\n        {t(\"CHAT.ADD_CONTACT\")}\n      </DialogTitle>\n      <ContactList\n        apiUrl={apiUrl}\n        contacts={contacts}\n        onClick={handleListItemClick}\n      />\n    </Dialog>\n  );\n};\n\nexport default AddContact;","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from \"react\";\nimport {\n  Alert,\n  Dialog,\n  DialogContent,\n  Slide,\n  Button,\n  DialogActions,\n  Typography,\n  AlertColor\n} from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { TransitionProps } from \"@mui/material/transitions\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ntype AlertDialogProps = {\n  children: JSX.Element | JSX.Element[] | string;\n  open: boolean;\n  setOpen: (value: boolean) => void;\n  severity: AlertColor;\n};\n\nexport default function AlertDialog({\n  children,\n  open,\n  setOpen,\n  severity = \"warning\"\n}: AlertDialogProps) {\n  const { t } = useTranslation();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogContent>\n        <Alert severity={severity}>\n          {typeof children === \"string\" ? (\n            <Typography variant=\"body2\">{children}</Typography>\n          ) : (\n            children\n          )}\n        </Alert>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} variant=\"text\">\n          {t(\"COMPONENT.BUT_CLOSE\")}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport useCounter from \"../hooks/useCounter\";\nimport AlertDialog from \"./AlertDialog\";\nimport { useTranslation } from \"react-i18next\";\n//import { useTranslation } from \"react-i18next\";\n\nconst hhMmSs = (totalSeconds: number) => {\n  const hours = Math.floor(totalSeconds / 3600);\n  const strHours = hours < 10 ? `0${hours}` : hours;\n  totalSeconds %= 3600;\n  const minutes = Math.floor(totalSeconds / 60);\n  const strMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const seconds = totalSeconds % 60;\n  const strSeconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  const strTime = `${strHours}:${strMinutes}:${strSeconds}`;\n  return { hours, minutes, seconds, strTime };\n};\ntype AlertModaleProps = {\n  modaleInfo: boolean;\n  setModaleInfo: (vars: boolean) => void;\n  strTime: string;\n};\nconst AlertModale: React.FC<AlertModaleProps> = ({\n  modaleInfo,\n  setModaleInfo,\n  strTime\n}) => {\n  const { t } = useTranslation();\n  return useMemo(\n    () => (\n      <AlertDialog open={modaleInfo} setOpen={setModaleInfo} severity=\"info\">\n        <Typography variant=\"body1\" textAlign=\"center\">\n          {t(\"CHAT.CONFERENCE.UntillTheEnd\")}:\n        </Typography>\n        <Typography variant=\"h6\" textAlign=\"center\">\n          {strTime}\n        </Typography>\n      </AlertDialog>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [modaleInfo]\n  );\n};\n\ntype ConferenceTimeProps = {\n  finishDate: Date;\n};\nconst ConferenceTime: React.FC<ConferenceTimeProps> = ({\n  finishDate\n}: ConferenceTimeProps) => {\n  const { t } = useTranslation();\n  const [modaleInfo, setModaleInfo] = useState(false);\n  const currTime = Date.now();\n  // console.log(\"currentDate server\", currentDate);\n  // console.log(\"currTime client\", currTime);\n  const finTime = new Date(finishDate).getTime();\n\n  //const diffTimeMin = Math.round((finTime - currTime) / (1000 * 60));\n  const diffTimeSec = Math.round((finTime - currTime) / 1000);\n\n  const { counter } = useCounter(diffTimeSec);\n  useEffect(() => {\n    if (minutes != null && minutes === 3 && seconds != null && seconds === 0) {\n      setModaleInfo(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [counter]);\n\n  if (diffTimeSec < 1) return null;\n\n  const { minutes, seconds, strTime } = hhMmSs(diffTimeSec);\n\n  return (\n    <Box textAlign=\"center\">\n      <Typography variant=\"body2\" component=\"span\">\n        {t(\"CHAT.CONFERENCE.LEFT_TIME\")}:{\" \"}\n      </Typography>\n      <Typography variant=\"button\" component=\"span\">\n        {strTime}\n      </Typography>\n      <AlertModale\n        modaleInfo={modaleInfo}\n        setModaleInfo={setModaleInfo}\n        strTime={strTime}\n      />\n    </Box>\n  );\n};\n\nexport default ConferenceTime;\n","import { useEffect, useRef, useState } from \"react\";\n\nexport default function useCounter(max = 30000) {\n  const [counter, setCounter] = useState(max);\n  const counterRef = useRef<ReturnType<typeof setInterval> | null>(null);\n\n  const handlerRefresh = () => {\n    setCounter(max);\n  };\n\n  // Counter\n  useEffect(() => {\n    if (counter > 0)\n      counterRef.current = setInterval(\n        () => setCounter(prev => prev - 1),\n        1000\n      );\n\n    return () => {\n      if (counterRef.current) clearInterval(counterRef.current);\n    };\n  }, [counter]);\n\n  return { counter, handlerRefresh };\n}\n","import React from \"react\";\nimport { Avatar, CardHeader, Button, Popover, IconButton } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport { useTranslation } from \"react-i18next\";\nimport VideoCallIcon from \"@mui/icons-material/VideoCall\";\nimport CallEndIcon from \"@mui/icons-material/CallEnd\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ContactStatus from \"./ContactStatus\";\nimport ContactList from \"./ContactList\";\nimport AddContact from \"./AddContact\";\nimport {\n  ChatRoom,\n  Contact,\n  Group,\n  SetTyping,\n  User,\n  ConferenceData\n} from \"../types\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nimport { isEmpty } from \"../utils/common\";\nimport ConferenceTime from \"./ConferenceTime\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popover: {\n      pointerEvents: \"none\"\n    },\n    paper: {\n      padding: theme.spacing(1)\n    },\n    avatarGroup: {\n      backgroundColor: \"#28B7C6\",\n      color: \"#fff\"\n    }\n  })\n);\n\ntype RoomHeaderProps = {\n  apiUrl: string;\n  user: User;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  conferenceJoined: boolean;\n  className: string;\n  operators: Contact[];\n  onVideoCall?: (chat: ChatRoom) => void;\n  onVideoEnd?: (conference: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst getGroupStatus = (group: Group, t: (key: string) => string) => {\n  const status = [`${group.members?.length} ${t(\"CHAT.MEMBERS\")}`];\n  const onlineCount = (group.members || []).reduce(\n    (sum: number, contact) => (contact.online ? sum + 1 : sum),\n    0\n  );\n  if (onlineCount) status.push(`${onlineCount} ${t(\"CHAT.STATUS.ONLINE\")}`);\n  return status.join(\", \");\n};\n\nconst RoomHeader: React.FC<RoomHeaderProps> = ({\n  apiUrl,\n  user,\n  chat,\n  typing,\n  conference,\n  conferenceJoined,\n  className,\n  operators,\n  onVideoCall,\n  onVideoEnd,\n  onConferencePause,\n  onOperatorAdd,\n  onLeaveGroup\n}: RoomHeaderProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const [addOperatorOpen, setAddOperatorOpen] = React.useState(false);\n\n  if (!chat)\n    return (\n      <CardHeader\n        avatar={<Avatar />}\n        title=\"\"\n        subheader=\"\"\n        className={className}\n      />\n    );\n\n  const handlePopoverOpen = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleAddOperatorOpen = () => {\n    setAddOperatorOpen(true);\n  };\n\n  const handleAddOperatorClose = (operator?: Contact) => {\n    setAddOperatorOpen(false);\n    if (onOperatorAdd && operator && chat)\n      onOperatorAdd(chat as Group, operator);\n  };\n\n  const group = chat as Group;\n  if (group.groupId) {\n    // группа\n    return (\n      <CardHeader\n        avatar={\n          <Avatar alt={group.name} className={classes.avatarGroup}>\n            <GroupIcon />\n          </Avatar>\n        }\n        title={group.name}\n        subheader={\n          <React.Fragment>\n            <span\n              aria-owns={anchorEl ? \"mouse-over-popover\" : undefined}\n              aria-haspopup=\"true\"\n              onMouseEnter={handlePopoverOpen}\n              onMouseLeave={handlePopoverClose}\n            >\n              {getGroupStatus(group, t)}\n            </span>\n            <Popover\n              id=\"mouse-over-popover\"\n              className={classes.popover}\n              classes={{\n                paper: classes.paper\n              }}\n              open={!!anchorEl}\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\"\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\"\n              }}\n              onClose={handlePopoverClose}\n              disableRestoreFocus\n            >\n              <ContactList\n                apiUrl={apiUrl}\n                contacts={group.members as Contact[]}\n                owner={group.userId}\n              />\n            </Popover>\n          </React.Fragment>\n        }\n        className={className}\n        action={\n          <React.Fragment>\n            {user.role === 4 && (\n              <React.Fragment>\n                <IconButton\n                  aria-label=\"add user\"\n                  onClick={handleAddOperatorOpen}\n                >\n                  <PersonAddIcon />\n                </IconButton>\n                <AddContact\n                  apiUrl={apiUrl}\n                  open={addOperatorOpen}\n                  contacts={operators}\n                  onClose={handleAddOperatorClose}\n                />\n              </React.Fragment>\n            )}\n            {user.role === 4 &&\n              group.members?.find(\n                it => it.userId !== user.userId && it.role === 4\n              ) &&\n              onLeaveGroup && (\n                <IconButton\n                  aria-label=\"leave group\"\n                  onClick={() => onLeaveGroup(group)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              )}\n          </React.Fragment>\n        }\n      />\n    );\n  }\n  const contact = chat as Contact;\n  const isTyping = !!typing?.contactId && typing?.userId === contact.userId;\n  console.log(\"user\", user, \"contact\", contact);\n\n  return (\n    <CardHeader\n      avatar={\n        <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n      }\n      title={contact.username}\n      subheader={<ContactStatus contact={contact} isTyping={isTyping} />}\n      className={className}\n      action={\n        <React.Fragment>\n          {user.role !== 1 &&\n            conferenceJoined &&\n            conference &&\n            !isEmpty(conference) &&\n            onConferencePause != null && (\n              <Button\n                aria-label=\"cancel call\"\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                startIcon={<CallEndIcon color=\"error\" />}\n                onClick={() => onConferencePause(conference)}\n              >\n                {t(\"CHAT.CONFERENCE.PAUSE\")}\n              </Button>\n            )}\n\n          {conference &&\n            !isEmpty(conference) &&\n            onVideoEnd != null &&\n            user.role != null &&\n            [3, 4].includes(user.role) && (\n              <Button\n                aria-label=\"cancel call\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<CallEndIcon color=\"error\" />}\n                onClick={() => onVideoEnd(conference)}\n                style={{ marginLeft: 8 }}\n              >\n                {t(\"CHAT.CONFERENCE.FINISH\")}\n              </Button>\n            )}\n\n          {isEmpty(conference) &&\n            onVideoCall != null &&\n            user.role &&\n            [3, 4].includes(user.role) && (\n              <Button\n                aria-label=\"video call\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<VideoCallIcon />}\n                onClick={() => onVideoCall(contact)}\n              >\n                {t(\"CHAT.CONFERENCE.START\")}\n              </Button>\n            )}\n\n          {conference?.finishDate != null && (\n            <ConferenceTime finishDate={conference.finishDate} />\n          )}\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default RoomHeader;\n","import React, { useCallback } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CircularProgress,\n  Divider,\n  List,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  IconButton,\n  useMediaQuery,\n  Tooltip\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport Entry from \"./Entry\";\nimport Message from \"./Message\";\nimport RoomHeader from \"./RoomHeader\";\nimport { useTranslation } from \"react-i18next\";\nimport { getChatId, isEmpty } from \"../utils/common\";\nimport {\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  SetTyping,\n  User,\n  Contact,\n  ConferenceData,\n  Group,\n  ContactGather\n} from \"../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      minWidth: 360,\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    inline: {\n      display: \"inline\"\n    },\n    messageListOuter: {\n      flex: 1,\n      overflowY: \"auto\",\n      margin: 0,\n      padding: 0,\n      scrollbarWidth: \"thin\",\n      scrollbarColor: \"#6b6b6b #fff\",\n      \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n        backgroundColor: \"#fff\"\n      },\n      \"&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb\": {\n        borderRadius: 8,\n        backgroundColor: \"#d5d9ef\",\n        border: \"5px solid #fff\"\n      },\n      \"&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus\": {\n        backgroundColor: \"#fff\"\n      },\n      \"&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active\": {\n        backgroundColor: \"#73d7f5\",\n        border: \"3px solid #fff\"\n      },\n      \"&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover\": {\n        backgroundColor: \"#73d7f5\",\n        border: \"3px solid #fff\"\n      },\n      \"&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner\": {\n        backgroundColor: \"#fff\"\n      }\n    },\n    messageList: {\n      height: \"100%\",\n      overflow: \"auto\"\n    },\n    roomHeader: {\n      flex: 1\n    },\n    roomProgress: {\n      padding: theme.spacing(2)\n    },\n    flexAll: {\n      flex: \"1 1 auto\"\n    },\n    flexEnd: {\n      justifyContent: \"flex-end\"\n    }\n  })\n);\n\nconst initialMenuState = {\n  message: null,\n  mouseX: null,\n  mouseY: null,\n  canCopy: false,\n  canDelete: false\n};\n\nconst initialScrollState = {\n  autoScroll: true,\n  height: 0\n};\n\ntype RoomProps = {\n  apiUrl: string;\n  user: User;\n  users: ContactGather;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  conferenceJoined: boolean;\n  loading: boolean;\n  pageSize: number;\n  operators: Contact[];\n  onExitRoom?: (chat: ChatRoom) => void;\n  onEnterRoom?: (chat: ChatRoom) => void;\n  onNeedMoreMessages: (chat: ChatRoom) => Promise<void>;\n  onMeesageDelete?: (chat: ChatRoom, message: ChatMessage) => void;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n  onVideoCall?: (chat: ChatRoom) => void;\n  onVideoEnd?: (chat: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst Room: React.FC<RoomProps> = (props: RoomProps) => {\n  const {\n    apiUrl,\n    user,\n    users,\n    chat,\n    typing,\n    conference,\n    conferenceJoined,\n    loading,\n    pageSize\n  } = props;\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down(\"sm\")\n  );\n  const [scrollState, setScrollState] = React.useState(initialScrollState);\n\n  const messages = chat?.messages;\n  const messageCount = messages?.length || 0;\n\n  const refOnLastMess = React.useRef<HTMLDivElement>(null);\n  const refList = React.useRef<HTMLUListElement>(null);\n\n  const [menuState, setMenuState] = React.useState<{\n    message: ChatMessage | null;\n    mouseX: null | number;\n    mouseY: null | number;\n    canCopy: boolean;\n    canDelete: boolean;\n  }>(initialMenuState);\n\n  React.useEffect(() => {\n    if (props.onEnterRoom && chat) props.onEnterRoom(chat);\n  }, [getChatId(chat)]);\n\n  React.useLayoutEffect(() => {\n    if (scrollState.autoScroll && refOnLastMess.current) {\n      refOnLastMess.current.scrollIntoView();\n    }\n  }, [getChatId(chat), messageCount]);\n\n  React.useLayoutEffect(() => {\n    if (!loading && refList.current && scrollState.height > 0) {\n      refList.current.scrollTop =\n        refList.current.scrollHeight - scrollState.height;\n      setScrollState(initialScrollState);\n    }\n  }, [getChatId(chat), loading, scrollState.height]);\n\n  const onScroll = React.useCallback(\n    async (event: React.UIEvent<HTMLUListElement>) => {\n      const { currentTarget } = event;\n      if (!currentTarget || !chat || !!chat.noMoreData) return;\n      if (currentTarget.scrollTop === 0) {\n        if (messageCount >= pageSize && !loading && props.onNeedMoreMessages) {\n          setScrollState({\n            autoScroll: false,\n            height: currentTarget.scrollHeight\n          });\n          props.onNeedMoreMessages(chat);\n        }\n      }\n    },\n    [chat, loading]\n  );\n\n  const handleMenuPopup = (\n    message: ChatMessage,\n    event: React.MouseEvent<HTMLElement>\n  ) => {\n    const canCopy = message.messageType === \"text\";\n    const canDelete =\n      user.userId === message.userId &&\n      !!props.onMeesageDelete &&\n      new Date().getTime() - new Date(message.cdate).getTime() <= 1000 * 60 * 2;\n    if (!canCopy && !canDelete) {\n      setMenuState(initialMenuState);\n      return;\n    }\n    event.preventDefault();\n    setMenuState({\n      message,\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4,\n      canCopy,\n      canDelete\n    });\n  };\n\n  const handleMenuClose = () => {\n    setMenuState(initialMenuState);\n  };\n\n  const handleCopy = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (!message) return;\n    navigator.clipboard.writeText(message.content);\n  }, [menuState.message]);\n\n  const handleDelete = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (props.onMeesageDelete && chat && message)\n      props.onMeesageDelete(chat, message);\n  }, [menuState.message]);\n\n  //  console.log(\"chat\", chat);\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <Box display=\"flex\" flexDirection=\"row\">\n        {chat && isMobile && (\n          <Tooltip title=\"Вернуться в конференцию\">\n            <IconButton\n              aria-label=\"exit room\"\n              onClick={() => props.onExitRoom && props.onExitRoom(chat)}\n            >\n              <ArrowBackIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {/* {!isMobile && <CheckAudiVideoPerm />} */}\n\n        <RoomHeader\n          apiUrl={apiUrl}\n          user={user}\n          chat={chat}\n          typing={typing}\n          conference={conference}\n          conferenceJoined={conferenceJoined}\n          operators={props.operators}\n          className={classes.roomHeader}\n          onVideoCall={props.onVideoCall}\n          onVideoEnd={props.onVideoEnd}\n          onConferencePause={props.onConferencePause}\n          onOperatorAdd={props.onOperatorAdd}\n          onLeaveGroup={props.onLeaveGroup}\n        />\n        {loading && (\n          <div className={classes.roomProgress}>\n            <CircularProgress size={20} />\n          </div>\n        )}\n      </Box>\n      <Divider />\n      <CardContent className={classes.messageListOuter}>\n        {!isEmpty(messages) ? (\n          <List className={classes.messageList} onScroll={onScroll}>\n            {messages != null &&\n              (messages as ChatMessage[]).map((message, inx) => (\n                <Message\n                  key={inx}\n                  apiUrl={apiUrl}\n                  user={user}\n                  message={message}\n                  owner={users[message.userId]}\n                  isGroupMessage={!!chat?.groupId}\n                  isUserFirst={\n                    inx === 0 ||\n                    messages[inx - 1].messageType === \"notify\" ||\n                    messages[inx - 1].userId !== messages[inx].userId\n                  }\n                  isUserLast={\n                    inx === messages.length - 1 ||\n                    messages[inx + 1].messageType === \"notify\" ||\n                    messages[inx + 1].userId !== messages[inx].userId\n                  }\n                  onContextMenu={event => handleMenuPopup(message, event)}\n                  refOnLastMess={\n                    inx === messages.length - 1 ? refOnLastMess : null\n                  }\n                />\n              ))}\n          </List>\n        ) : null}\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Entry\n          chat={chat}\n          onTyping={props.onTyping}\n          onSendMessage={props.onSendMessage}\n        />\n      </CardContent>\n      <Menu\n        keepMounted\n        open={menuState.mouseY !== null}\n        onClose={handleMenuClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          menuState.mouseY !== null && menuState.mouseX !== null\n            ? { top: menuState.mouseY, left: menuState.mouseX }\n            : undefined\n        }\n      >\n        <MenuItem onClick={handleCopy} disabled={!menuState.canCopy}>\n          <span className={classes.flexAll}>{t(\"CHAT.MESSAGE.MENU.COPY\")}</span>\n          <ListItemIcon className={classes.flexEnd}>\n            <FileCopyIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n        <MenuItem onClick={handleDelete} disabled={!menuState.canDelete}>\n          <span className={classes.flexAll}>\n            {t(\"CHAT.MESSAGE.MENU.DELETE\")}\n          </span>\n          <ListItemIcon className={classes.flexEnd}>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n      </Menu>\n    </Card>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport {\n  Avatar,\n  Badge,\n  Box,\n  Chip,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles, withStyles } from \"@mui/styles\";\n\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport { formatTime, getChatName } from \"../utils/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatMessage, ChatRoom, Contact, Group, SetTyping } from \"../types\";\n\ntype RoomListItemProps = {\n  apiUrl: string;\n  chat: ChatRoom;\n  active: boolean;\n  typing: SetTyping | null;\n  onClick: React.MouseEventHandler<HTMLDivElement> | undefined;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      flex: \"1 1 auto\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n    time: {\n      paddingLeft: theme.spacing(1),\n      justifyContent: \"flex-end\",\n      whiteSpace: \"nowrap\",\n    },\n    unread: {\n      justifyContent: \"flex-end\",\n      maxHeight: 20,\n    },\n    avatarGroup: {\n      backgroundColor: \"#28B7C6\",\n      color: \"#fff\",\n    },\n  })\n);\n\nconst getMessageText = (\n  message: ChatMessage | null,\n  t: (key: string) => string\n) => {\n  if (!message) return null;\n  switch (message.messageType) {\n    case \"text\":\n      return message.content;\n    case \"image\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.IMAGE\")}]`;\n    case \"video\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.VIDEO\")}]`;\n    case \"file\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.FILE\")}]`;\n    case \"notify\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.NOTIFY\")}]`;\n    default:\n      return null;\n  }\n};\n\nconst TypingBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: \"#44b700\",\n      color: \"#44b700\",\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      \"&::after\": {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"50%\",\n        animation: \"$ripple 1.2s infinite ease-in-out\",\n        border: \"1px solid currentColor\",\n        content: '\"\"',\n      },\n    },\n    \"@keyframes ripple\": {\n      \"0%\": {\n        transform: \"scale(.8)\",\n        opacity: 1,\n      },\n      \"100%\": {\n        transform: \"scale(2.4)\",\n        opacity: 0,\n      },\n    },\n  })\n)(Badge);\n\nconst OnlineBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: theme.palette.primary.main,\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    },\n  })\n)(Badge);\n\nconst contactAvatar = (\n  apiUrl: string,\n  contact: Contact,\n  typing: SetTyping | null\n): JSX.Element => {\n  const avatar = (\n    <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n  );\n\n  const isTyping = !!typing?.contactId && typing?.userId === contact.userId;\n  if (isTyping)\n    return (\n      <TypingBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </TypingBadge>\n    );\n\n  if (contact?.online)\n    return (\n      <OnlineBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </OnlineBadge>\n    );\n\n  return avatar;\n};\n\nconst RoomListItem: React.FC<RoomListItemProps> = (\n  props: RoomListItemProps\n) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { apiUrl, chat, typing } = props;\n  const roomName = getChatName(chat);\n\n  const avatar = (chat as Group).groupId ? (\n    <Avatar alt={roomName} className={classes.avatarGroup}>\n      <GroupIcon />{\" \"}\n    </Avatar>\n  ) : (\n    contactAvatar(apiUrl, chat as Contact, typing)\n  );\n\n  const lastMessage =\n    chat.messages && chat.messages.length > 0\n      ? chat.messages[chat.messages.length - 1]\n      : null;\n\n  const roomText = getMessageText(lastMessage, t);\n  const roomTime = lastMessage?.cdate;\n\n  return (\n    <ListItem button selected={props.active} onClick={props.onClick}>\n      <ListItemAvatar>{avatar}</ListItemAvatar>\n      <ListItemText\n        secondaryTypographyProps={{ component: \"span\" }}\n        primary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomName}</span>\n            <span className={classes.time}>{formatTime(roomTime)}</span>\n          </Box>\n        }\n        secondary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomText}</span>\n            {chat.unreadCount ? (\n              <Chip\n                className={classes.unread}\n                component=\"span\"\n                size=\"small\"\n                color=\"primary\"\n                label={chat.unreadCount}\n              />\n            ) : null}\n          </Box>\n        }\n      />\n    </ListItem>\n  );\n};\nexport default RoomListItem;\n","import React from \"react\";\nimport List from \"@mui/material/List\";\nimport { Card, CardHeader, Divider, TextField } from \"@mui/material\";\nimport RoomListItem from \"./RoomListItem\";\nimport {\n  chatRoomComparer,\n  getChatId,\n  getChatName,\n  isEmpty,\n} from \"../utils/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatRoom, Contact, Group, SetTyping, User } from \"../types\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  searchField: {\n    width: \"100%\",\n  },\n  listStyle: {\n    height: \"89.5%\",\n    overflowY: \"auto\",\n    scrollbarColor: \"#6b6b6b #fff\",\n    \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n      backgroundColor: \"#fff\",\n    },\n    \"&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb\": {\n      borderRadius: 8,\n      backgroundColor: \"#d5d9ef\",\n      border: \"5px solid #fff\",\n    },\n    \"&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus\": {\n      backgroundColor: \"#fff\",\n    },\n    \"&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active\": {\n      backgroundColor: \"#73d7f5\",\n      border: \"3px solid #fff\",\n    },\n    \"&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover\": {\n      backgroundColor: \"#73d7f5\",\n      border: \"3px solid #fff\",\n    },\n    \"&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner\": {\n      backgroundColor: \"#fff\",\n    },\n  },\n}));\n\ntype RoomListProps = {\n  apiUrl: string;\n  user: User;\n  activeRoom: ChatRoom | null;\n  groups: Group[];\n  contacts: Contact[];\n  typing: SetTyping | null;\n  onChangeChat?: (chat: ChatRoom) => void;\n};\n\nconst filterChats = (chats: ChatRoom[], filter: string | null): ChatRoom[] => {\n  if (filter === null) return chats;\n  const lowerFilter = filter.toLowerCase();\n  return chats.filter(\n    (chat) =>\n      getChatName(chat).toLowerCase().indexOf(lowerFilter.toLowerCase()) !== -1\n  );\n};\n\nconst sortChats = (\n  userId: number,\n  groups: ChatRoom[],\n  contacts: ChatRoom[]\n) => {\n  let roomArr = [...groups, ...contacts];\n  //console.log('groups', groups, 'contacts', contacts);\n\n  // Сортировать окно чата (по времени последних сообщений)\n  roomArr = roomArr.sort(chatRoomComparer);\n\n  // Проверяем, есть ли список, который нужно закрепить\n  const topChatId = localStorage.getItem(`${userId}-topChatId`) as string;\n  if (topChatId) {\n    const chat = roomArr.find((c) => getChatId(c) === topChatId);\n    if (chat) {\n      // На первое место\n      roomArr = roomArr.filter((k) => getChatId(k) !== topChatId);\n      chat.isTop = true;\n      roomArr.unshift(chat);\n    }\n  }\n\n  return roomArr;\n};\n\nconst RoomList: React.FC<RoomListProps> = (props: RoomListProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [chats, setChats] = React.useState<ChatRoom[]>(\n    sortChats(\n      props.user.userId,\n      filterChats(props.groups, null),\n      filterChats(props.contacts, null)\n    )\n  );\n\n  const onSearchChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    //console.log(\"e.target.value\", e.target.value);\n\n    setChats(\n      sortChats(\n        props.user.userId,\n        filterChats(props.groups, e.target.value),\n        filterChats(props.contacts, e.target.value)\n      )\n    );\n  };\n  //const activeItem = (id: number) => id === props.activeRoom?.userId;\n\n  //console.log(\"chats\", chats);\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <CardHeader\n        title={\n          <TextField\n            className={classes.searchField}\n            label={t(\"CHAT.INPUT_SEARCH_CONTACT\")}\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            onChange={onSearchChange}\n          />\n        }\n      />\n      <Divider />\n      <List aria-label=\"rooms\" className={classes.listStyle}>\n        {!isEmpty(chats) &&\n          chats.map(\n            (chat) =>\n              !isEmpty(chat) && (\n                <RoomListItem\n                  key={getChatId(chat)}\n                  apiUrl={props.apiUrl}\n                  chat={chat}\n                  active={chat === props.activeRoom}\n                  typing={props.typing}\n                  onClick={() =>\n                    props.onChangeChat != null && props.onChangeChat(chat)\n                  }\n                />\n              )\n          )}\n      </List>\n    </Card>\n  );\n};\nexport default RoomList;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { ConferenceData } from \"../types\";\nfunction updateUrlParameter(url: string, param: string, value: string) {\n  const regex = new RegExp(\"(\" + param + \"=)[^&]+\");\n  return url.replace(regex, \"$1\" + value);\n}\nconst transLang = (lang: string) =>\n  lang === \"ru\" ? \"rus\" : lang === \"fr\" ? \"fra\" : lang === \"en\" ? \"eng\" : \"\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 4\n  }\n}));\n\ntype ConferenceProps = {\n  conference: ConferenceData | null;\n  onClose: (conference: ConferenceData | null) => void;\n  langCode?: string | null;\n};\n\nconst Conference: React.FC<ConferenceProps> = ({\n  conference,\n  onClose,\n  langCode = \"en\"\n}: ConferenceProps) => {\n  const classes = useStyles();\n  const ref = React.useRef<HTMLIFrameElement>(null);\n  const confUrl =\n    conference?.url && langCode\n      ? updateUrlParameter(conference?.url, \"lang\", transLang(langCode))\n      : \"\";\n\n  useEffect(() => {\n    const listener = ({ source, data }: MessageEvent) => {\n      if (source === ref.current?.contentWindow) {\n        const { type } = data;\n\n        if (\n          [\n            \"notSupported\",\n            \"connectionFail\",\n            // \"loginFail\",\n            \"callFail\",\n            \"hangUp\",\n            \"remoteHangUp\"\n            // \"onParticipantLeft\"\n          ].includes(type)\n        )\n          onClose(conference);\n      }\n    };\n    window.addEventListener(\"message\", listener);\n    return () => {\n      window.removeEventListener(\"message\", listener);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conference?.id, langCode]);\n\n  return (\n    <iframe\n      title=\"conference\"\n      className={classes.root}\n      src={confUrl}\n      allowFullScreen\n      allow=\"microphone; camera; autoplay; display-capture\"\n      ref={ref}\n    />\n  );\n};\nexport default Conference;\n","import React from \"react\";\nimport { Avatar, Button,  Paper } from \"@mui/material\";\nimport { ConferenceData, Contact } from \"../types\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  pulse: {\n    height: 100,\n    width: 100,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n    \"&::before\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\",\n    },\n    \"&::after\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\",\n      animationDelay: \"0.3s\",\n    },\n  },\n  avatar: {\n    width: \"80%\",\n    height: \"80%\",\n  },\n  footer: {\n    width: \"100%\",\n    alignSelf: \"flex-end\",\n    paddingTop: 64,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  \"@keyframes pulse\": {\n    \"0%\": {\n      transform: \"scale(0.5)\",\n      opacity: 0,\n    },\n    \"50%\": {\n      transform: \"scale(1)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(1.3)\",\n      opacity: 0,\n    },\n  },\n}));\n\ntype ConferenceCallProps = {\n  conference: ConferenceData;\n  contact: Contact;\n  apiUrl: string;\n  onAccept: (conference: ConferenceData) => void;\n};\n\nconst ConferenceCall: React.FC<ConferenceCallProps> = ({\n  conference,\n  contact,\n  apiUrl,\n  onAccept,\n}: ConferenceCallProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.pulse}>\n        {contact ? (\n          <Avatar\n            className={classes.avatar}\n            alt={contact.username}\n            src={`${apiUrl}${contact.avatar}`}\n          />\n        ) : (\n          <Avatar className={classes.avatar} />\n        )}\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => onAccept(conference)}\n        >\n          {t(\"CHAT.CONFERENCE.JOIN\")}\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n\nexport default ConferenceCall;\n","import React from \"react\";\nimport {\n  AddGroupMessages,\n  AddPrivateMessages,\n  ChatRoom,\n  Contact,\n  ContactGather,\n  Group,\n  GroupGather,\n  GroupMember,\n  GroupMessage,\n  MessageOperation,\n  PrivateMessage,\n  SetActiveRoom,\n  //SetUser,\n  SetTyping,\n  User,\n  ConferenceData,\n  GroupMap\n} from \"../types\";\nimport { chatRoomComparer } from \"../utils/common\";\n\nexport interface ChatState {\n  tokenKey: string;\n  user: User;\n  token: string;\n  activeRoom: ChatRoom | null;\n  chatOld: ChatRoom | null;\n\n  groupGather: GroupGather;\n  userGather: ContactGather;\n  contactGather: ContactGather;\n  operators: Contact[];\n  initialContactId: number | null;\n  conference: {\n    data: ConferenceData | null;\n    joined: boolean;\n    ringPlayed: boolean;\n  };\n  typing: SetTyping | null;\n  loading: boolean;\n  error?: string;\n  success?: string;\n}\n\nconst emptyUser: User = {\n  userId: 0,\n  username: \"\",\n  password: \"\",\n  avatar: \"\",\n  langCode: \"\"\n};\n\nconst emptyChatState: ChatState = {\n  tokenKey: \"\", // ключ, где хранить токен\n  user: emptyUser, // пользователь\n  token: \"\", // токен\n  activeRoom: null, // активная комната\n  chatOld: null, // активная комната\n\n  groupGather: {}, // список групп\n  userGather: {}, // список онлайн\n  contactGather: {}, // контакты\n  operators: [], // операторы\n  initialContactId: null, // начальный контакт\n  conference: {\n    data: null, // данные конференции\n    joined: false,\n    ringPlayed: false\n  },\n  typing: null, // кто печатает текст\n  loading: false, // загрузка данных\n  error: undefined, // ошибка\n  success: undefined // НЕ ошибка\n};\n\ntype ChatActionType =\n  | \"ADD_GROUP_MEMBER\"\n  | \"ADD_GROUP_MESSAGE\"\n  | \"ADD_GROUP_MESSAGES\"\n  | \"SET_GROUP_MESSAGES\"\n  | \"ADD_PRIVATE_MESSAGE\"\n  | \"ADD_PRIVATE_MESSAGES\"\n  | \"SET_PRIVATE_MESSAGES\"\n  | \"SET_ACTIVE_ROOM\"\n  | \"UPDATE_ACTIVE_ROOM\"\n  | \"SET_GROUP_GATHER\"\n  | \"SET_CONTACT_GATHER\"\n  | \"SET_USER_GATHER\"\n  | \"DEL_GROUP\"\n  | \"DEL_GROUP_MEMBER\"\n  | \"DEL_CONTACT\"\n  | \"ADD_CONTACT_UNREAD_GATHER\"\n  | \"LOSE_CONTACT_UNREAD_GATHER\"\n  | \"ADD_GROUP_UNREAD_GATHER\"\n  | \"LOSE_GROUP_UNREAD_GATHER\"\n  | \"REVOKE_MESSAGE\"\n  | \"USER_ONLINE\"\n  | \"USER_OFFLINE\"\n  | \"UPDATE_USER_INFO\"\n  | \"SET_INITIAL_CONTACT_ID\"\n  | \"SET_CONFERENCE\"\n  | \"JOIN_CONFERENCE\"\n  | \"PAUSE_CONFERENCE\"\n  | \"STOP_CONFERENCE\"\n  | \"SET_TYPING\"\n  | \"MARK_AS_READ\"\n  | \"UPDATE_GROUP_INFO\"\n  | \"MARK_PRIVATE_MESSAGES_READ\"\n  | \"SET_LOADING\"\n  | \"SET_ERROR\"\n  | \"SET_SUCCES\"\n  | \"SET_USER\"\n  | \"SET_TOKEN\"\n  | \"CLEAR_USER\"\n  | \"CLEAR_CHAT_DATA\"\n  | \"SET_OPERATORS\";\n\ntype Action = {\n  type: ChatActionType;\n  payload?:\n    | null\n    | boolean\n    | number\n    | string\n    | Group\n    | Contact\n    | User\n    | PrivateMessage\n    | GroupMessage\n    | SetTyping\n    | MessageOperation\n    | GroupMember\n    | AddPrivateMessages\n    | AddGroupMessages\n    | SetActiveRoom\n    | ConferenceData\n    | Contact[]\n    | GroupMap;\n};\n\nconst getFreshActiveRoom = (state: ChatState) => {\n  if (state.activeRoom)\n    return (\n      state.groupGather[(state.activeRoom as Group).groupId] ||\n      state.contactGather[state.activeRoom.userId]\n    );\n  return null;\n};\n\nconst getActiveRoom = (state: ChatState) => {\n  const { activeRoom, initialContactId, contactGather } = state;\n  let newActiveRoom: ChatRoom | null = null;\n  if (initialContactId) {\n    newActiveRoom = contactGather[initialContactId];\n  } else if (activeRoom) {\n    newActiveRoom = getFreshActiveRoom(state);\n  } else {\n    // ищем комнату с самым свежим сообщением\n    const rooms = [\n      ...Object.values(state.contactGather),\n      ...Object.values(state.groupGather)\n    ].sort(chatRoomComparer);\n    if (rooms.length > 0) newActiveRoom = rooms[0];\n  }\n  return newActiveRoom;\n};\n\nconst setUserOnline = (\n  state: ChatState,\n  userId: number,\n  online: 0 | 1\n): ChatState => {\n  const newState = { ...state };\n  // Обновить статусы приватных чатов\n  if (state.contactGather[userId])\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      online\n    };\n\n  // Обновить статус участника в группах\n  for (const group of Object.values(state.groupGather) as Group[]) {\n    if (!group.members) continue;\n    const member = group.members.find(m => m.userId === userId);\n    if (member) {\n      const index = group.members.indexOf(member);\n      group.members[index] = { ...member, online };\n    }\n  }\n  // Обновить статус операторов\n  const idx = newState.operators.findIndex(it => it.userId === userId);\n  if (idx !== -1)\n    newState.operators[idx] = { ...newState.operators[idx], online };\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addGroupMessage = (state: ChatState, payload: GroupMessage) => {\n  const newState = { ...state };\n  const { groupId } = payload;\n  if (newState.groupGather[groupId]) {\n    if (newState.groupGather[groupId].messages) {\n      newState.groupGather[groupId].messages = [\n        ...(newState.groupGather[groupId].messages as GroupMessage[]),\n        payload\n      ];\n    } else {\n      newState.groupGather[groupId] = {\n        ...state.groupGather[groupId],\n        messages: [payload]\n      };\n    }\n  }\n\n  // увеличиваем счетчик новых сообщений, если это не активная комната и сообщение не от нас\n  const { activeRoom } = newState;\n  if (\n    activeRoom &&\n    (activeRoom as Group).groupId !== groupId &&\n    payload.userId !== state.user.userId\n  ) {\n    return groupUnreadGather(newState, groupId, (x?: number) => (x || 0) + 1);\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addPrivateMessage = (state: ChatState, payload: PrivateMessage) => {\n  const newState = { ...state };\n  const contactId =\n    payload.contactId === state.user.userId\n      ? payload.userId\n      : payload.contactId;\n\n  // 1 добавляем сообщение\n  if (newState.contactGather[contactId].messages) {\n    newState.contactGather[contactId].messages = [\n      ...(newState.contactGather[contactId].messages as PrivateMessage[]),\n      payload\n    ];\n  } else {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [payload]\n    };\n  }\n\n  // 2 если это сообщение в неактивной комнате и источник не мы (в соседней вкладке), то увеличиваем счетчик непрочитанных\n  if (\n    newState.activeRoom?.userId !== contactId &&\n    payload.userId !== state.user.userId\n  ) {\n    return contactUnreadGather(\n      newState,\n      contactId,\n      (x?: number) => (x || 0) + 1\n    );\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst contactUnreadGather = (\n  state: ChatState,\n  userId: number,\n  predicate: (x?: number) => number\n) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      unreadCount: predicate(newState.contactGather[userId].unreadCount)\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst groupUnreadGather = (\n  state: ChatState,\n  groupId: number,\n  predicate: (x?: number) => number\n) => {\n  const newState = { ...state };\n\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      unreadCount: predicate(newState.groupGather[groupId].unreadCount)\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst revokeMessage = (state: ChatState, payload: MessageOperation) => {\n  const { userId } = state.user;\n  const newState = { ...state };\n  const userName =\n    payload.username || newState.userGather[payload.userId as number].username;\n  if (payload.groupId) {\n    const { messages } = newState.groupGather[payload.groupId];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find(message => message._id === payload._id);\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName\n        };\n      }\n    }\n  } else {\n    const { messages } = newState.contactGather[\n      payload.contactId === userId\n        ? (payload.userId as number)\n        : (payload.contactId as number)\n    ];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find(message => message._id === payload._id);\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName\n        };\n      }\n    }\n  }\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst delContact = (state: ChatState, userId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.contactGather[userId];\n  delete newState.contactGather[userId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroup = (state: ChatState, groupId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.groupGather[groupId];\n  delete newState.groupGather[groupId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroupMember = (state: ChatState, data: GroupMap) => {\n  const newState = { ...state };\n\n  const group = newState.groupGather[data.groupId];\n  if (group) {\n    group.members = group.members?.filter(it => it.userId !== data.userId);\n  }\n\n  return newState;\n};\n\nconst updateGroupInfo = (state: ChatState, group: Group) => {\n  const newState = { ...state };\n\n  const { groupId, name, notice } = group;\n  const info = newState.groupGather[groupId];\n  if (info) {\n    newState.groupGather[groupId] = { ...info, name, notice };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst updateUserInfo = (state: ChatState, user: User) => {\n  const newState = { ...state };\n\n  const { userId, username, avatar } = user;\n\n  if (newState.userGather[userId]) {\n    newState.userGather[userId] = {\n      ...newState.userGather[userId],\n      username,\n      avatar\n    };\n  }\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      username,\n      avatar\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMember = (state: ChatState, payload: GroupMember) => {\n  const members: Contact[] = payload.members.map(member => ({\n    ...member,\n    isManager: 0\n  }));\n\n  const newState = { ...state };\n\n  if (newState.groupGather[payload.groupId].members && members) {\n    newState.groupGather[payload.groupId].members = [\n      ...(state.groupGather[payload.groupId].members as Contact[]),\n      ...members\n    ];\n  } else {\n    newState.groupGather[payload.groupId] = {\n      ...newState.groupGather[payload.groupId],\n      members\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst markPrivateMessagesRead = (state: ChatState, userId: number) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    const updatedValue = { ...newState.contactGather[userId] };\n\n    if (updatedValue.messages) {\n      for (let i = 0; i < updatedValue.messages.length; i++)\n        updatedValue.messages[i] = {\n          ...updatedValue.messages[i],\n          status: 1\n        };\n    }\n    newState.contactGather[userId] = updatedValue;\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addPrivateMessages = (state: ChatState, data: AddPrivateMessages) => {\n  const newState = { ...state };\n\n  const { messages, contactId } = data;\n\n  if (newState.contactGather[contactId]) {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [\n        ...(messages || []),\n        ...(newState.contactGather[contactId].messages || [])\n      ],\n      noMoreData: messages?.length ? messages?.length < data.pageSize : false\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMessages = (state: ChatState, data: AddGroupMessages) => {\n  const newState = { ...state };\n\n  const { groupId, messages, userArr: users } = data;\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      messages: [\n        ...(messages || []),\n        ...(newState.groupGather[groupId].messages || [])\n      ],\n      noMoreData: messages?.length ? messages?.length < data.pageSize : false\n    };\n  }\n\n  newState.userGather = { ...newState.userGather };\n  for (const user of users) {\n    if (!newState.userGather[user.userId]) {\n      newState.userGather[user.userId] = user;\n    }\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst setActiveRoom = (state: ChatState, data: SetActiveRoom) => {\n  //if (state.activeRoom && data.ifNotExists) return state;\n  return {\n    ...state,\n    chatOld: state.activeRoom != null ? { ...state.activeRoom } : null,\n    activeRoom: data.groupId\n      ? state.groupGather[data.groupId]\n      : data.contactId\n      ? state.contactGather[data.contactId]\n      : null\n  };\n};\n\nconst setToken = (state: ChatState, token: string): ChatState => {\n  localStorage.setItem(state.tokenKey, token);\n  return {\n    ...state,\n    token\n  };\n};\n\nconst clearUser = (state: ChatState): ChatState => {\n  localStorage.removeItem(state.tokenKey);\n  return {\n    ...state,\n    token: \"\",\n    user: emptyUser\n  };\n};\n\nconst setConference = (\n  state: ChatState,\n  conference: ConferenceData\n): ChatState => {\n  return {\n    ...state,\n    conference: {\n      data: { ...conference },\n      joined: conference?.userId === state.user.userId,\n      ringPlayed: conference?.userId !== state.user.userId\n    }\n  };\n};\n\nconst pauseConference = (\n  state: ChatState,\n  conference: ConferenceData\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: {\n      data: { ...state.conference.data },\n      joined: false,\n      ringPlayed: false\n    }\n  };\n};\n\nconst stopConference = (\n  state: ChatState,\n  conference: ConferenceData\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: { data: null, joined: false, ringPlayed: false }\n  };\n};\n\nfunction chatReducer(state: ChatState, action: Action): ChatState {\n  switch (action.type) {\n    case \"SET_GROUP_GATHER\":\n      return {\n        ...state,\n        groupGather: {\n          ...state.groupGather,\n          [(action.payload as Group).groupId]: action.payload as Group\n        }\n      };\n    case \"SET_CONTACT_GATHER\":\n      return {\n        ...state,\n        contactGather: {\n          ...state.contactGather,\n          [(action.payload as Contact).userId]: action.payload as Contact\n        }\n      };\n    case \"DEL_GROUP\":\n      return delGroup(state, action.payload as number);\n    case \"DEL_GROUP_MEMBER\":\n      return delGroupMember(state, action.payload as GroupMap);\n    case \"DEL_CONTACT\":\n      return delContact(state, (action.payload as Contact).userId);\n    case \"SET_USER_GATHER\":\n      return {\n        ...state,\n        userGather: {\n          ...state.userGather,\n          [(action.payload as User).userId]: action.payload as User\n        }\n      };\n    case \"UPDATE_ACTIVE_ROOM\":\n      return { ...state, activeRoom: getActiveRoom(state) };\n    case \"SET_ACTIVE_ROOM\":\n      return setActiveRoom(state, action.payload as SetActiveRoom);\n    case \"USER_ONLINE\":\n      return setUserOnline(state, action.payload as number, 1);\n    case \"USER_OFFLINE\":\n      return setUserOnline(state, action.payload as number, 0);\n    case \"ADD_GROUP_MESSAGE\":\n      return addGroupMessage(state, action.payload as GroupMessage);\n    case \"ADD_PRIVATE_MESSAGE\":\n      return addPrivateMessage(state, action.payload as PrivateMessage);\n    case \"ADD_GROUP_UNREAD_GATHER\":\n      return groupUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1\n      );\n    case \"ADD_CONTACT_UNREAD_GATHER\":\n      return contactUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1\n      );\n    case \"SET_TYPING\":\n      return { ...state, typing: action.payload as SetTyping };\n    case \"LOSE_GROUP_UNREAD_GATHER\":\n      return groupUnreadGather(state, action.payload as number, () => 0);\n    case \"LOSE_CONTACT_UNREAD_GATHER\":\n      return contactUnreadGather(state, action.payload as number, () => 0);\n    case \"REVOKE_MESSAGE\":\n      return revokeMessage(state, action.payload as MessageOperation);\n    case \"UPDATE_GROUP_INFO\":\n      return updateGroupInfo(state, action.payload as Group);\n    case \"UPDATE_USER_INFO\":\n      return updateUserInfo(state, action.payload as User);\n    case \"ADD_GROUP_MEMBER\":\n      return addGroupMember(state, action.payload as GroupMember);\n    case \"SET_CONFERENCE\":\n      return setConference(state, action.payload as ConferenceData);\n    case \"JOIN_CONFERENCE\":\n      return {\n        ...state,\n        conference: {\n          data: { ...(action.payload as ConferenceData) },\n          joined: true,\n          ringPlayed: false\n        }\n      };\n    case \"PAUSE_CONFERENCE\":\n      return pauseConference(state, action.payload as ConferenceData);\n    case \"STOP_CONFERENCE\":\n      return stopConference(state, action.payload as ConferenceData);\n    case \"MARK_PRIVATE_MESSAGES_READ\":\n      return markPrivateMessagesRead(state, action.payload as number);\n    case \"ADD_PRIVATE_MESSAGES\":\n      return addPrivateMessages(state, action.payload as AddPrivateMessages);\n    case \"ADD_GROUP_MESSAGES\":\n      return addGroupMessages(state, action.payload as AddGroupMessages);\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        loading: action.payload as boolean,\n        error: \"\"\n      };\n    case \"SET_ERROR\":\n      return {\n        ...state,\n        error: action.payload as string,\n        success: undefined\n      };\n    case \"SET_SUCCES\":\n      return {\n        ...state,\n        success: action.payload as string,\n        error: undefined\n      };\n    case \"SET_TOKEN\":\n      return setToken(state, action.payload as string);\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.payload as User\n      };\n    case \"CLEAR_USER\":\n      return clearUser(state);\n    case \"CLEAR_CHAT_DATA\":\n      return {\n        ...state,\n        activeRoom: null,\n        groupGather: {},\n        userGather: {},\n        contactGather: {},\n        conference: {\n          data: null,\n          joined: false,\n          ringPlayed: false\n        },\n        typing: null\n      };\n    case \"SET_OPERATORS\":\n      return {\n        ...state,\n        operators: action.payload as Contact[]\n      };\n  }\n\n  return state;\n}\n\nexport type ChatDispatch = React.Dispatch<Action>;\nconst emptyDispatch: ChatDispatch = () => null;\n\ntype ChatProviderProps = {\n  defLang: string | undefined;\n  tokenKey: string;\n  children: JSX.Element | JSX.Element[];\n};\n\nexport const ChatContext = React.createContext({\n  state: emptyChatState,\n  dispatch: emptyDispatch\n});\n\nexport const ChatProvider: React.FC<ChatProviderProps> = (\n  props: ChatProviderProps\n) => {\n  emptyUser.langCode = props.defLang;\n  const token = localStorage.getItem(props.tokenKey) as string;\n  const chatState: ChatState = {\n    ...emptyChatState,\n    tokenKey: props.tokenKey,\n    token\n  };\n\n  const [state, dispatch] = React.useReducer(chatReducer, chatState);\n\n  return (\n    <ChatContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </ChatContext.Provider>\n  );\n};\n","import React, { createContext, useCallback, useContext } from \"react\";\nimport { ChatContext } from \"./ChatContext\";\nimport axios, { AxiosError, AxiosInstance } from \"axios\";\nimport { Contact, Group, PagingResponse, PrivateMessage } from \"../types\";\n\nexport interface IRestContext {\n  apiUrl: string;\n  pageSize: number;\n  fetch: AxiosInstance | null;\n  getPrivateMessages: (chat: Contact) => Promise<void>;\n  getGroupMessages: (chat: Group) => Promise<void>;\n  getUserByMmk: (\n    mmkId: string | null,\n    guid: string | null\n  ) => Promise<number | undefined>;\n}\nconst initialContext = {} as IRestContext;\n\nexport const RestContext: React.Context<IRestContext> = createContext(\n  initialContext\n);\n\ntype RestProviderProps = {\n  baseURLApi: string;\n  pageSize: number;\n  children: JSX.Element;\n};\n\nexport const RestProvider: React.FC<RestProviderProps> = ({\n  baseURLApi,\n  pageSize,\n  children\n}: RestProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n\n  const fetch: AxiosInstance = axios.create({\n    timeout: 60000, // Таймаут минута\n    baseURL: baseURLApi,\n    headers: {\n      \"Cache-Control\": \"no-cache\",\n      Pragma: \"no-cache\",\n      Authorization: `Bearer ${state.token}`\n    },\n    withCredentials: false\n  });\n\n  const getPrivateMessages = useCallback(\n    async (chat: Contact) => {\n      const contactId = chat.userId;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: \"SET_LOADING\", payload: true });\n        const { data } = await fetch.get(\"/contact/messages\", {\n          params: {\n            contactId,\n            current,\n            pageSize\n          }\n        });\n        if (data) {\n          dispatch({\n            type: \"ADD_PRIVATE_MESSAGES\",\n            payload: {\n              pageSize,\n              contactId,\n              messages: data as PrivateMessage[]\n            }\n          });\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: \"SET_ERROR\", payload: err.message });\n      } finally {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      }\n    },\n    [dispatch]\n  );\n\n  const getGroupMessages = useCallback(\n    async (chat: Group) => {\n      const { groupId } = chat;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: \"SET_LOADING\", payload: true });\n        const { data }: { data: PagingResponse } = await fetch.get(\n          \"/group/messages\",\n          {\n            params: {\n              groupId,\n              current,\n              pageSize\n            }\n          }\n        );\n        if (data) {\n          dispatch({\n            type: \"ADD_GROUP_MESSAGES\",\n            payload: {\n              pageSize,\n              groupId,\n              ...data\n            }\n          });\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: \"SET_ERROR\", payload: err.message });\n      } finally {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      }\n    },\n    [dispatch]\n  );\n\n  const getUserByMmk = async (mmkId: string | null, guid: string | null) => {\n    try {\n      const { data }: { data: number } = await fetch.get(\"/contact/find\", {\n        params: {\n          mmkId,\n          guid\n        }\n      });\n      if (data != null) {\n        return data;\n      }\n    } catch (error) {\n      console.log(\"err getUserByMmk\", error);\n    }\n  };\n  return (\n    <RestContext.Provider\n      value={{\n        apiUrl: baseURLApi,\n        pageSize,\n        fetch,\n        getPrivateMessages,\n        getGroupMessages,\n        getUserByMmk\n      }}\n    >\n      {children}\n    </RestContext.Provider>\n  );\n};\n","import React, { createContext, useContext, useEffect } from \"react\";\nimport { Socket } from \"socket.io-client\";\nimport { useSocket } from \"../hooks/useSocket\";\nimport {\n  ChatData,\n  Contact,\n  Group,\n  GroupMessage,\n  JoinGroup,\n  MessageOperation,\n  PrivateMessage,\n  SetTyping,\n  User,\n  ConferenceData,\n  SetActiveRoom,\n  GroupMap,\n} from \"../types\";\nimport { ChatContext } from \"./ChatContext\";\n\n// Формат ответа сервера\ninterface ServerRes {\n  code: number;\n  msg: string;\n  data: unknown;\n}\n\nexport interface ISocketContext {\n  socket: Socket | null;\n  online: boolean;\n}\nconst initialContext = {\n  online: false,\n} as ISocketContext;\n\nexport const SocketContext: React.Context<ISocketContext> =\n  createContext(initialContext);\n\ntype SocketProviderProps = {\n  wsUrl: string;\n  wsPath: string;\n  children: JSX.Element;\n};\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({\n  wsUrl,\n  wsPath,\n  children,\n}: SocketProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n  const { socket, online, disconnectSocket, connectSocket } = useSocket(\n    wsUrl,\n    wsPath,\n    state.token\n  );\n\n  useEffect(() => {\n    if (state.token) {\n      connectSocket();\n    }\n    return () => {\n      disconnectSocket();\n    };\n  }, [state.token, connectSocket]);\n\n  useEffect(() => {\n    if (!state.token) disconnectSocket();\n  }, [state.token, disconnectSocket]);\n\n  // listen unauthorized event\n  useEffect(() => {\n    const listener = (msg: string) => {\n      console.log(\"unauthorized msg\", msg);\n      dispatch({ type: \"CLEAR_USER\" });\n    };\n\n    // attach\n    socket?.on(\"unauthorized\", listener);\n    // detatch\n    return () => {\n      socket?.off(\"unauthorized\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen chatData event\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const payload = res.data as ChatData;\n      const groupArr = payload.groupData;\n      const contactArr = payload.contactData;\n      const userArr = payload.userData;\n      dispatch({ type: \"CLEAR_CHAT_DATA\" });\n      dispatch({ type: \"SET_USER\", payload: payload.user });\n      if (groupArr.length) {\n        for (const group of groupArr) {\n          socket?.emit(\"joinGroupSocket\", {\n            groupId: group.groupId,\n          });\n          dispatch({ type: \"SET_GROUP_GATHER\", payload: group });\n        }\n      }\n      if (contactArr.length) {\n        for (const contact of contactArr) {\n          socket?.emit(\"joinPrivateSocket\", {\n            contactId: contact.userId,\n          });\n          dispatch({ type: \"SET_CONTACT_GATHER\", payload: contact });\n        }\n      }\n      dispatch({ type: \"SET_OPERATORS\", payload: payload.operatorData });\n      if (userArr.length) {\n        for (const user_ of userArr) {\n          dispatch({ type: \"SET_USER_GATHER\", payload: user_ });\n        }\n      }\n      dispatch({ type: \"UPDATE_ACTIVE_ROOM\" });\n      dispatch({type: \"SET_CONFERENCE\", payload: payload.conferenceData})\n    };\n    socket?.on(\"chatData\", listener);\n    return () => {\n      socket?.off(\"chatData\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen user online\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: \"USER_ONLINE\", payload: res.data as number });\n    };\n    socket?.on(\"userOnline\", listener);\n    return () => {\n      socket?.off(\"userOnline\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen user offline\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: \"USER_OFFLINE\", payload: res.data as number });\n    };\n    socket?.on(\"userOffline\", listener);\n    return () => {\n      socket?.off(\"userOffline\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen private socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      console.log(\"Успешно вошел в приватный чат\");\n    };\n    socket?.on(\"joinPrivateSocket\", listener);\n    return () => {\n      socket?.off(\"joinPrivateSocket\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen group socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as JoinGroup;\n      const newUser: Contact = data.user;\n      newUser.online = 1;\n      const { group } = data;\n      const groupObj = state.groupGather[group.groupId];\n      // Информация о присоединении к группе новых пользователей\n      if (\n        groupObj &&\n        !groupObj.members?.find((member) => member.userId === newUser.userId)\n      ) {\n        newUser.isManager = 0;\n        groupObj.members?.push(newUser);\n        // Vue.prototype.$message.info(res.msg);\n      }\n      dispatch({ type: \"SET_USER_GATHER\", payload: newUser });\n    };\n    socket?.on(\"joinGroupSocket\", listener);\n    return () => {\n      socket?.off(\"joinGroupSocket\", listener);\n    };\n  }, [socket?.id, state.groupGather]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMessage;\n      dispatch({ type: \"ADD_GROUP_MESSAGE\", payload: data });\n      const { activeRoom } = state;\n      if (\n        activeRoom &&\n        (activeRoom as Group).groupId === data.groupId &&\n        data.userId !== state.user.userId\n      ) {\n        socket?.emit(\"markAsRead\", {\n          groupId: data.groupId,\n          _id: data._id,\n        });\n      }\n    };\n\n    socket?.on(\"groupMessage\", listener);\n    return () => {\n      socket?.off(\"groupMessage\", listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as PrivateMessage;\n      if (\n        data.contactId === state.user.userId ||\n        data.userId === state.user.userId\n      ) {\n        dispatch({\n          type: \"ADD_PRIVATE_MESSAGE\",\n          payload: data,\n        });\n\n        // если есть активная комната и это приватная комната (!groupId && userId) с отправителем сообщения (userId)\n        if (\n          state.activeRoom &&\n          !(state.activeRoom as Group).groupId &&\n          state.activeRoom?.userId === data.userId\n        ) {\n          socket?.emit(\"markAsRead\", {\n            contactId: data.userId,\n            _id: data._id,\n          });\n        }\n      }\n    };\n\n    socket?.on(\"privateMessage\", listener);\n    return () => {\n      socket?.off(\"privateMessage\", listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      if (timer) clearTimeout(timer);\n      dispatch({ type: \"SET_TYPING\", payload: res.data as SetTyping });\n      timer = setTimeout(() => {\n        dispatch({ type: \"SET_TYPING\", payload: null });\n      }, 1000);\n    };\n    socket?.on(\"typing\", listener);\n    return () => {\n      if (timer) clearTimeout(timer);\n      socket?.off(\"typing\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      if (data.userId === state.user.userId) {\n        if (data.groupId) {\n          dispatch({\n            type: \"LOSE_GROUP_UNREAD_GATHER\",\n            payload: data.groupId,\n          });\n        } else {\n          dispatch({\n            type: \"LOSE_CONTACT_UNREAD_GATHER\",\n            payload: data.contactId,\n          });\n        }\n      } else {\n        if (data.contactId)\n          dispatch({\n            type: \"MARK_PRIVATE_MESSAGES_READ\",\n            payload: data.userId,\n          });\n      }\n    };\n    socket?.on(\"markAsRead\", listener);\n    return () => {\n      socket?.off(\"markAsRead\", listener);\n    };\n  }, [socket?.id, state.user.userId]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      dispatch({ type: \"REVOKE_MESSAGE\", payload: data });\n    };\n    socket?.on(\"revokeMessage\", listener);\n    return () => {\n      socket?.off(\"revokeMessage\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({ type: \"SET_GROUP_GATHER\", payload: res.data as Group });\n    };\n    socket?.on(\"addGroup\", listener);\n    return () => {\n      socket?.off(\"addGroup\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: \"SET_CONTACT_GATHER\", payload: data });\n      dispatch({ type: \"SET_USER_GATHER\", payload: data });\n      socket?.emit(\"joinPrivateSocket\", {\n        contactId: data.userId,\n      });\n    };\n    socket?.on(\"addContact\", listener);\n    return () => {\n      socket?.off(\"addContact\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMap;\n      if (data.userId === state.user.userId) {\n        // если удаляем себя из группы\n        dispatch({ type: \"DEL_GROUP\", payload: data.groupId });\n      } else {\n        dispatch({ type: \"DEL_GROUP_MEMBER\", payload: data });\n      }\n    };\n    socket?.on(\"deleteGroup\", listener);\n    return () => {\n      socket?.off(\"deleteGroup\", listener);\n    };\n  }, [socket?.id, state.user]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: \"DEL_CONTACT\", payload: data });\n    };\n    socket?.on(\"deleteContact\", listener);\n    return () => {\n      socket?.off(\"deleteContact\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Group;\n      dispatch({ type: \"UPDATE_GROUP_INFO\", payload: data });\n    };\n    socket?.on(\"updateGroupInfo\", listener);\n    return () => {\n      socket?.off(\"updateGroupInfo\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as User;\n      dispatch({ type: \"UPDATE_USER_INFO\", payload: data });\n    };\n    socket?.on(\"updateUserInfo\", listener);\n    return () => {\n      socket?.off(\"updateUserInfo\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const { group, user: newUser } = res.data as JoinGroup;\n\n      if (!state.groupGather[group.groupId]) {\n        console.log(\"joined to a new group\");\n        // Если группы еще у нас нет, то получаем информацию о пользователях в группе\n        socket?.emit(\"chatData\");\n      } else if (newUser.userId !== state.user.userId) {\n        // Новые пользователи присоединяются к группе\n        dispatch({\n          type: \"ADD_GROUP_MEMBER\",\n          payload: {\n            groupId: group.groupId,\n            members: [newUser],\n          },\n        });\n      }\n    };\n    socket?.on(\"joinGroup\", listener);\n    return () => {\n      socket?.off(\"joinGroup\", listener);\n    };\n  }, [socket?.id, state.user, state.groupGather]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({ type: \"SET_CONFERENCE\", payload: res.data as ConferenceData });\n    };\n    socket?.on(\"startConference\", listener);\n    return () => {\n      socket?.off(\"startConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"PAUSE_CONFERENCE\",\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on(\"pauseConference\", listener);\n    return () => {\n      socket?.off(\"pauseConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"STOP_CONFERENCE\",\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on(\"stopConference\", listener);\n    return () => {\n      socket?.off(\"stopConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n    };\n    socket?.on(\"addOperator\", listener);\n    return () => {\n      socket?.off(\"addOperator\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"SET_ACTIVE_ROOM\",\n        payload: res.data as SetActiveRoom,\n      });\n    };\n    socket?.on(\"setActiveRoom\", listener);\n    return () => {\n      socket?.off(\"setActiveRoom\", listener);\n    };\n  }, [socket?.id]);\n\n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n","import React from 'react';\nimport { IconButton, Tooltip } from '@mui/material';\nimport SettingsSuggestIcon from '@mui/icons-material/SettingsSuggest';\nimport SettingsVoiceIcon from '@mui/icons-material/SettingsVoice';\nimport VideoSettingsIcon from '@mui/icons-material/VideoSettings';\nimport { ChatContext } from '../context/ChatContext';\nimport { useTranslation } from 'react-i18next';\ntype CheckAudiVideoPermProps = {\n  audio: boolean;\n  video: boolean;\n};\n\nconst CheckAudiVideoPerm: React.FC<CheckAudiVideoPermProps> = ({\n  audio,\n  video,\n}: CheckAudiVideoPermProps) => {\n  const { t } = useTranslation();\n  //const [havePermissions, setHavePermissions] = useState(false);\n  const { dispatch } = React.useContext(ChatContext);\n  const checkPermissions = () => {\n    const permissions = navigator.mediaDevices.getUserMedia({\n      audio,\n      video,\n    });\n    permissions\n      .then(data => {\n        console.log('permissions', data);\n        dispatch({\n          type: 'SET_SUCCES',\n          payload: t('CHAT.CONFERENCE.ALLOK'),\n        });\n      })\n      .catch(err => {\n        let payload = t('CHAT.CONFERENCE.ErrorAny');\n        if (err.name === 'NotFoundError') {\n          payload = t('CHAT.CONFERENCE.NotFoundError');\n        }\n        if (err.name === 'NotAllowedError') {\n          payload = t('CHAT.CONFERENCE.NotAllowedError');\n        }\n\n        dispatch({\n          type: 'SET_ERROR',\n          payload,\n        });\n        //setHavePermissions(false);\n        console.log('err', `${err.name} : ${err.message}`);\n      });\n  };\n\n  const title =\n    audio && video\n      ? t('CHAT.CONFERENCE.CheckCamMic')\n      : audio\n      ? t('CHAT.CONFERENCE.CheckMic')\n      : t('CHAT.CONFERENCE.CheckCam');\n  return (\n    <Tooltip title={title}>\n      <IconButton\n        aria-label=\"check\"\n        onClick={() => checkPermissions()}\n        size=\"large\"\n      >\n        {audio && video ? (\n          <SettingsSuggestIcon />\n        ) : audio ? (\n          <SettingsVoiceIcon />\n        ) : (\n          <VideoSettingsIcon />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default CheckAudiVideoPerm;\n","import React from \"react\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { Alert, Snackbar } from \"@mui/material\";\n\nconst ChatAlert: React.FC = () => {\n  // const { t } = useTranslation();\n  //const [havePermissions, setHavePermissions] = useState(false);\n  const {\n    state: { error, success },\n    dispatch\n  } = React.useContext(ChatContext);\n\n  const handleClose = () => {\n    dispatch({ type: \"SET_ERROR\", payload: undefined });\n    dispatch({ type: \"SET_SUCCES\", payload: undefined });\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={!!error || !!success}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <Alert onClose={handleClose} severity={error ? \"error\" : \"success\"}>\n        {error ? error : success}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default ChatAlert;\n","import * as React from \"react\";\nimport {\n  Container,\n  Box,\n  Grid,\n  useMediaQuery,\n  Paper,\n  IconButton,\n  Tooltip\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Room, RoomList, Conference } from \"../components\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { RestContext } from \"../context/RestContext\";\nimport { SocketContext } from \"../context/SocketContext\";\nimport {\n  ChatPa,\n  Group,\n  Contact,\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  ConferenceData\n} from \"../types\";\nimport { getParam, isEmpty, allMessCount } from \"../utils/common\";\nimport ConferenceCall from \"../components/ConferenceCall\";\nimport { ArrowForward } from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport CheckAudiVideoPerm from \"../components/CheckAudiVideoPerm\";\nimport ChatAlert from \"../components/Alert\";\n\n// Отключили проигрыш звука\n// const getRingAudio = (): HTMLAudioElement => {\n//   const audio = new Audio(\n//     process.env.PUBLIC_URL + '/audio/ring-in.ogg',\n//   );\n//   audio.loop = true;\n//   return audio;\n// };\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    minWidth: 640,\n    minHeight: 470,\n    height: \"100%\",\n    //width: `calc(100vw - ${theme.spacing(8)})`,\n    padding: 0,\n    [theme.breakpoints.down(\"sm\")]: {\n      height: `calc(100vh - ${theme.spacing(8)})`,\n      width: \"auto\",\n      minWidth: \"auto\",\n      minHeight: \"auto\",\n      overflow: \"hidden\"\n    }\n  },\n  innerBox: {\n    height: \"100%\",\n    width: \"100%\",\n    margin: 0,\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: 0\n    }\n  },\n  innerGrid: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  conAbsOnConf: {\n    position: \"absolute\",\n    top: 42,\n    left: 25,\n    zIndex: 1000,\n\n    margin: theme.spacing(3)\n  }\n}));\n\nexport const ChatPage: React.FC<ChatPa> = ({\n  activeGroupId,\n  activeChatUserId\n}: ChatPa) => {\n  const classes = useStyles();\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down(\"sm\")\n  );\n  const { t } = useTranslation();\n  const { state, dispatch } = React.useContext(ChatContext);\n  const { socket } = React.useContext(SocketContext);\n\n  const {\n    apiUrl,\n    pageSize,\n    getPrivateMessages,\n    getGroupMessages,\n    getUserByMmk\n  } = React.useContext(RestContext);\n\n  // const [ringAudio] = React.useState(getRingAudio());\n\n  const onExitActiveRoom = React.useCallback(() => {\n    dispatch({\n      type: \"SET_ACTIVE_ROOM\",\n      payload: {}\n    });\n  }, [dispatch]);\n\n  const onNeedMoreMessages = React.useCallback(\n    async (chat: ChatRoom) => {\n      if ((chat as Group).groupId) await getGroupMessages(chat as Group);\n      else await getPrivateMessages(chat as Contact);\n    },\n    [getPrivateMessages, getGroupMessages]\n  );\n\n  const onMessageDelete = React.useCallback(\n    (chat: ChatRoom, message: ChatMessage) => {\n      socket?.emit(\"revokeMessage\", {\n        groupId: (chat as Group).groupId, // Идентификатор группы\n        contactId: chat.userId, // Идентификатор контакта\n        _id: message._id // Идентификатор удаленного сообщения\n      });\n    },\n    [socket?.id]\n  );\n\n  const onTyping = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit(\"typing\", {\n        groupId: (chat as Group)?.groupId,\n        contactId: chat?.userId\n      });\n    },\n    [socket?.id]\n  );\n\n  const onSendMessage = React.useCallback(\n    (chat: ChatRoom, data: SendMessage) => {\n      if ((chat as Group).groupId) {\n        socket?.emit(\"groupMessage\", {\n          groupId: (chat as Group)?.groupId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size\n        });\n      } else {\n        socket?.emit(\"privateMessage\", {\n          contactId: chat?.userId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size\n        });\n      }\n    },\n    [socket?.id]\n  );\n\n  const onChangeChat = React.useCallback(\n    (chat: ChatRoom) => {\n      dispatch({\n        type: \"SET_ACTIVE_ROOM\",\n        payload: {\n          groupId: (chat as Group)?.groupId,\n          contactId: chat?.userId\n        }\n      });\n    },\n    [socket?.id, dispatch]\n  );\n\n  const onEnterRoom = React.useCallback(\n    (chat: ChatRoom) => {\n      if (!chat.messages || chat.messages.length === 0) return;\n      if ((chat as Group).groupId) {\n        socket?.emit(\"markAsRead\", {\n          groupId: (chat as Group).groupId,\n          _id: chat.messages[chat.messages.length - 1]._id\n        });\n      } else {\n        socket?.emit(\"markAsRead\", {\n          contactId: chat.userId,\n          _id: chat.messages[chat.messages.length - 1]._id\n        });\n      }\n    },\n    [socket?.id]\n  );\n\n  const onVideoCall = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit(\"startConference\", {\n        groupId: (chat as Group).groupId,\n        contactId: chat.userId\n      });\n    },\n    [socket?.id]\n  );\n\n  const onVideoEnd = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit(\"stopConference\", {\n          id: conference?.id\n        });\n    },\n    [socket?.id]\n  );\n\n  const onConferencePause = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit(\"pauseConference\", {\n          id: conference.id\n        });\n    },\n    [socket?.id]\n  );\n\n  const onConferenceCallAccept = React.useCallback(\n    (conference: ConferenceData) => {\n      // отправляем resumeConference чтобы возобновить запись\n      if (conference?.id != null)\n        socket?.emit(\"resumeConference\", {\n          id: conference.id\n        });\n      dispatch({ type: \"JOIN_CONFERENCE\", payload: conference });\n    },\n    [socket?.id, dispatch]\n  );\n\n  const onOperatorAdd = React.useCallback(\n    (group: Group, operator: Contact) => {\n      socket?.emit(\"addOperator\", {\n        groupId: group.groupId,\n        operatorId: operator.userId\n      });\n    },\n    [socket?.id]\n  );\n\n  const onLeaveGroup = React.useCallback(\n    (group: Group) => {\n      socket?.emit(\"deleteGroup\", {\n        groupId: group.groupId\n      });\n    },\n    [socket?.id]\n  );\n\n  React.useEffect(() => {\n    if (activeChatUserId != null && !isEmpty(state.contactGather)) {\n      const Chat = Object.values(state.contactGather).find(\n        item => item.userId === activeChatUserId\n      );\n      onChangeChat(Chat);\n      onEnterRoom(Chat);\n    }\n\n    const mmkId = getParam(\"mmk\");\n    const guid = getParam(\"guid\");\n    if ((mmkId != null || guid != null) && !isEmpty(state.contactGather)) {\n      //console.log(\"mmkId\", mmkId);\n      const changeChatByMmkId = async () => {\n        const userId = await getUserByMmk(mmkId, guid);\n        console.log(\"userId\", userId);\n        if (userId != null) {\n          const Chat = Object.values(state.contactGather).find(\n            item => item.userId === userId\n          );\n          onChangeChat(Chat);\n          onEnterRoom(Chat);\n        }\n      };\n      changeChatByMmkId();\n    }\n  }, [state.contactGather]);\n\n  React.useEffect(() => {\n    if (activeGroupId != null && !isEmpty(state.groupGather)) {\n      const onlyChat = Object.values(state.groupGather).find(\n        item => item.groupId === activeGroupId\n      );\n\n      if (!isEmpty(onlyChat)) {\n        onChangeChat(onlyChat);\n        onEnterRoom(onlyChat);\n      }\n    }\n  }, [state.groupGather]);\n\n  // Отключили проигрыш звука\n  // React.useEffect(() => {\n  //   if (\n  //     state.conference.data?.id &&\n  //     state.conference.ringPlayed &&\n  //     !state.conference.joined\n  //   )\n  //     ringAudio.play();\n  //   else ringAudio.pause();\n  // }, [state.conference.data?.id, state.conference.ringPlayed]);\n\n  const renderRoom = state.activeRoom != null && (\n    <Room\n      apiUrl={apiUrl}\n      user={state.user}\n      users={state.userGather}\n      operators={state.operators}\n      chat={state.activeRoom}\n      typing={state.typing}\n      conference={state.conference.data}\n      conferenceJoined={state.conference.joined}\n      loading={state.loading}\n      pageSize={pageSize}\n      onExitRoom={onExitActiveRoom}\n      onEnterRoom={onEnterRoom}\n      onNeedMoreMessages={onNeedMoreMessages}\n      onMeesageDelete={onMessageDelete}\n      onTyping={onTyping}\n      onSendMessage={onSendMessage}\n      onVideoCall={onVideoCall}\n      onVideoEnd={onVideoEnd}\n      onConferencePause={onConferencePause}\n      onOperatorAdd={onOperatorAdd}\n      onLeaveGroup={onLeaveGroup}\n    />\n  );\n\n  const GetRoomList = () => (\n    <RoomList\n      apiUrl={apiUrl}\n      user={state.user}\n      activeRoom={state.activeRoom}\n      groups={Object.values(state.groupGather)}\n      contacts={Object.values(state.contactGather)}\n      typing={state.typing}\n      onChangeChat={onChangeChat}\n    />\n  );\n\n  const GetConferenceCall = () =>\n    state.conference.data && (\n      <ConferenceCall\n        apiUrl={apiUrl}\n        contact={\n          state.contactGather[\n            state.user.userId === state.conference.data.userId\n              ? state.conference.data.contactId\n              : state.conference.data.userId\n          ]\n        }\n        conference={state.conference.data}\n        onAccept={onConferenceCallAccept}\n      />\n    );\n\n  const GetConference = () => (\n    <Conference\n      conference={state.conference.data}\n      onClose={onConferencePause}\n      langCode={state.user.langCode}\n    />\n  );\n\n  // const getMessCount = (data: GroupGather) => {\n  //   const messages = ;\n  //   return messages.reduce((a: number, b: number) => a + b, 0);\n  // };\n\n  const depsContats = state.conference.data?.id\n    ? [\n        state.conference.joined,\n        state.conference.data?.id,\n        state.conference.data?.contactId,\n        state.activeRoom?.groupId,\n        state.activeRoom?.userId\n      ]\n    : [\n        state.activeRoom,\n        allMessCount(state.groupGather),\n        allMessCount(state.contactGather)\n      ];\n\n  const Contacts = React.useMemo(\n    () =>\n      state.conference.data?.id != null ? (\n        <>\n          {state.conference.joined ? <GetConference /> : <GetConferenceCall />}\n          <Box className={classes.conAbsOnConf}>\n            <Paper style={{ borderRadius: 8 }}>\n              <Box display=\"flex\" flexDirection=\"row\" my={3}>\n                {((isEmpty(state.activeRoom) && isMobile) ||\n                  (!isEmpty(state.activeRoom) && !isMobile)) && (\n                  <>\n                    <CheckAudiVideoPerm audio={true} video={false} />\n                    <CheckAudiVideoPerm audio={false} video={true} />\n                  </>\n                )}\n\n                {isEmpty(state.activeRoom) &&\n                  state.chatOld != null &&\n                  isMobile && (\n                    <Tooltip title={t(\"CHAT.CONFERENCE.BACK\")}>\n                      <IconButton\n                        aria-label=\"check\"\n                        onClick={() =>\n                          state.chatOld != null && onChangeChat(state.chatOld)\n                        }\n                        size=\"large\"\n                      >\n                        <ArrowForward />\n                      </IconButton>\n                    </Tooltip>\n                  )}\n              </Box>\n            </Paper>\n          </Box>\n        </>\n      ) : (\n        <GetRoomList />\n      ),\n\n    depsContats\n  );\n\n  console.log(\"chat state\", state);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.root}>\n      <Box className={classes.innerBox}>\n        {isMobile ? (\n          <>\n            {Contacts}\n            {renderRoom}\n          </>\n        ) : (\n          <Grid container spacing={1} className={classes.innerGrid}>\n            <Grid\n              item\n              sm={state.conference.data?.id != null ? 6 : 4}\n              className={classes.innerGrid}\n            >\n              {Contacts}\n            </Grid>\n\n            <Grid\n              item\n              sm={state.conference.data?.id != null ? 6 : 8}\n              className={classes.innerGrid}\n            >\n              {renderRoom}\n            </Grid>\n          </Grid>\n        )}\n      </Box>\n      <ChatAlert />\n    </Container>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport io, { Socket } from \"socket.io-client\";\n\nexport const useSocket = (\n  url: string,\n  path: string,\n  accessToken: string\n): {\n  socket: Socket | null;\n  online: boolean;\n  connectSocket: () => void;\n  disconnectSocket: () => void;\n} => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n\n  const connectSocket = useCallback(() => {\n    // console.log(\"do connect\");\n    const socketTemp = io(url, {\n      path,\n      reconnection: true,\n      extraHeaders: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    setSocket(socketTemp);\n  }, [url, path, accessToken]);\n\n  const disconnectSocket = useCallback(() => {\n    // console.log(\"do disconnect\");\n    socket?.disconnect();\n    setSocket(null);\n  }, [socket]);\n\n  const [online, setOnline] = useState<boolean>(false);\n\n  useEffect(() => {\n    setOnline(socket?.connected ? true : false);\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"connect\", () => {\n      // console.log(\"connected\");\n      setOnline(true);\n      socket.emit(\"chatData\");\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"disconnect\", () => {\n      // console.log(\"disconnected\");\n      setOnline(false);\n    });\n  }, [socket]);\n\n  return {\n    socket,\n    online,\n    disconnectSocket,\n    connectSocket,\n  };\n};\n","import en from \"./en.json\";\nimport fr from \"./fr.json\";\nimport ru from \"./ru.json\";\n\nexport const chatResources = {\n  ru,\n  en,\n  fr,\n};\n"],"names":["MessageStatus","Role","ContextMenuType","useStyles","makeStyles","createStyles","item","cursor","Emoji","props","classes","emojiClick","e","onSelect","target","innerText","Item","itemProps","React","Box","m","component","onClick","className","emoji","display","flexDirection","theme","typingText","paddingLeft","spacing","typingDot","verticalAlign","width","height","margin","background","palette","primary","main","borderRadius","opacity","animation","&:nth-child(1)","animationDelay","&:nth-child(2)","&:nth-child(3)","@keyframes loadingFade","0%","50%","100%","Typing","createElement","Typography","color","variant","message","input","flex","inputUpload","attachmentIcon","fill","stroke","Entry","chat","t","useTranslation","_React$useState","useState","empjiEl","setEmojiEl","_React$useState2","text","setText","_React$useState3","time","lastTyping","setLastTyping","handleEmojiClose","sendMessage","data","onSendMessage","submit","trim","length","messageType","emojiOpen","Boolean","enojiId","undefined","TextField","placeholder","autoFocus","InputProps","disableUnderline","startAdornment","InputAdornment","position","accept","id","type","onChange","event","currentTarget","files","file","includes","image","Image","url","window","URL","webkitURL","src","createObjectURL","onload","imageSize","fileName","name","size","htmlFor","IconButton","aria-label","SvgIcon","d","strokeWidth","strokeLinecap","strokeLinejoin","aria-describedby","InsertEmoticon","endAdornment","edge","preventDefault","Send","value","_ref","onTyping","Date","now","onKeyPress","key","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","isEmpty","Object","keys","formatTime","dayjs","add","startOf","isAfter","format","getChatId","groupId","userId","getChatName","username","allMessCount","chats","values","map","it","messages","reduce","a","b","chatRoomComparer","hasMessagesA","Array","isArray","hasMessagesB","cdate","getTime","getParam","param","QueryString","location","search","URLSearchParams","get","fileIcon","fontSize","fileBody","File","meta","content","split","date","getFileMeta","_splitFileName","idx","lastIndexOf","ext","slice","splitFileName","Avatar","toUpperCase","_mediaContent","mediaContent","maxWidth","maxHeight","breakpoints","down","Video","apiUrl","isConference","JSON","parse","visitId","controls","muted","_aspect","aspect","setViewerVisible","Fragment","Viewer","zIndex","visible","changeable","images","AspectRatio","ratio","alt","MessageContent","_message","rootContact","padding","& span","float","secondary","& $message","backgroundColor","grey","borderTopRightRadius","borderBottomRightRadius","& $firstMessage","borderTopLeftRadius","marginTop","& $lastMessage","borderBottomLeftRadius","marginBottom","rootUser","paddingRight","justifyContent","contrastText","rootNotify","& > *","fontWeight","firstMessage","lastMessage","flexWrap","header","overflow","body","wordBreak","status","alignSelf","statusImage","marginRight","Message","owner","refOnLastMess","user","isGroupMessage","isUserFirst","isUserLast","ListItem","Alert","severity","ref","isRevoke","align","revokeUserName","isMine","onContextMenu","child","Link","underline","href","download","wrapMessage","Done","DoneAll","ContactStatus","isTyping","contact","online","star","ContactList","List","contacts","button","ListItemAvatar","avatar","ListItemText","StarIcon","AddContact","_useTranslation","Dialog","aria-labelledby","DialogTitle","Transition","forwardRef","Slide","_extends","direction","AlertDialog","children","setOpen","_ref$severity","handleClose","TransitionComponent","keepMounted","DialogContent","DialogActions","Button","AlertModale","modaleInfo","setModaleInfo","strTime","useMemo","textAlign","ConferenceTime","_ref2","finishDate","_useState","currTime","finTime","diffTimeSec","Math","round","_useCounter","max","counter","setCounter","counterRef","useRef","useEffect","current","setInterval","prev","clearInterval","handlerRefresh","useCounter","minutes","seconds","_hhMmSs","totalSeconds","hours","floor","strHours","hhMmSs","popover","pointerEvents","paper","avatarGroup","getGroupStatus","group","_group$members","members","onlineCount","sum","push","join","RoomHeader","typing","conference","conferenceJoined","operators","onVideoCall","onVideoEnd","onConferencePause","onOperatorAdd","onLeaveGroup","setAnchorEl","addOperatorOpen","setAddOperatorOpen","CardHeader","title","subheader","_group$members2","handlePopoverClose","GroupIcon","aria-owns","aria-haspopup","onMouseEnter","onMouseLeave","disableRestoreFocus","action","role","PersonAddIcon","operator","find","DeleteIcon","contactId","console","log","startIcon","CallEndIcon","style","marginLeft","VideoCallIcon","root","minWidth","inline","messageListOuter","overflowY","scrollbarWidth","scrollbarColor","&::-webkit-scrollbar, & *::-webkit-scrollbar","&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb","border","&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus","&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active","&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover","&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner","messageList","roomHeader","roomProgress","flexAll","flexEnd","initialMenuState","mouseX","mouseY","canCopy","canDelete","initialScrollState","autoScroll","Room","users","loading","pageSize","isMobile","useMediaQuery","scrollState","setScrollState","messageCount","refList","menuState","setMenuState","onEnterRoom","useLayoutEffect","scrollIntoView","scrollTop","scrollHeight","onScroll","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","noMoreData","abrupt","onNeedMoreMessages","stop","_x","apply","arguments","handleCopy","navigator","clipboard","writeText","handleDelete","onMeesageDelete","Card","elevation","Tooltip","onExitRoom","ArrowBackIcon","CircularProgress","Divider","CardContent","inx","clientX","clientY","handleMenuPopup","Menu","anchorReference","anchorPosition","top","left","MenuItem","disabled","ListItemIcon","FileCopyIcon","whiteSpace","textOverflow","unread","TypingBadge","withStyles","badge","boxShadow","&::after","@keyframes ripple","transform","Badge","OnlineBadge","RoomListItem","roomName","overlap","contactAvatar","roomText","getMessageText","roomTime","selected","active","secondaryTypographyProps","unreadCount","Chip","label","searchField","listStyle","filterChats","filter","lowerFilter","toLowerCase","indexOf","sortChats","groups","roomArr","concat","sort","topChatId","localStorage","getItem","c","k","isTop","unshift","RoomList","setChats","fullWidth","activeRoom","onChangeChat","Conference","regex","lang","_ref$langCode","langCode","confUrl","RegExp","replace","listener","source","_ref$current","contentWindow","addEventListener","removeEventListener","allowFullScreen","allow","alignItems","pulse","&::before","footer","paddingTop","@keyframes pulse","ConferenceCall","onAccept","Paper","emptyUser","password","emptyChatState","tokenKey","token","chatOld","groupGather","userGather","contactGather","initialContactId","joined","ringPlayed","error","success","getFreshActiveRoom","state","getActiveRoom","newActiveRoom","rooms","setUserOnline","newState","_i","_Object$values","member","index","findIndex","contactUnreadGather","predicate","groupUnreadGather","chatReducer","_extends2","payload","_extends3","updateActiveRoom","delGroup","delGroupMember","delContact","_extends4","setActiveRoom","x","addGroupMessage","_newState$activeRoom","addPrivateMessage","userName","msg","_id","revokeMessage","info","notice","updateGroupInfo","updateUserInfo","isManager","addGroupMember","setConference","_state$conference$dat","pauseConference","_state$conference$dat2","stopConference","updatedValue","i","markPrivateMessagesRead","addPrivateMessages","userArr","_step","_iterator","_createForOfIteratorHelperLoose","done","addGroupMessages","setItem","setToken","removeItem","clearUser","ChatContext","createContext","dispatch","RestContext","SocketContext","CheckAudiVideoPerm","audio","video","useContext","mediaDevices","getUserMedia","then","catch","err","SettingsSuggestIcon","SettingsVoiceIcon","VideoSettingsIcon","ChatAlert","_React$useContext","_React$useContext$sta","Snackbar","autoHideDuration","_root","_innerBox","minHeight","innerBox","innerGrid","conAbsOnConf","activeGroupId","activeChatUserId","socket","_React$useContext3","getPrivateMessages","getGroupMessages","getUserByMmk","onExitActiveRoom","onMessageDelete","emit","onConferenceCallAccept","operatorId","Chat","mmkId","guid","_ref3","_callee2","_Chat","_context2","sent","changeChatByMmkId","onlyChat","renderRoom","GetRoomList","GetConferenceCall","GetConference","depsContats","_state$conference$dat3","_state$activeRoom","_state$activeRoom2","Contacts","_state$conference$dat4","my","ArrowForward","Container","Grid","container","sm","_state$conference$dat5","_state$conference$dat6","defLang","chatState","_React$useReducer","useReducer","Provider","baseURLApi","_useContext","fetch","axios","create","timeout","baseURL","headers","Cache-Control","Pragma","Authorization","withCredentials","_chat$messages","params","t0","finish","_chat$messages2","_x2","_ref4","_callee3","_context3","_x3","_x4","wsUrl","wsPath","_useSocket","path","accessToken","setSocket","connectSocket","socketTemp","io","reconnection","extraHeaders","disconnectSocket","disconnect","_useState2","setOnline","connected","on","useSocket","off","res","code","groupArr","groupData","contactArr","contactData","userData","_step2","_iterator2","operatorData","_step3","_iterator3","conferenceData","newUser","_groupObj$members2","groupObj","_groupObj$members","timer","clearTimeout","setTimeout","_res$data","ru","en","fr"],"mappings":"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"}