{"version":3,"file":"chat.cjs.production.min.js","sources":["../src/types/index.ts","../src/components/Emoji.tsx","../src/components/Typing.tsx","../src/components/Entry.tsx","../src/utils/common.ts","../src/components/MessageContent/File.tsx","../src/components/MessageContent/Video.tsx","../src/components/MessageContent/Image.tsx","../src/components/MessageContent/index.tsx","../src/components/styles.ts","../src/components/Message.tsx","../src/components/ContactStatus.tsx","../src/components/ContactList.tsx","../src/components/AddContact.tsx","../src/components/AlertDialog.js","../src/components/ConferenceTime.tsx","../src/hooks/useCounter.js","../src/components/RoomHeader.tsx","../src/components/Room.tsx","../src/components/RoomListItem.tsx","../src/components/RoomList.tsx","../src/components/Conference.tsx","../src/components/ConferenceCall.tsx","../src/context/ChatContext.tsx","../src/context/RestContext.tsx","../src/context/SocketContext.tsx","../src/components/CheckAudiVideoPerm.tsx","../src/components/Alert.tsx","../src/pages/chat.tsx","../src/hooks/useSocket.ts","../src/translations/index.ts"],"sourcesContent":["export interface ChatPa {\n  activeGroupId?: number;\n  activeChatUserId?: number;\n}\n\n// Тип сообщения\nexport type MessageType =\n  | \"text\"\n  | \"image\"\n  | \"file\"\n  | \"video\"\n  | \"notify\"\n  | \"video_conference\";\n\nexport enum MessageStatus {\n  sent = 0,\n  read = 1\n}\n\nexport enum Role {\n  Unknown = 0,\n  Client = 1,\n  Agent = 2,\n  Specialist = 3,\n  Operator = 4\n}\n\nexport interface User {\n  userId: number;\n  username: string;\n  password: string;\n  avatar: string;\n  role?: Role;\n  online?: 1 | 0; // В сети\n  langCode?: string;\n}\n\n// Приватные сообщения\nexport interface PrivateMessage {\n  _id?: number;\n  userId: number;\n  contactId: number;\n  content: string;\n  messageType: MessageType;\n  status: MessageStatus;\n  cdate: string;\n  type?: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Контакт\nexport interface Contact {\n  userId: number;\n  groupId?: number;\n  username: string;\n  avatar?: string;\n  role?: Role;\n  messages?: PrivateMessage[];\n  unreadCount?: number;\n  isTop?: boolean;\n  online?: 1 | 0;\n  isManager?: 1 | 0;\n  noMoreData?: boolean;\n}\n\n// Информация о друзьях\nexport interface ContactGather {\n  [userId: number]: Contact;\n}\n\n// Групповое сообщение\nexport interface GroupMessage {\n  _id?: number;\n  userId: number;\n  groupId: number;\n  content: string;\n  messageType: MessageType;\n  cdate: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Группа\nexport interface Group {\n  groupId: number;\n  userId: number; // владелец\n  name: string;\n  notice: string;\n  messages?: GroupMessage[];\n  unreadCount?: number;\n  cdate: string;\n  isTop?: boolean;\n  members?: Contact[];\n  noMoreData?: boolean;\n}\n\n// Группы\nexport interface GroupGather {\n  [groupId: number]: Group;\n}\n\n// Ассоциации групп и пользователей\nexport interface GroupMap {\n  groupId: number;\n  userId: number;\n}\n\n// Ассоциации пользователей и друзей\nexport interface ContactMap {\n  contactId: number;\n  userId: number;\n}\n\nexport interface SendMessage {\n  message: string | File;\n  width?: number;\n  height?: number;\n  fileName?: string;\n  messageType: MessageType[0] | MessageType[1];\n  size?: number;\n}\n\n// Размер изображения\nexport interface ImageSize {\n  width: number;\n  height: number;\n}\n\n// Непрочитанные сообщения\nexport interface UnReadGather {\n  [key: string]: number;\n}\n\n// Получить сообщения постранично\nexport interface PagingParams {\n  groupId?: number;\n  userId?: number;\n  contactId?: number;\n  current: number;\n  pageSize: number;\n}\n\n// Постраничный ответ для групповых сообщений\nexport interface PagingResponse {\n  // messageArr: GroupMessage[]; - fix on messages\n  messages: GroupMessage[];\n  userArr: User[];\n}\n\nexport interface ContactUserMap {\n  contactId: number;\n  contactUserName: string;\n}\n\n// информация о том, что контакт печатает текст\nexport interface SetTyping {\n  userId?: number;\n  groupId?: number;\n  contactId?: number;\n}\n\n// Операция с сообщением\nexport interface MessageOperation {\n  userId?: number;\n  username: string;\n  groupId?: number;\n  contactId?: number;\n  _id: number;\n}\n\n// Данные конференции\nexport interface ConferenceData {\n  userId: number;\n  contactId: number;\n  id: string;\n  url?: string;\n  serverAddress?: string;\n  user?: string;\n  password?: string;\n  currentDate?: Date;\n  finishDate?: Date;\n}\n\n// Данные чата\nexport interface ChatData {\n  user: User;\n  groupData: Group[];\n  contactData: Contact[];\n  userData: User[];\n  operatorData: Contact[];\n  conferenceData: ConferenceData;\n}\n\nexport interface GroupMember {\n  groupId: number;\n  members: Contact[];\n}\n\nexport interface AddPrivateMessages {\n  pageSize: number;\n  contactId: number;\n  messages: PrivateMessage[];\n}\n\nexport interface AddGroupMessages extends PagingResponse {\n  pageSize: number;\n  groupId: number;\n}\n\nexport interface SetActiveRoom {\n  groupId?: number;\n  contactId?: number;\n}\n\nexport interface JoinGroup {\n  group: Group;\n  user: Contact;\n}\n\nexport interface SetUser {\n  user: User;\n  token: string;\n}\n\nexport type ChatRoom = Group | Contact;\nexport type ChatMessage = GroupMessage | PrivateMessage;\n\n// Операции контекстного меню\nexport enum ContextMenuType {\n  COPY = \"COPY\", // Скопировать\n  REVOKE = \"REVOKE\", // Удалить сообщение\n  TOP_REVERT = \"TOP_REVERT\", // Открепить\n  TOP = \"TOP\", // Закрепить\n  READ = \"READ\", // Прочесть всё\n  DELETE = \"DELETE\" // Удалить\n}\n","import * as React from \"react\";\nimport { Box,  } from \"@mui/material\";\nimport { makeStyles,createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    item: {\n      cursor: \"pointer\",\n    },\n  })\n);\n\ntype EmojiProps = {\n  onSelect?: (emoji: string) => void;\n};\n\ntype EmojiItemProps = {\n  emoji: string;\n};\n\nconst Emoji: React.FC<EmojiProps> = (props: EmojiProps) => {\n  const classes = useStyles();\n  const emojiClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (props.onSelect) {\n      props.onSelect((e.target as HTMLDivElement).innerText);\n    }\n  };\n\n  const Item = (itemProps: EmojiItemProps) => {\n    return (\n      <Box\n        m={0.5}\n        component=\"span\"\n        onClick={emojiClick}\n        className={classes.item}\n      >\n        {itemProps.emoji}\n      </Box>\n    );\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😃\" />\n        <Item emoji=\"😁\" />\n        <Item emoji=\"😂\" />\n        <Item emoji=\"😄\" />\n        <Item emoji=\"😅\" />\n        <Item emoji=\"😆\" />\n        <Item emoji=\"😇\" />\n        <Item emoji=\"😈\" />\n        <Item emoji=\"😉\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😊\" />\n        <Item emoji=\"😋\" />\n        <Item emoji=\"😌\" />\n        <Item emoji=\"😍\" />\n        <Item emoji=\"😎\" />\n        <Item emoji=\"😏\" />\n        <Item emoji=\"😐\" />\n        <Item emoji=\"😒\" />\n        <Item emoji=\"😓\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"❓\" />\n        <Item emoji=\"😕\" />\n        <Item emoji=\"😖\" />\n        <Item emoji=\"😗\" />\n        <Item emoji=\"😘\" />\n        <Item emoji=\"😙\" />\n        <Item emoji=\"😚\" />\n        <Item emoji=\"😜\" />\n        <Item emoji=\"😝\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😞\" />\n        <Item emoji=\"😟\" />\n        <Item emoji=\"😠\" />\n        <Item emoji=\"😡\" />\n        <Item emoji=\"😢\" />\n        <Item emoji=\"😣\" />\n        <Item emoji=\"😤\" />\n        <Item emoji=\"😥\" />\n        <Item emoji=\"😦\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😨\" />\n        <Item emoji=\"😩\" />\n        <Item emoji=\"😪\" />\n        <Item emoji=\"😫\" />\n        <Item emoji=\"😬\" />\n        <Item emoji=\"😭\" />\n        <Item emoji=\"😮\" />\n        <Item emoji=\"😯\" />\n        <Item emoji=\"😰\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😲\" />\n        <Item emoji=\"😳\" />\n        <Item emoji=\"😴\" />\n        <Item emoji=\"😵\" />\n        <Item emoji=\"🧐\" />\n        <Item emoji=\"😷\" />\n        <Item emoji=\"🙁\" />\n        <Item emoji=\"🙂\" />\n        <Item emoji=\"🙃\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤐\" />\n        <Item emoji=\"🤑\" />\n        <Item emoji=\"🤒\" />\n        <Item emoji=\"🤓\" />\n        <Item emoji=\"🤔\" />\n        <Item emoji=\"🤕\" />\n        <Item emoji=\"🤠\" />\n        <Item emoji=\"🤡\" />\n        <Item emoji=\"🤢\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤤\" />\n        <Item emoji=\"🤥\" />\n        <Item emoji=\"🤧\" />\n        <Item emoji=\"🤨\" />\n        <Item emoji=\"🤩\" />\n        <Item emoji=\"🤪\" />\n        <Item emoji=\"🤫\" />\n        <Item emoji=\"🤬\" />\n        <Item emoji=\"🤭\" />\n      </Box>\n    </Box>\n  );\n};\nexport default Emoji;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typingText: {\n      paddingLeft: theme.spacing(0.5),\n    },\n    typingDot: {\n      display: \"inline-block\",\n      verticalAlign: \"middle\",\n      width: 4,\n      height: 4,\n      margin: \"0px 2px\",\n      background: theme.palette.primary.main,\n      borderRadius: \"50%\",\n      opacity: \"0\",\n      animation: \"$loadingFade 1s infinite\",\n      \"&:nth-child(1)\": {\n        animationDelay: \"0s\",\n      },\n      \"&:nth-child(2)\": {\n        animationDelay: \"0.2s\",\n      },\n      \"&:nth-child(3)\": {\n        animationDelay: \"0.4s\",\n      },\n    },\n    \"@keyframes loadingFade\": {\n      \"0%\": {\n        opacity: 0,\n      },\n      \"50%\": {\n        opacity: 0.8,\n      },\n      \"100%\": {\n        opacity: 0,\n      },\n    },\n  })\n);\n\ntype TypingProps = {\n  message: string;\n};\n\nconst Typing: React.FC<TypingProps> = (props: TypingProps) => {\n  const classes = useStyles();\n  return (\n    <Typography color=\"primary\" variant=\"body2\" component=\"span\">\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingText}>{props.message}</span>\n    </Typography>\n  );\n};\nexport default Typing;\n","import React, { ChangeEvent, KeyboardEvent } from \"react\";\nimport {\n  Box,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Popover,\n  SvgIcon\n} from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { Send, InsertEmoticon } from \"@mui/icons-material\";\nimport Emoji from \"./Emoji\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatRoom, ImageSize, SendMessage } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    flex: \"auto\"\n  },\n  inputUpload: {\n    display: \"none\"\n  },\n  attachmentIcon: {\n    fill: \"none\",\n    stroke: \"currentColor\"\n  }\n}));\n\ntype EntryProps = {\n  chat: ChatRoom | null;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n};\n\n/**\n * Рассчитать пропорции изображения\n */\nconst getImageSize = (data: ImageSize) => {\n  let { width, height } = data;\n  if (width > 335 || height > 335) {\n    if (width > height) {\n      height = 335 * (height / width);\n      width = 335;\n    } else {\n      width = 335 * (width / height);\n      height = 335;\n    }\n  }\n  return {\n    width,\n    height\n  };\n};\n\nconst Entry: React.FC<EntryProps> = (props: EntryProps) => {\n  const classes = useStyles();\n  const { chat } = props;\n\n  const { t } = useTranslation();\n\n  const [empjiEl, setEmojiEl] = React.useState<HTMLButtonElement | null>(null);\n  const [text, setText] = React.useState(\"\");\n  const [lastTyping, setLastTyping] = React.useState({\n    chat,\n    time: 0\n  });\n\n  const handleEmojiClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setEmojiEl(event.currentTarget);\n  };\n\n  const handleEmojiClose = () => {\n    setEmojiEl(null);\n  };\n\n  const emojiSelect = (emoji: string) => {\n    setText(`${text}${emoji}`);\n    handleEmojiClose();\n  };\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setText(target.value);\n    if (\n      chat &&\n      props.onTyping &&\n      (lastTyping.chat !== chat || Date.now() - lastTyping.time >= 500)\n    ) {\n      setLastTyping({\n        chat,\n        time: Date.now()\n      });\n      props.onTyping(chat);\n    }\n  };\n\n  const sendMessage = (data: SendMessage) => {\n    if (chat && props.onSendMessage) props.onSendMessage(chat, data);\n  };\n\n  const submit = () => {\n    if (text.trim().length === 0) {\n      return;\n    }\n\n    sendMessage({ message: text, messageType: \"text\" });\n    setText(\"\");\n  };\n\n  const onSubmitClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    submit();\n  };\n\n  const onKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      submit();\n    }\n  };\n\n  const onSubmitFile = (event: React.FormEvent<HTMLInputElement>) => {\n    if (!event.currentTarget.files) return;\n    const file = event.currentTarget.files[0];\n    let messageType: string;\n    if (file.type.includes(\"image\")) {\n      messageType = \"image\";\n    } else if (file.type.includes(\"video\")) {\n      messageType = \"video\";\n    } else {\n      messageType = \"file\";\n    }\n    if (messageType === \"image\") {\n      const image = new Image();\n      const url = window.URL || window.webkitURL;\n      image.src = url.createObjectURL(file);\n      image.onload = () => {\n        const imageSize: ImageSize = getImageSize({\n          width: image.width,\n          height: image.height\n        });\n        sendMessage({\n          message: file,\n          width: imageSize.width,\n          height: imageSize.height,\n          messageType\n        });\n      };\n    } else {\n      sendMessage({\n        message: file,\n        messageType,\n        fileName: file.name,\n        size: file.size\n      });\n    }\n  };\n\n  const emojiOpen = Boolean(empjiEl);\n  const enojiId = emojiOpen ? \"simple-popover\" : undefined;\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <TextField\n        className={classes.input}\n        placeholder={t(\"CHAT.INPUT_MESSAGE\") || \"\"}\n        autoFocus={true}\n        variant=\"standard\"\n        InputProps={{\n          disableUnderline: true,\n          startAdornment: (\n            <InputAdornment position={\"start\"}>\n              <input\n                accept=\".pdf,.jpg,.jpeg,.bmp,.gif,.png,application/pdf,image/jpeg,image/bmp,image/gif,image/png\"\n                className={classes.inputUpload}\n                id=\"icon-button-file\"\n                type=\"file\"\n                onChange={onSubmitFile}\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload\"\n                  component=\"span\"\n                  size=\"small\"\n                >\n                  <SvgIcon fill=\"none\" className={classes.attachmentIcon}>\n                    <path\n                      d=\"M16.768 13.5767L11.6961 18.6486C9.35886 20.9859 5.56937 20.9859 3.23208 18.6486V18.6486C0.894789 16.3114 0.894789 12.5219 3.23208 10.1846L10.4479 2.96872C12.0875 1.32914 14.7458 1.32914 16.3854 2.96873V2.96873C18.025 4.60831 18.025 7.26659 16.3854 8.90617L9.16515 16.1264C8.23032 17.0612 6.71466 17.0612 5.77982 16.1264V16.1264C4.84499 15.1916 4.84499 13.6759 5.77982 12.7411L10.8896 7.63131\"\n                      strokeWidth=\"1.6\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </SvgIcon>\n                </IconButton>\n              </label>{\" \"}\n              <IconButton\n                aria-describedby={enojiId}\n                onClick={handleEmojiClick}\n                color=\"primary\"\n                size=\"small\"\n              >\n                <InsertEmoticon />\n              </IconButton>\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={onSubmitClick}\n            >\n              <Send />\n            </IconButton>\n          )\n        }}\n        value={text}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n      />\n      <Popover\n        id={enojiId}\n        open={emojiOpen}\n        anchorEl={empjiEl}\n        onClose={handleEmojiClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n      >\n        <Emoji onSelect={emojiSelect} />\n      </Popover>\n    </Box>\n  );\n};\nexport default Entry;\n","import moment from \"moment\";\nimport { ChatRoom, Contact, ContactGather, Group, GroupGather } from \"../types\";\n\nexport function isEmpty(value: unknown): boolean {\n  return (\n    value == null ||\n    (typeof value === \"object\" && Object.keys(value).length === 0) ||\n    (typeof value === \"string\" && value.trim().length === 0)\n  );\n}\n\n// string contains string\nexport function isContainStr(str1: string, str2: string): boolean {\n  return str2.indexOf(str1) >= 0;\n}\n\n/**\n * check URL\n * @param text\n */\nexport function isUrl(text: string): boolean {\n  // parse url\n  const UrlReg = new RegExp(/http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?/);\n  return UrlReg.test(text);\n}\n\n/**\n * Формитирование времени сообщения\n * @param time\n */\nexport function formatTime(time: Date | string | undefined) {\n  if (typeof time === \"undefined\") return null;\n  if (typeof time === \"string\") time = new Date(time);\n  // больше чем вчера\n  if (\n    moment()\n      .add(-1, \"days\")\n      .startOf(\"day\")\n      .isAfter(time)\n  ) {\n    return moment(time).format(\"DD.MM.YYYY HH:mm\");\n  }\n  // вчера\n  if (\n    moment()\n      .startOf(\"day\")\n      .isAfter(time)\n  ) {\n    return `Вчера в ${moment(time).format(\"HH:mm\")}`;\n  }\n\n  return moment(time).format(\"HH:mm\");\n}\n\n/**\n * Раскрыть содержимое\n * @param content - данные в строке\n */\nexport function getFileMeta(\n  content: string\n): {\n  date: string;\n  userId: string;\n  size: string;\n  name: string;\n} {\n  // Формат  [date]$[userId]$[size]$[fileName]\n  // Например fileName = 1606980397047$1a01e20f-3780-4227-84b5-5c69ca766ee5$15.41KB$123.docx\n  const meta = content.split(\"$\");\n  const [date, userId, size, name] = meta;\n  return {\n    date,\n    userId,\n    size,\n    name\n  };\n}\n\nexport function getImageMeta(\n  content: string\n): {\n  date: string;\n  userId: string;\n  width: string;\n  height: string;\n} {\n  // Формат [date]$[userId]$[width]$[height]$...\n  const meta = content.split(\"$\");\n  const [date, userId, width, height] = meta;\n  return {\n    date,\n    userId,\n    width,\n    height\n  };\n}\n\nexport function splitFileName(name: string): { name: string; ext: string } {\n  const idx = name.lastIndexOf(\".\");\n  if (idx === -1)\n    return {\n      name,\n      ext: \"\"\n    };\n  return {\n    name: name.slice(0, idx),\n    ext: name.slice(idx + 1)\n  };\n}\n\nexport const getChatId = (chat: ChatRoom | null): string | null => {\n  if (!chat) return null;\n  return (chat as Group).groupId\n    ? `group:${(chat as Group).groupId}`\n    : `user:${chat.userId}`;\n};\n\nexport const getChatName = (chat: ChatRoom): string => {\n  return (chat as Group).groupId\n    ? (chat as Group).name\n    : (chat as Contact).username;\n};\n\nexport const allMessCount = (chats: GroupGather | ContactGather) => {\n  return Object.values(chats)\n    .map(it => (it?.messages != null ? it?.messages.length : 0))\n    .reduce((a: number, b: number) => a + b, 0);\n};\n\nexport const chatRoomComparer = (a: ChatRoom, b: ChatRoom): number => {\n  const hasMessagesA = Array.isArray(a.messages) && a.messages.length > 0;\n  const hasMessagesB = Array.isArray(b.messages) && b.messages.length > 0;\n  if (\n    hasMessagesA &&\n    hasMessagesB &&\n    b.messages != null &&\n    a.messages != null\n  ) {\n    // !!! if cdate === undefined !!!\n    const bb =\n      b.messages[b.messages.length - 1].cdate != null\n        ? new Date(b.messages[b.messages.length - 1].cdate).getTime()\n        : new Date().getTime();\n\n    const aa =\n      a.messages[a.messages.length - 1].cdate != null\n        ? new Date(a.messages[a.messages.length - 1].cdate).getTime()\n        : new Date().getTime() - 1;\n    const res = bb - aa;\n\n    //console.log('res', res);\n    return res;\n  }\n  if (hasMessagesA) {\n    return -1;\n  }\n  return 1;\n};\n\nexport const getParam = (param: string) => {\n  const QueryString = window.location.search;\n  const urlParams = new URLSearchParams(QueryString);\n  return urlParams.get(param);\n};\n","import React from \"react\";\nimport { Avatar, Box } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nimport { getFileMeta, splitFileName } from \"../../utils/common\";\nimport { ChatMessage } from \"../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fileIcon: {\n      fontSize: \"0.75rem\"\n    },\n    fileBody: {\n      paddingLeft: theme.spacing(1.2)\n    }\n  })\n);\ntype FileProps = {\n  message: ChatMessage;\n};\n\nconst File: React.FC<FileProps> = ({ message }: FileProps) => {\n  const classes = useStyles();\n  const meta = getFileMeta(message.content);\n  const { name, ext } = splitFileName(meta.name);\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <Avatar className={classes.fileIcon}>{ext.toUpperCase()}</Avatar>\n      <Box display=\"flex\" flexDirection=\"column\" className={classes.fileBody}>\n        {name}\n        <span>{`${ext} ${meta.size}`}</span>\n      </Box>\n    </Box>\n  );\n};\n\nexport default File;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { ChatMessage } from \"../../types\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  mediaContent: {\n    maxWidth: 284,\n    maxHeight: 190,\n    borderRadius: theme.spacing(1.2),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 250,\n      maxHeight: 210\n    }\n  }\n}));\n\ntype VideoProps = {\n  apiUrl: string;\n  message: ChatMessage;\n  isConference: boolean;\n};\n\nconst Video: React.FC<VideoProps> = ({\n  apiUrl,\n  message,\n  isConference\n}: VideoProps) => {\n  const classes = useStyles();\n  let src = \"\";\n  if (isConference) {\n    const meta = JSON.parse(message.content);\n    src = `${apiUrl}/static/conf/${meta.visitId}/${meta.name}`;\n  } else src = `${apiUrl}/static/file/${message.content}`;\n  return (\n    <video src={src} className={classes.mediaContent} controls muted>\n      Ваш браузер не поддерживает тег video.\n    </video>\n  );\n};\n\nexport default Video;\n","import React from \"react\";\nimport Viewer from \"react-viewer\";\nimport { Theme } from \"@mui/material/styles\";\nimport { getImageMeta } from \"../../utils/common\";\nimport { ChatMessage } from \"../../types\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mediaContent: {\n      cursor: \"pointer\",\n      borderRadius: theme.spacing(1.2),\n      maxWidth: 284,\n      maxHeight: 190,\n      [theme.breakpoints.down(\"sm\")]: {\n        maxWidth: 250,\n        maxHeight: 170\n      }\n    }\n  })\n);\ntype ImageProrps = {\n  apiUrl: string;\n  message: ChatMessage;\n};\n\nconst Image: React.FC<ImageProrps> = ({ apiUrl, message }: ImageProrps) => {\n  const classes = useStyles();\n  const [viewerVisible, setViewerVisible] = React.useState(false);\n  const meta = getImageMeta(message.content);\n  return (\n    <React.Fragment>\n      <Viewer\n        zIndex={2000}\n        visible={viewerVisible}\n        changeable={false}\n        onClose={() => {\n          setViewerVisible(false);\n        }}\n        images={[\n          {\n            src: `${apiUrl}/static/image/${message.content}`\n          }\n        ]}\n      />\n      <img\n        src={`${apiUrl}/static/image/${message.content}`}\n        width={meta.width}\n        height={meta.height}\n        className={classes.mediaContent}\n        onClick={() => {\n          setViewerVisible(true);\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\nimport File from \"./File\";\nimport Video from \"./Video\";\nimport Image from \"./Image\";\nimport { ChatMessage } from \"../../types\";\n\ntype MessageProps = {\n  apiUrl: string;\n  message: ChatMessage;\n};\nconst MessageContent: React.FC<MessageProps> = ({\n  apiUrl,\n  message,\n}: MessageProps) => {\n  switch (message.messageType) {\n    case \"text\":\n      return <React.Fragment>{message.content}</React.Fragment>;\n    case \"video\":\n    case \"video_conference\":\n      return (\n        <Video\n          message={message}\n          apiUrl={apiUrl}\n          isConference={message.messageType === \"video_conference\"}\n        />\n      );\n    case \"image\":\n      return <Image message={message} apiUrl={apiUrl} />;\n    case \"file\":\n      return <File message={message} />;\n  }\n  return null;\n};\n\nexport default MessageContent;\n","import { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    rootContact: {\n      padding: theme.spacing(0.2),\n      paddingLeft: theme.spacing(2),\n      \"& span\": {\n        float: \"right\",\n        color: theme.palette.text.secondary,\n        fontSize: \"0.8rem\"\n      },\n      \"& $message\": {\n        backgroundColor: theme.palette.grey[200],\n        color: theme.palette.text.primary,\n        borderTopRightRadius: theme.spacing(3),\n        borderBottomRightRadius: theme.spacing(3)\n      },\n      \"& $firstMessage\": {\n        borderTopLeftRadius: theme.spacing(3),\n        marginTop: theme.spacing(3)\n      },\n      \"& $lastMessage\": {\n        borderTopRightRadius: theme.spacing(3),\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: theme.spacing(3),\n        marginBottom: theme.spacing(3)\n      }\n    },\n    rootUser: {\n      padding: theme.spacing(0.2),\n      paddingRight: theme.spacing(2),\n      justifyContent: \"flex-end\",\n      \"& span\": {\n        float: \"right\",\n        color: \"#D9DEEC\",\n        fontSize: \"0.8rem\"\n      },\n      \"& $message\": {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        borderTopLeftRadius: theme.spacing(3),\n        borderBottomLeftRadius: theme.spacing(3)\n      },\n      \"& $firstMessage\": {\n        borderTopRightRadius: theme.spacing(3),\n        marginTop: theme.spacing(3)\n      },\n      \"& $lastMessage\": {\n        borderTopLeftRadius: theme.spacing(3),\n        borderBottomRightRadius: 0,\n        marginBottom: theme.spacing(3)\n      }\n    },\n    rootNotify: {\n      justifyContent: \"center\",\n      \"& > *\": {\n        //padding: `0px ${theme.spacing(1)}`,\n        borderRadius: theme.spacing(3),\n        fontWeight: 500\n      }\n    },\n    message: {\n      //maxWidth: \"55%\",\n      //minWidth: \"50%\",\n      maxWidth: \"65%\",\n\n      [theme.breakpoints.down(\"md\")]: {\n        maxWidth: \"95%\"\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        maxWidth: \"85%\"\n      },\n\n      borderRadius: theme.spacing(1.2),\n      padding: theme.spacing(1.8)\n    },\n    firstMessage: {},\n    lastMessage: {},\n\n    file: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      cursor: \"pointer\"\n    },\n    header: {\n      flex: \"0 0 100%\",\n      overflow: \"hidden\",\n      fontWeight: \"bold\"\n    },\n    body: {\n      flex: \"1 1 auto\",\n      wordBreak: \"break-word\",\n      overflow: \"hidden\"\n    },\n    status: {\n      paddingLeft: theme.spacing(1),\n      flex: \"1 1 auto\",\n      alignSelf: \"flex-end\"\n    },\n    statusImage: {\n      fontSize: \"1rem\",\n      marginRight: theme.spacing(0.5),\n      verticalAlign: \"middle\"\n    }\n  })\n);\n","import * as React from \"react\";\nimport { Box, Link, ListItem, Typography } from \"@mui/material\";\n\nimport { DoneAll, Done } from \"@mui/icons-material\";\nimport { formatTime } from \"../utils/common\";\nimport MessageContent from \"./MessageContent\";\nimport { Alert } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatMessage, Contact, PrivateMessage, User } from \"../types\";\n\n/* styles */\nimport useStyles from \"./styles\";\n\ntype MessageProps = {\n  apiUrl: string;\n  user: User;\n  message: ChatMessage;\n  owner: Contact;\n  isGroupMessage: boolean; // сообщение в группу\n  isUserFirst: boolean; // начинает группу сообщений от одного пользователя\n  isUserLast: boolean; // завершает группу сообщений от одного пользователя\n  refOnLastMess: React.RefObject<HTMLDivElement> | null;\n  onContextMenu: (event: React.MouseEvent<HTMLElement>) => void;\n};\n\nconst wrapMessage = (\n  apiUrl: string,\n  message: ChatMessage,\n  classes: ReturnType<typeof useStyles>,\n  isUserFirst: boolean,\n  isUserLast: boolean,\n  onContextMenu: ((event: React.MouseEvent<HTMLElement>) => void) | undefined,\n  child: JSX.Element\n) => {\n  const { messageType } = message;\n\n  const className =\n    isUserFirst && isUserLast\n      ? `${classes.message} ${classes.firstMessage} ${classes.lastMessage}`\n      : isUserFirst\n      ? `${classes.message} ${classes.firstMessage}`\n      : isUserLast\n      ? `${classes.message} ${classes.lastMessage}`\n      : classes.message;\n\n  if (messageType === \"file\") {\n    return (\n      <Link\n        className={`${className} ${classes.file}`}\n        underline=\"none\"\n        href={`${apiUrl}/static/file/${message.content}`}\n        target=\"_blank\"\n        download\n        onContextMenu={onContextMenu}\n      >\n        {child}\n      </Link>\n    );\n  }\n  const isMedia =\n    messageType === \"image\" ||\n    messageType === \"video\" ||\n    messageType === \"video_conference\";\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection={isMedia ? \"column\" : \"row\"}\n      flexWrap=\"wrap\"\n      className={className}\n      onContextMenu={onContextMenu}\n    >\n      {child}\n    </Box>\n  );\n};\n\nconst Message: React.FC<MessageProps> = (props: MessageProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const {\n    apiUrl,\n    message,\n    owner,\n    refOnLastMess,\n    user,\n    isGroupMessage,\n    isUserFirst,\n    isUserLast\n  } = props;\n\n  if (message.messageType === \"notify\") {\n    // Уведомление - особый случай\n    const content =\n      message.content[0] === \"{\"\n        ? JSON.parse(message.content)\n        : message.content;\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Alert\n          severity={typeof content === \"string\" ? \"info\" : content.severity}\n          ref={refOnLastMess}\n        >\n          {typeof content === \"string\" ? content : content.message}\n        </Alert>\n      </ListItem>\n    );\n  }\n\n  if (message.isRevoke) {\n    // Удаленное сообщение\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Typography variant=\"body2\" ref={refOnLastMess} align=\"center\">\n          {message.userId === user.userId\n            ? t(\"CHAT.MESSAGE.REVOKED.YOU\")\n            : `${message.revokeUserName} ${t(\"CHAT.MESSAGE.REVOKED.CONTACT\")}`}\n        </Typography>\n      </ListItem>\n    );\n  }\n\n  const isMine = user.userId === message.userId;\n\n  return (\n    <ListItem className={isMine ? classes.rootUser : classes.rootContact}>\n      {wrapMessage(\n        apiUrl,\n        message,\n        classes,\n        isUserFirst,\n        isUserLast,\n        props.onContextMenu,\n        <React.Fragment>\n          {!isMine && isGroupMessage && owner && isUserFirst && (\n            <div className={classes.header}>{owner.username}</div>\n          )}\n          <div className={classes.body}>\n            <MessageContent message={message} apiUrl={apiUrl} />\n          </div>\n          <div className={classes.status} ref={refOnLastMess}>\n            <span>\n              {isMine ? (\n                (message as PrivateMessage).status === 0 ? (\n                  <Done className={classes.statusImage} />\n                ) : (\n                  <DoneAll className={classes.statusImage} />\n                )\n              ) : null}\n              {formatTime(message.cdate)}\n            </span>\n          </div>\n        </React.Fragment>\n      )}\n    </ListItem>\n  );\n};\nexport default Message;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport Typing from \"./Typing\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"../types\";\n\ntype ContactStatusProps = {\n  contact: Contact;\n  isTyping: boolean;\n};\n\nconst ContactStatus: React.FC<ContactStatusProps> = (\n  props: ContactStatusProps\n) => {\n  const { t } = useTranslation();\n\n  if (props.isTyping) return <Typing message={t(\"CHAT.STATUS.TYPING\")} />;\n  if (props.contact.online === 1)\n    return (\n      <Typography variant=\"body2\" color=\"primary\" component=\"span\">\n        {t(\"CHAT.STATUS.ONLINE\")}\n      </Typography>\n    );\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n      {t(\"CHAT.STATUS.OFFLINE\")}\n    </Typography>\n  );\n};\n\nexport default ContactStatus;\n","import React from \"react\";\nimport {\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@mui/material\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport ContactStatus from \"./ContactStatus\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Contact } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  star: {\n    fontSize: \"0.85rem\",\n    verticalAlign: \"middle\",\n  },\n}));\n\ntype ContactListProps = {\n  apiUrl: string;\n  contacts: Contact[];\n  owner?: number;\n  onClick?: (contact: Contact) => void;\n};\n\nconst ContactList: React.FC<ContactListProps> = (props: ContactListProps) => {\n  const classes = useStyles();\n  const { apiUrl, contacts, owner } = props;\n\n  return (\n    <List aria-label=\"contacts\">\n      {contacts.map((contact) => (\n        <ListItem\n          button\n          key={contact.userId}\n          onClick={() => props.onClick && props.onClick(contact)}\n        >\n          <ListItemAvatar>\n            <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={\n              <span>\n                {contact.username}{\" \"}\n                {owner === contact.userId && (\n                  <StarIcon className={classes.star} color=\"primary\" />\n                )}\n              </span>\n            }\n            secondary={<ContactStatus contact={contact} isTyping={false} />}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\nexport default ContactList;\n","import { Dialog, DialogTitle } from \"@mui/material\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"../types\";\nimport ContactList from \"./ContactList\";\n\ninterface AddContactProps {\n  open: boolean;\n  apiUrl: string;\n  contacts: Contact[];\n  onClose: (value?: Contact) => void;\n}\n\nconst AddContact: React.FC<AddContactProps> = (\n  props: AddContactProps\n) => {\n  const { onClose, open, apiUrl, contacts } = props;\n  const { t } = useTranslation();\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleListItemClick = (contact: Contact) => {\n    onClose(contact);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"add-contact-title\"\n      open={open}\n    >\n      <DialogTitle id=\"switch-operator-title\">\n        {t(\"CHAT.ADD_CONTACT\")}\n      </DialogTitle>\n      <ContactList\n        apiUrl={apiUrl}\n        contacts={contacts}\n        onClick={handleListItemClick}\n      />\n    </Dialog>\n  );\n};\n\nexport default AddContact;","import React from 'react';\nimport {\n  Alert,\n  Dialog,\n  DialogContent,\n  Slide,\n  Button,\n  DialogActions,\n  Typography,\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n/* eslint-disable react/prop-types */ // TODO: upgrade to latest eslint tooling\nexport default function AlertDialog({\n  children,\n  open,\n  setOpen,\n  severity = 'warning',\n}) {\n  const { t } = useTranslation();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogContent>\n        <Alert severity={severity}>\n          {typeof children === 'string' ? (\n            <Typography variant=\"body2\">{children}</Typography>\n          ) : (\n            children\n          )}\n        </Alert>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} variant=\"text\">\n          {t('COMPONENT.BUT_CLOSE')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport useCounter from \"../hooks/useCounter\";\nimport AlertDialog from \"./AlertDialog\";\n//import { useTranslation } from \"react-i18next\";\n\ntype ConferenceTimeProps = {\n  currentDate: Date;\n  finishDate: Date;\n};\n\nconst ConferenceTime: React.FC<ConferenceTimeProps> = ({\n  currentDate,\n  finishDate\n}: ConferenceTimeProps) => {\n  //const { t } = useTranslation();\n  const [modaleInfo, setModaleInfo] = useState(false);\n  const currTime = new Date(currentDate).getTime();\n  const finTime = new Date(finishDate).getTime();\n\n  //const diffTimeMin = Math.round((finTime - currTime) / (1000 * 60));\n  const diffTimeSec = Math.round((finTime - currTime) / 1000);\n  const { counter } = useCounter(diffTimeSec);\n\n  const hhMmSs = (totalSeconds: number) => {\n    const hours = Math.floor(totalSeconds / 3600);\n    const strHours = hours < 10 ? `0${hours}` : hours;\n    totalSeconds %= 3600;\n    const minutes = Math.floor(totalSeconds / 60);\n    const strMinutes = minutes < 10 ? `0${minutes}` : minutes;\n    const seconds = totalSeconds % 60;\n    const strSeconds = seconds < 10 ? `0${seconds}` : seconds;\n\n    const strTime = `${strHours}:${strMinutes}:${strSeconds}`;\n    return { hours, minutes, seconds, strTime };\n  };\n  const { minutes, seconds, strTime } = hhMmSs(counter);\n\n  useEffect(() => {\n    if (minutes === 3 && seconds === 0) {\n      setModaleInfo(true);\n    }\n  }, [counter]);\n\n  return (\n    <Box textAlign=\"center\">\n      <Typography variant=\"body2\" component=\"span\">\n        осталось:{\" \"}\n      </Typography>\n      <Typography variant=\"button\" component=\"span\">\n        {strTime}\n      </Typography>\n      <AlertDialog open={modaleInfo} setOpen={setModaleInfo} severity=\"info\">\n        <Typography variant=\"body1\" textAlign=\"center\">\n          До окончания конференции осталось:\n        </Typography>\n        <Typography variant=\"h6\" textAlign=\"center\">\n          {strTime}\n        </Typography>\n      </AlertDialog>\n    </Box>\n  );\n};\n\nexport default ConferenceTime;\n","import { useEffect, useRef, useState } from \"react\";\n\nexport default function useCounter(max = 30000) {\n  const [counter, setCounter] = useState(max);\n  const counterRef = useRef();\n\n  const handlerRefresh = () => {\n    setCounter(max);\n  };\n\n  // Counter\n  useEffect(() => {\n    counterRef.current =\n      counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\n    return () => clearInterval(counterRef.current);\n  }, [counter]);\n\n  return { counter, handlerRefresh };\n}\n","import React from \"react\";\nimport { Avatar, CardHeader, Button, Popover, IconButton } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport { useTranslation } from \"react-i18next\";\nimport VideoCallIcon from \"@mui/icons-material/VideoCall\";\nimport CallEndIcon from \"@mui/icons-material/CallEnd\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ContactStatus from \"./ContactStatus\";\nimport ContactList from \"./ContactList\";\nimport AddContact from \"./AddContact\";\nimport {\n  ChatRoom,\n  Contact,\n  Group,\n  SetTyping,\n  User,\n  ConferenceData\n} from \"../types\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nimport { isEmpty } from \"../utils/common\";\nimport ConferenceTime from \"./ConferenceTime\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popover: {\n      pointerEvents: \"none\"\n    },\n    paper: {\n      padding: theme.spacing(1)\n    },\n    avatarGroup: {\n      backgroundColor: \"#28B7C6\",\n      color: \"#fff\"\n    }\n  })\n);\n\ntype RoomHeaderProps = {\n  apiUrl: string;\n  user: User;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  conferenceJoined: boolean;\n  className: string;\n  operators: Contact[];\n  onVideoCall?: (chat: ChatRoom) => void;\n  onVideoEnd?: (conference: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst getGroupStatus = (group: Group, t: (key: string) => string) => {\n  const status = [`${group.members?.length} ${t(\"CHAT.MEMBERS\")}`];\n  const onlineCount = (group.members || []).reduce(\n    (sum: number, contact) => (contact.online ? sum + 1 : sum),\n    0\n  );\n  if (onlineCount) status.push(`${onlineCount} ${t(\"CHAT.STATUS.ONLINE\")}`);\n  return status.join(\", \");\n};\n\nconst RoomHeader: React.FC<RoomHeaderProps> = ({\n  apiUrl,\n  user,\n  chat,\n  typing,\n  conference,\n  conferenceJoined,\n  className,\n  operators,\n  onVideoCall,\n  onVideoEnd,\n  onConferencePause,\n  onOperatorAdd,\n  onLeaveGroup\n}: RoomHeaderProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const [addOperatorOpen, setAddOperatorOpen] = React.useState(false);\n\n  if (!chat)\n    return (\n      <CardHeader\n        avatar={<Avatar />}\n        title=\"\"\n        subheader=\"\"\n        className={className}\n      />\n    );\n\n  const handlePopoverOpen = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleAddOperatorOpen = () => {\n    setAddOperatorOpen(true);\n  };\n\n  const handleAddOperatorClose = (operator?: Contact) => {\n    setAddOperatorOpen(false);\n    if (onOperatorAdd && operator && chat)\n      onOperatorAdd(chat as Group, operator);\n  };\n\n  console.log(\"conference\", conference);\n\n  const group = chat as Group;\n  if (group.groupId) {\n    // группа\n    return (\n      <CardHeader\n        avatar={\n          <Avatar alt={group.name} className={classes.avatarGroup}>\n            <GroupIcon />\n          </Avatar>\n        }\n        title={group.name}\n        subheader={\n          <React.Fragment>\n            <span\n              aria-owns={anchorEl ? \"mouse-over-popover\" : undefined}\n              aria-haspopup=\"true\"\n              onMouseEnter={handlePopoverOpen}\n              onMouseLeave={handlePopoverClose}\n            >\n              {getGroupStatus(group, t)}\n            </span>\n            <Popover\n              id=\"mouse-over-popover\"\n              className={classes.popover}\n              classes={{\n                paper: classes.paper\n              }}\n              open={!!anchorEl}\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\"\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\"\n              }}\n              onClose={handlePopoverClose}\n              disableRestoreFocus\n            >\n              <ContactList\n                apiUrl={apiUrl}\n                contacts={group.members as Contact[]}\n                owner={group.userId}\n              />\n            </Popover>\n          </React.Fragment>\n        }\n        className={className}\n        action={\n          <React.Fragment>\n            {user.role === 4 && (\n              <React.Fragment>\n                <IconButton\n                  aria-label=\"add user\"\n                  onClick={handleAddOperatorOpen}\n                >\n                  <PersonAddIcon />\n                </IconButton>\n                <AddContact\n                  apiUrl={apiUrl}\n                  open={addOperatorOpen}\n                  contacts={operators}\n                  onClose={handleAddOperatorClose}\n                />\n              </React.Fragment>\n            )}\n            {user.role === 4 &&\n              group.members?.find(\n                it => it.userId !== user.userId && it.role === 4\n              ) &&\n              onLeaveGroup && (\n                <IconButton\n                  aria-label=\"leave group\"\n                  onClick={() => onLeaveGroup(group)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              )}\n          </React.Fragment>\n        }\n      />\n    );\n  }\n  const contact = chat as Contact;\n  const isTyping = !!typing?.contactId && typing?.userId === contact.userId;\n  /*\n  console.log(\n    'conference',\n    conference,\n    'user',\n    user,\n    'contact',\n    contact,\n  );\n*/\n\n  return (\n    <CardHeader\n      avatar={\n        <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n      }\n      title={contact.username}\n      subheader={<ContactStatus contact={contact} isTyping={isTyping} />}\n      className={className}\n      action={\n        <React.Fragment>\n          {conferenceJoined &&\n            conference &&\n            !isEmpty(conference) &&\n            onConferencePause != null && (\n              <Button\n                aria-label=\"cancel call\"\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                startIcon={<CallEndIcon color=\"error\" />}\n                onClick={() => onConferencePause(conference)}\n              >\n                {t(\"CHAT.CONFERENCE.PAUSE\")}\n              </Button>\n            )}\n\n          {conference &&\n            !isEmpty(conference) &&\n            onVideoEnd != null &&\n            user.role != null &&\n            [3, 4].includes(user.role) && (\n              <Button\n                aria-label=\"cancel call\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<CallEndIcon color=\"error\" />}\n                onClick={() => onVideoEnd(conference)}\n                style={{ marginLeft: 8 }}\n              >\n                {t(\"CHAT.CONFERENCE.FINISH\")}\n              </Button>\n            )}\n\n          {isEmpty(conference) &&\n            onVideoCall != null &&\n            user.role &&\n            [3, 4].includes(user.role) && (\n              <Button\n                aria-label=\"video call\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<VideoCallIcon />}\n                onClick={() => onVideoCall(contact)}\n              >\n                {t(\"CHAT.CONFERENCE.START\")}\n              </Button>\n            )}\n\n          {conference?.currentDate != null &&\n            conference?.finishDate != null && (\n              <ConferenceTime\n                currentDate={conference.currentDate}\n                finishDate={conference.finishDate}\n              />\n            )}\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default RoomHeader;\n","import React, { useCallback } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CircularProgress,\n  Divider,\n  List,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  IconButton,\n  useMediaQuery,\n  Tooltip\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport Entry from \"./Entry\";\nimport Message from \"./Message\";\nimport RoomHeader from \"./RoomHeader\";\nimport { useTranslation } from \"react-i18next\";\nimport { getChatId, isEmpty } from \"../utils/common\";\nimport {\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  SetTyping,\n  User,\n  Contact,\n  ConferenceData,\n  Group,\n  ContactGather\n} from \"../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      minWidth: 360,\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    inline: {\n      display: \"inline\"\n    },\n    messageListOuter: {\n      flex: 1,\n      overflowY: \"auto\",\n      margin: 0,\n      padding: 0,\n      scrollbarWidth: \"thin\",\n      scrollbarColor: \"#6b6b6b #fff\",\n      \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n        backgroundColor: \"#fff\"\n      },\n      \"&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb\": {\n        borderRadius: 8,\n        backgroundColor: \"#d5d9ef\",\n        border: \"5px solid #fff\"\n      },\n      \"&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus\": {\n        backgroundColor: \"#fff\"\n      },\n      \"&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active\": {\n        backgroundColor: \"#73d7f5\",\n        border: \"3px solid #fff\"\n      },\n      \"&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover\": {\n        backgroundColor: \"#73d7f5\",\n        border: \"3px solid #fff\"\n      },\n      \"&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner\": {\n        backgroundColor: \"#fff\"\n      }\n    },\n    messageList: {\n      height: \"100%\",\n      overflow: \"auto\"\n    },\n    roomHeader: {\n      flex: 1\n    },\n    roomProgress: {\n      padding: theme.spacing(2)\n    },\n    flexAll: {\n      flex: \"1 1 auto\"\n    },\n    flexEnd: {\n      justifyContent: \"flex-end\"\n    }\n  })\n);\n\nconst initialMenuState = {\n  message: null,\n  mouseX: null,\n  mouseY: null,\n  canCopy: false,\n  canDelete: false\n};\n\nconst initialScrollState = {\n  autoScroll: true,\n  height: 0\n};\n\ntype RoomProps = {\n  apiUrl: string;\n  user: User;\n  users: ContactGather;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  conferenceJoined: boolean;\n  loading: boolean;\n  pageSize: number;\n  operators: Contact[];\n  onExitRoom?: (chat: ChatRoom) => void;\n  onEnterRoom?: (chat: ChatRoom) => void;\n  onNeedMoreMessages: (chat: ChatRoom) => Promise<void>;\n  onMeesageDelete?: (chat: ChatRoom, message: ChatMessage) => void;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n  onVideoCall?: (chat: ChatRoom) => void;\n  onVideoEnd?: (chat: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst Room: React.FC<RoomProps> = (props: RoomProps) => {\n  const {\n    apiUrl,\n    user,\n    users,\n    chat,\n    typing,\n    conference,\n    conferenceJoined,\n    loading,\n    pageSize\n  } = props;\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down(\"sm\")\n  );\n  const [scrollState, setScrollState] = React.useState(initialScrollState);\n\n  const messages = chat?.messages;\n  const messageCount = messages?.length || 0;\n\n  const refOnLastMess = React.useRef<HTMLDivElement>(null);\n  const refList = React.useRef<HTMLUListElement>(null);\n\n  const [menuState, setMenuState] = React.useState<{\n    message: ChatMessage | null;\n    mouseX: null | number;\n    mouseY: null | number;\n    canCopy: boolean;\n    canDelete: boolean;\n  }>(initialMenuState);\n\n  React.useEffect(() => {\n    if (props.onEnterRoom && chat) props.onEnterRoom(chat);\n  }, [getChatId(chat)]);\n\n  React.useLayoutEffect(() => {\n    if (scrollState.autoScroll && refOnLastMess.current) {\n      refOnLastMess.current.scrollIntoView();\n    }\n  }, [getChatId(chat), messageCount]);\n\n  React.useLayoutEffect(() => {\n    if (!loading && refList.current && scrollState.height > 0) {\n      refList.current.scrollTop =\n        refList.current.scrollHeight - scrollState.height;\n      setScrollState(initialScrollState);\n    }\n  }, [getChatId(chat), loading, scrollState.height]);\n\n  const onScroll = React.useCallback(\n    async (event: React.UIEvent<HTMLUListElement>) => {\n      const { currentTarget } = event;\n      if (!currentTarget || !chat || !!chat.noMoreData) return;\n      if (currentTarget.scrollTop === 0) {\n        if (messageCount >= pageSize && !loading && props.onNeedMoreMessages) {\n          setScrollState({\n            autoScroll: false,\n            height: currentTarget.scrollHeight\n          });\n          props.onNeedMoreMessages(chat);\n        }\n      }\n    },\n    [chat, loading]\n  );\n\n  const handleMenuPopup = (\n    message: ChatMessage,\n    event: React.MouseEvent<HTMLElement>\n  ) => {\n    const canCopy = message.messageType === \"text\";\n    const canDelete =\n      user.userId === message.userId &&\n      !!props.onMeesageDelete &&\n      new Date().getTime() - new Date(message.cdate).getTime() <= 1000 * 60 * 2;\n    if (!canCopy && !canDelete) {\n      setMenuState(initialMenuState);\n      return;\n    }\n    event.preventDefault();\n    setMenuState({\n      message,\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4,\n      canCopy,\n      canDelete\n    });\n  };\n\n  const handleMenuClose = () => {\n    setMenuState(initialMenuState);\n  };\n\n  const handleCopy = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (!message) return;\n    navigator.clipboard.writeText(message.content);\n  }, [menuState.message]);\n\n  const handleDelete = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (props.onMeesageDelete && chat && message)\n      props.onMeesageDelete(chat, message);\n  }, [menuState.message]);\n\n  //  console.log(\"chat\", chat);\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <Box display=\"flex\" flexDirection=\"row\">\n        {chat && isMobile && (\n          <Tooltip title=\"Вернуться в конференцию\">\n            <IconButton\n              aria-label=\"exit room\"\n              onClick={() => props.onExitRoom && props.onExitRoom(chat)}\n            >\n              <ArrowBackIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {/* {!isMobile && <CheckAudiVideoPerm />} */}\n\n        <RoomHeader\n          apiUrl={apiUrl}\n          user={user}\n          chat={chat}\n          typing={typing}\n          conference={conference}\n          conferenceJoined={conferenceJoined}\n          operators={props.operators}\n          className={classes.roomHeader}\n          onVideoCall={props.onVideoCall}\n          onVideoEnd={props.onVideoEnd}\n          onConferencePause={props.onConferencePause}\n          onOperatorAdd={props.onOperatorAdd}\n          onLeaveGroup={props.onLeaveGroup}\n        />\n        {loading && (\n          <div className={classes.roomProgress}>\n            <CircularProgress size={20} />\n          </div>\n        )}\n      </Box>\n      <Divider />\n      <CardContent className={classes.messageListOuter}>\n        {!isEmpty(messages) ? (\n          <List className={classes.messageList} onScroll={onScroll}>\n            {messages != null &&\n              (messages as ChatMessage[]).map((message, inx) => (\n                <Message\n                  key={inx}\n                  apiUrl={apiUrl}\n                  user={user}\n                  message={message}\n                  owner={users[message.userId]}\n                  isGroupMessage={!!chat?.groupId}\n                  isUserFirst={\n                    inx === 0 ||\n                    messages[inx - 1].messageType === \"notify\" ||\n                    messages[inx - 1].userId !== messages[inx].userId\n                  }\n                  isUserLast={\n                    inx === messages.length - 1 ||\n                    messages[inx + 1].messageType === \"notify\" ||\n                    messages[inx + 1].userId !== messages[inx].userId\n                  }\n                  onContextMenu={event => handleMenuPopup(message, event)}\n                  refOnLastMess={\n                    inx === messages.length - 1 ? refOnLastMess : null\n                  }\n                />\n              ))}\n          </List>\n        ) : null}\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Entry\n          chat={chat}\n          onTyping={props.onTyping}\n          onSendMessage={props.onSendMessage}\n        />\n      </CardContent>\n      <Menu\n        keepMounted\n        open={menuState.mouseY !== null}\n        onClose={handleMenuClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          menuState.mouseY !== null && menuState.mouseX !== null\n            ? { top: menuState.mouseY, left: menuState.mouseX }\n            : undefined\n        }\n      >\n        <MenuItem onClick={handleCopy} disabled={!menuState.canCopy}>\n          <span className={classes.flexAll}>{t(\"CHAT.MESSAGE.MENU.COPY\")}</span>\n          <ListItemIcon className={classes.flexEnd}>\n            <FileCopyIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n        <MenuItem onClick={handleDelete} disabled={!menuState.canDelete}>\n          <span className={classes.flexAll}>\n            {t(\"CHAT.MESSAGE.MENU.DELETE\")}\n          </span>\n          <ListItemIcon className={classes.flexEnd}>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n      </Menu>\n    </Card>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport {\n  Avatar,\n  Badge,\n  Box,\n  Chip,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles, withStyles } from \"@mui/styles\";\n\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport { formatTime, getChatName } from \"../utils/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatMessage, ChatRoom, Contact, Group, SetTyping } from \"../types\";\n\ntype RoomListItemProps = {\n  apiUrl: string;\n  chat: ChatRoom;\n  active: boolean;\n  typing: SetTyping | null;\n  onClick: React.MouseEventHandler<HTMLDivElement> | undefined;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      flex: \"1 1 auto\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n    time: {\n      paddingLeft: theme.spacing(1),\n      justifyContent: \"flex-end\",\n      whiteSpace: \"nowrap\",\n    },\n    unread: {\n      justifyContent: \"flex-end\",\n      maxHeight: 20,\n    },\n    avatarGroup: {\n      backgroundColor: \"#28B7C6\",\n      color: \"#fff\",\n    },\n  })\n);\n\nconst getMessageText = (\n  message: ChatMessage | null,\n  t: (key: string) => string\n) => {\n  if (!message) return null;\n  switch (message.messageType) {\n    case \"text\":\n      return message.content;\n    case \"image\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.IMAGE\")}]`;\n    case \"video\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.VIDEO\")}]`;\n    case \"file\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.FILE\")}]`;\n    case \"notify\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.NOTIFY\")}]`;\n    default:\n      return null;\n  }\n};\n\nconst TypingBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: \"#44b700\",\n      color: \"#44b700\",\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      \"&::after\": {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"50%\",\n        animation: \"$ripple 1.2s infinite ease-in-out\",\n        border: \"1px solid currentColor\",\n        content: '\"\"',\n      },\n    },\n    \"@keyframes ripple\": {\n      \"0%\": {\n        transform: \"scale(.8)\",\n        opacity: 1,\n      },\n      \"100%\": {\n        transform: \"scale(2.4)\",\n        opacity: 0,\n      },\n    },\n  })\n)(Badge);\n\nconst OnlineBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: theme.palette.primary.main,\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    },\n  })\n)(Badge);\n\nconst contactAvatar = (\n  apiUrl: string,\n  contact: Contact,\n  typing: SetTyping | null\n): JSX.Element => {\n  const avatar = (\n    <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n  );\n\n  const isTyping = !!typing?.contactId && typing?.userId === contact.userId;\n  if (isTyping)\n    return (\n      <TypingBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </TypingBadge>\n    );\n\n  if (contact?.online)\n    return (\n      <OnlineBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </OnlineBadge>\n    );\n\n  return avatar;\n};\n\nconst RoomListItem: React.FC<RoomListItemProps> = (\n  props: RoomListItemProps\n) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { apiUrl, chat, typing } = props;\n  const roomName = getChatName(chat);\n\n  const avatar = (chat as Group).groupId ? (\n    <Avatar alt={roomName} className={classes.avatarGroup}>\n      <GroupIcon />{\" \"}\n    </Avatar>\n  ) : (\n    contactAvatar(apiUrl, chat as Contact, typing)\n  );\n\n  const lastMessage =\n    chat.messages && chat.messages.length > 0\n      ? chat.messages[chat.messages.length - 1]\n      : null;\n\n  const roomText = getMessageText(lastMessage, t);\n  const roomTime = lastMessage?.cdate;\n\n  return (\n    <ListItem button selected={props.active} onClick={props.onClick}>\n      <ListItemAvatar>{avatar}</ListItemAvatar>\n      <ListItemText\n        secondaryTypographyProps={{ component: \"span\" }}\n        primary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomName}</span>\n            <span className={classes.time}>{formatTime(roomTime)}</span>\n          </Box>\n        }\n        secondary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomText}</span>\n            {chat.unreadCount ? (\n              <Chip\n                className={classes.unread}\n                component=\"span\"\n                size=\"small\"\n                color=\"primary\"\n                label={chat.unreadCount}\n              />\n            ) : null}\n          </Box>\n        }\n      />\n    </ListItem>\n  );\n};\nexport default RoomListItem;\n","import React from \"react\";\nimport List from \"@mui/material/List\";\nimport { Card, CardHeader, Divider, TextField } from \"@mui/material\";\nimport RoomListItem from \"./RoomListItem\";\nimport {\n  chatRoomComparer,\n  getChatId,\n  getChatName,\n  isEmpty,\n} from \"../utils/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatRoom, Contact, Group, SetTyping, User } from \"../types\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  searchField: {\n    width: \"100%\",\n  },\n  listStyle: {\n    height: \"89.5%\",\n    overflowY: \"auto\",\n    scrollbarColor: \"#6b6b6b #fff\",\n    \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n      backgroundColor: \"#fff\",\n    },\n    \"&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb\": {\n      borderRadius: 8,\n      backgroundColor: \"#d5d9ef\",\n      border: \"5px solid #fff\",\n    },\n    \"&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus\": {\n      backgroundColor: \"#fff\",\n    },\n    \"&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active\": {\n      backgroundColor: \"#73d7f5\",\n      border: \"3px solid #fff\",\n    },\n    \"&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover\": {\n      backgroundColor: \"#73d7f5\",\n      border: \"3px solid #fff\",\n    },\n    \"&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner\": {\n      backgroundColor: \"#fff\",\n    },\n  },\n}));\n\ntype RoomListProps = {\n  apiUrl: string;\n  user: User;\n  activeRoom: ChatRoom | null;\n  groups: Group[];\n  contacts: Contact[];\n  typing: SetTyping | null;\n  onChangeChat?: (chat: ChatRoom) => void;\n};\n\nconst filterChats = (chats: ChatRoom[], filter: string | null): ChatRoom[] => {\n  if (filter === null) return chats;\n  const lowerFilter = filter.toLowerCase();\n  return chats.filter(\n    (chat) =>\n      getChatName(chat).toLowerCase().indexOf(lowerFilter.toLowerCase()) !== -1\n  );\n};\n\nconst sortChats = (\n  userId: number,\n  groups: ChatRoom[],\n  contacts: ChatRoom[]\n) => {\n  let roomArr = [...groups, ...contacts];\n  //console.log('groups', groups, 'contacts', contacts);\n\n  // Сортировать окно чата (по времени последних сообщений)\n  roomArr = roomArr.sort(chatRoomComparer);\n\n  // Проверяем, есть ли список, который нужно закрепить\n  const topChatId = localStorage.getItem(`${userId}-topChatId`) as string;\n  if (topChatId) {\n    const chat = roomArr.find((c) => getChatId(c) === topChatId);\n    if (chat) {\n      // На первое место\n      roomArr = roomArr.filter((k) => getChatId(k) !== topChatId);\n      chat.isTop = true;\n      roomArr.unshift(chat);\n    }\n  }\n\n  return roomArr;\n};\n\nconst RoomList: React.FC<RoomListProps> = (props: RoomListProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [chats, setChats] = React.useState<ChatRoom[]>(\n    sortChats(\n      props.user.userId,\n      filterChats(props.groups, null),\n      filterChats(props.contacts, null)\n    )\n  );\n\n  const onSearchChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    //console.log(\"e.target.value\", e.target.value);\n\n    setChats(\n      sortChats(\n        props.user.userId,\n        filterChats(props.groups, e.target.value),\n        filterChats(props.contacts, e.target.value)\n      )\n    );\n  };\n  //const activeItem = (id: number) => id === props.activeRoom?.userId;\n\n  //console.log(\"chats\", chats);\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <CardHeader\n        title={\n          <TextField\n            className={classes.searchField}\n            label={t(\"CHAT.INPUT_SEARCH_CONTACT\")}\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            onChange={onSearchChange}\n          />\n        }\n      />\n      <Divider />\n      <List aria-label=\"rooms\" className={classes.listStyle}>\n        {!isEmpty(chats) &&\n          chats.map(\n            (chat) =>\n              !isEmpty(chat) && (\n                <RoomListItem\n                  key={getChatId(chat)}\n                  apiUrl={props.apiUrl}\n                  chat={chat}\n                  active={chat === props.activeRoom}\n                  typing={props.typing}\n                  onClick={() =>\n                    props.onChangeChat != null && props.onChangeChat(chat)\n                  }\n                />\n              )\n          )}\n      </List>\n    </Card>\n  );\n};\nexport default RoomList;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { ConferenceData } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 4\n  }\n}));\n\ntype ConferenceProps = {\n  conference: ConferenceData | null;\n  onClose: (conference: ConferenceData | null) => void;\n};\n\nconst Conference: React.FC<ConferenceProps> = ({\n  conference,\n  onClose\n}: ConferenceProps) => {\n  const classes = useStyles();\n  const ref = React.useRef<HTMLIFrameElement>(null);\n\n  useEffect(() => {\n    const listener = ({ source, data }: MessageEvent) => {\n      if (source === ref.current?.contentWindow) {\n        const { type } = data;\n        if (\n          [\n            \"notSupported\",\n            \"connectionFail\",\n            // \"loginFail\",\n            \"callFail\",\n            \"hangUp\",\n            \"remoteHangUp\"\n            // \"onParticipantLeft\"\n          ].includes(type)\n        )\n          onClose(conference);\n      }\n    };\n    window.addEventListener(\"message\", listener);\n    return () => {\n      window.removeEventListener(\"message\", listener);\n    };\n  }, [conference?.id]);\n\n  return (\n    <iframe\n      title=\"conference\"\n      className={classes.root}\n      src={conference?.url}\n      allowFullScreen\n      allow=\"microphone; camera; autoplay; display-capture\"\n      ref={ref}\n    />\n  );\n};\nexport default Conference;\n","import React from \"react\";\nimport { Avatar, Button,  Paper } from \"@mui/material\";\nimport { ConferenceData, Contact } from \"../types\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  pulse: {\n    height: 100,\n    width: 100,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n    \"&::before\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\",\n    },\n    \"&::after\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\",\n      animationDelay: \"0.3s\",\n    },\n  },\n  avatar: {\n    width: \"80%\",\n    height: \"80%\",\n  },\n  footer: {\n    width: \"100%\",\n    alignSelf: \"flex-end\",\n    paddingTop: 64,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  \"@keyframes pulse\": {\n    \"0%\": {\n      transform: \"scale(0.5)\",\n      opacity: 0,\n    },\n    \"50%\": {\n      transform: \"scale(1)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(1.3)\",\n      opacity: 0,\n    },\n  },\n}));\n\ntype ConferenceCallProps = {\n  conference: ConferenceData;\n  contact: Contact;\n  apiUrl: string;\n  onAccept: (conference: ConferenceData) => void;\n};\n\nconst ConferenceCall: React.FC<ConferenceCallProps> = ({\n  conference,\n  contact,\n  apiUrl,\n  onAccept,\n}: ConferenceCallProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.pulse}>\n        {contact ? (\n          <Avatar\n            className={classes.avatar}\n            alt={contact.username}\n            src={`${apiUrl}${contact.avatar}`}\n          />\n        ) : (\n          <Avatar className={classes.avatar} />\n        )}\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => onAccept(conference)}\n        >\n          {t(\"CHAT.CONFERENCE.JOIN\")}\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n\nexport default ConferenceCall;\n","import React from \"react\";\nimport {\n  AddGroupMessages,\n  AddPrivateMessages,\n  ChatRoom,\n  Contact,\n  ContactGather,\n  Group,\n  GroupGather,\n  GroupMember,\n  GroupMessage,\n  MessageOperation,\n  PrivateMessage,\n  SetActiveRoom,\n  //SetUser,\n  SetTyping,\n  User,\n  ConferenceData,\n  GroupMap\n} from \"../types\";\nimport { chatRoomComparer } from \"../utils/common\";\n\nexport interface ChatState {\n  tokenKey: string;\n  user: User;\n  token: string;\n  activeRoom: ChatRoom | null;\n  chatOld: ChatRoom | null;\n\n  groupGather: GroupGather;\n  userGather: ContactGather;\n  contactGather: ContactGather;\n  operators: Contact[];\n  initialContactId: number | null;\n  conference: {\n    data: ConferenceData | null;\n    joined: boolean;\n    ringPlayed: boolean;\n  };\n  typing: SetTyping | null;\n  loading: boolean;\n  error?: string;\n  success?: string;\n}\n\nconst emptyUser: User = {\n  userId: 0,\n  username: \"\",\n  password: \"\",\n  avatar: \"\",\n  langCode: \"\"\n};\n\nconst emptyChatState: ChatState = {\n  tokenKey: \"\", // ключ, где хранить токен\n  user: emptyUser, // пользователь\n  token: \"\", // токен\n  activeRoom: null, // активная комната\n  chatOld: null, // активная комната\n\n  groupGather: {}, // список групп\n  userGather: {}, // список онлайн\n  contactGather: {}, // контакты\n  operators: [], // операторы\n  initialContactId: null, // начальный контакт\n  conference: {\n    data: null, // данные конференции\n    joined: false,\n    ringPlayed: false\n  },\n  typing: null, // кто печатает текст\n  loading: false, // загрузка данных\n  error: undefined, // ошибка\n  success: undefined // НЕ ошибка\n};\n\ntype ChatActionType =\n  | \"ADD_GROUP_MEMBER\"\n  | \"ADD_GROUP_MESSAGE\"\n  | \"ADD_GROUP_MESSAGES\"\n  | \"SET_GROUP_MESSAGES\"\n  | \"ADD_PRIVATE_MESSAGE\"\n  | \"ADD_PRIVATE_MESSAGES\"\n  | \"SET_PRIVATE_MESSAGES\"\n  | \"SET_ACTIVE_ROOM\"\n  | \"UPDATE_ACTIVE_ROOM\"\n  | \"SET_GROUP_GATHER\"\n  | \"SET_CONTACT_GATHER\"\n  | \"SET_USER_GATHER\"\n  | \"DEL_GROUP\"\n  | \"DEL_GROUP_MEMBER\"\n  | \"DEL_CONTACT\"\n  | \"ADD_CONTACT_UNREAD_GATHER\"\n  | \"LOSE_CONTACT_UNREAD_GATHER\"\n  | \"ADD_GROUP_UNREAD_GATHER\"\n  | \"LOSE_GROUP_UNREAD_GATHER\"\n  | \"REVOKE_MESSAGE\"\n  | \"USER_ONLINE\"\n  | \"USER_OFFLINE\"\n  | \"UPDATE_USER_INFO\"\n  | \"SET_INITIAL_CONTACT_ID\"\n  | \"SET_CONFERENCE\"\n  | \"JOIN_CONFERENCE\"\n  | \"PAUSE_CONFERENCE\"\n  | \"STOP_CONFERENCE\"\n  | \"SET_TYPING\"\n  | \"MARK_AS_READ\"\n  | \"UPDATE_GROUP_INFO\"\n  | \"MARK_PRIVATE_MESSAGES_READ\"\n  | \"SET_LOADING\"\n  | \"SET_ERROR\"\n  | \"SET_SUCCES\"\n  | \"SET_USER\"\n  | \"SET_TOKEN\"\n  | \"CLEAR_USER\"\n  | \"CLEAR_CHAT_DATA\"\n  | \"SET_OPERATORS\";\n\ntype Action = {\n  type: ChatActionType;\n  payload?:\n    | null\n    | boolean\n    | number\n    | string\n    | Group\n    | Contact\n    | User\n    | PrivateMessage\n    | GroupMessage\n    | SetTyping\n    | MessageOperation\n    | GroupMember\n    | AddPrivateMessages\n    | AddGroupMessages\n    | SetActiveRoom\n    | ConferenceData\n    | Contact[]\n    | GroupMap;\n};\n\nconst getFreshActiveRoom = (state: ChatState) => {\n  if (state.activeRoom)\n    return (\n      state.groupGather[(state.activeRoom as Group).groupId] ||\n      state.contactGather[state.activeRoom.userId]\n    );\n  return null;\n};\n\nconst getActiveRoom = (state: ChatState) => {\n  const { activeRoom, initialContactId, contactGather } = state;\n  let newActiveRoom: ChatRoom | null = null;\n  if (initialContactId) {\n    newActiveRoom = contactGather[initialContactId];\n  } else if (activeRoom) {\n    newActiveRoom = getFreshActiveRoom(state);\n  } else {\n    // ищем комнату с самым свежим сообщением\n    const rooms = [\n      ...Object.values(state.contactGather),\n      ...Object.values(state.groupGather)\n    ].sort(chatRoomComparer);\n    if (rooms.length > 0) newActiveRoom = rooms[0];\n  }\n  return newActiveRoom;\n};\n\nconst setUserOnline = (\n  state: ChatState,\n  userId: number,\n  online: 0 | 1\n): ChatState => {\n  const newState = { ...state };\n  // Обновить статусы приватных чатов\n  if (state.contactGather[userId])\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      online\n    };\n\n  // Обновить статус участника в группах\n  for (const group of Object.values(state.groupGather) as Group[]) {\n    if (!group.members) continue;\n    const member = group.members.find(m => m.userId === userId);\n    if (member) {\n      const index = group.members.indexOf(member);\n      group.members[index] = { ...member, online };\n    }\n  }\n  // Обновить статус операторов\n  const idx = newState.operators.findIndex(it => it.userId === userId);\n  if (idx !== -1)\n    newState.operators[idx] = { ...newState.operators[idx], online };\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addGroupMessage = (state: ChatState, payload: GroupMessage) => {\n  const newState = { ...state };\n  const { groupId } = payload;\n  if (newState.groupGather[groupId]) {\n    if (newState.groupGather[groupId].messages) {\n      newState.groupGather[groupId].messages = [\n        ...(newState.groupGather[groupId].messages as GroupMessage[]),\n        payload\n      ];\n    } else {\n      newState.groupGather[groupId] = {\n        ...state.groupGather[groupId],\n        messages: [payload]\n      };\n    }\n  }\n\n  // увеличиваем счетчик новых сообщений, если это не активная комната и сообщение не от нас\n  const { activeRoom } = newState;\n  if (\n    activeRoom &&\n    (activeRoom as Group).groupId !== groupId &&\n    payload.userId !== state.user.userId\n  ) {\n    return groupUnreadGather(newState, groupId, (x?: number) => (x || 0) + 1);\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addPrivateMessage = (state: ChatState, payload: PrivateMessage) => {\n  const newState = { ...state };\n  const contactId =\n    payload.contactId === state.user.userId\n      ? payload.userId\n      : payload.contactId;\n\n  // 1 добавляем сообщение\n  if (newState.contactGather[contactId].messages) {\n    newState.contactGather[contactId].messages = [\n      ...(newState.contactGather[contactId].messages as PrivateMessage[]),\n      payload\n    ];\n  } else {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [payload]\n    };\n  }\n\n  // 2 если это сообщение в неактивной комнате и источник не мы (в соседней вкладке), то увеличиваем счетчик непрочитанных\n  if (\n    newState.activeRoom?.userId !== contactId &&\n    payload.userId !== state.user.userId\n  ) {\n    return contactUnreadGather(\n      newState,\n      contactId,\n      (x?: number) => (x || 0) + 1\n    );\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst contactUnreadGather = (\n  state: ChatState,\n  userId: number,\n  predicate: (x?: number) => number\n) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      unreadCount: predicate(newState.contactGather[userId].unreadCount)\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst groupUnreadGather = (\n  state: ChatState,\n  groupId: number,\n  predicate: (x?: number) => number\n) => {\n  const newState = { ...state };\n\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      unreadCount: predicate(newState.groupGather[groupId].unreadCount)\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst revokeMessage = (state: ChatState, payload: MessageOperation) => {\n  const { userId } = state.user;\n  const newState = { ...state };\n  const userName =\n    payload.username || newState.userGather[payload.userId as number].username;\n  if (payload.groupId) {\n    const { messages } = newState.groupGather[payload.groupId];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find(message => message._id === payload._id);\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName\n        };\n      }\n    }\n  } else {\n    const { messages } = newState.contactGather[\n      payload.contactId === userId\n        ? (payload.userId as number)\n        : (payload.contactId as number)\n    ];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find(message => message._id === payload._id);\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName\n        };\n      }\n    }\n  }\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst delContact = (state: ChatState, userId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.contactGather[userId];\n  delete newState.contactGather[userId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroup = (state: ChatState, groupId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.groupGather[groupId];\n  delete newState.groupGather[groupId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroupMember = (state: ChatState, data: GroupMap) => {\n  const newState = { ...state };\n\n  const group = newState.groupGather[data.groupId];\n  if (group) {\n    group.members = group.members?.filter(it => it.userId !== data.userId);\n  }\n\n  return newState;\n};\n\nconst updateGroupInfo = (state: ChatState, group: Group) => {\n  const newState = { ...state };\n\n  const { groupId, name, notice } = group;\n  const info = newState.groupGather[groupId];\n  if (info) {\n    newState.groupGather[groupId] = { ...info, name, notice };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst updateUserInfo = (state: ChatState, user: User) => {\n  const newState = { ...state };\n\n  const { userId, username, avatar } = user;\n\n  if (newState.userGather[userId]) {\n    newState.userGather[userId] = {\n      ...newState.userGather[userId],\n      username,\n      avatar\n    };\n  }\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      username,\n      avatar\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMember = (state: ChatState, payload: GroupMember) => {\n  const members: Contact[] = payload.members.map(member => ({\n    ...member,\n    isManager: 0\n  }));\n\n  const newState = { ...state };\n\n  if (newState.groupGather[payload.groupId].members && members) {\n    newState.groupGather[payload.groupId].members = [\n      ...(state.groupGather[payload.groupId].members as Contact[]),\n      ...members\n    ];\n  } else {\n    newState.groupGather[payload.groupId] = {\n      ...newState.groupGather[payload.groupId],\n      members\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst markPrivateMessagesRead = (state: ChatState, userId: number) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    const updatedValue = { ...newState.contactGather[userId] };\n\n    if (updatedValue.messages) {\n      for (let i = 0; i < updatedValue.messages.length; i++)\n        updatedValue.messages[i] = {\n          ...updatedValue.messages[i],\n          status: 1\n        };\n    }\n    newState.contactGather[userId] = updatedValue;\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addPrivateMessages = (state: ChatState, data: AddPrivateMessages) => {\n  const newState = { ...state };\n\n  const { messages, contactId } = data;\n\n  if (newState.contactGather[contactId]) {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [\n        ...(messages || []),\n        ...(newState.contactGather[contactId].messages || [])\n      ],\n      noMoreData: messages?.length ? messages?.length < data.pageSize : false\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMessages = (state: ChatState, data: AddGroupMessages) => {\n  const newState = { ...state };\n\n  const { groupId, messages, userArr: users } = data;\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      messages: [\n        ...(messages || []),\n        ...(newState.groupGather[groupId].messages || [])\n      ],\n      noMoreData: messages?.length ? messages?.length < data.pageSize : false\n    };\n  }\n\n  newState.userGather = { ...newState.userGather };\n  for (const user of users) {\n    if (!newState.userGather[user.userId]) {\n      newState.userGather[user.userId] = user;\n    }\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst setActiveRoom = (state: ChatState, data: SetActiveRoom) => {\n  //if (state.activeRoom && data.ifNotExists) return state;\n  return {\n    ...state,\n    chatOld: state.activeRoom != null ? { ...state.activeRoom } : null,\n    activeRoom: data.groupId\n      ? state.groupGather[data.groupId]\n      : data.contactId\n      ? state.contactGather[data.contactId]\n      : null\n  };\n};\n\nconst setToken = (state: ChatState, token: string): ChatState => {\n  localStorage.setItem(state.tokenKey, token);\n  return {\n    ...state,\n    token\n  };\n};\n\nconst clearUser = (state: ChatState): ChatState => {\n  localStorage.removeItem(state.tokenKey);\n  return {\n    ...state,\n    token: \"\",\n    user: emptyUser\n  };\n};\n\nconst setConference = (\n  state: ChatState,\n  conference: ConferenceData\n): ChatState => {\n  return {\n    ...state,\n    conference: {\n      data: { ...conference },\n      joined: conference?.userId === state.user.userId,\n      ringPlayed: conference?.userId !== state.user.userId\n    }\n  };\n};\n\nconst pauseConference = (\n  state: ChatState,\n  conference: ConferenceData\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: {\n      data: { ...state.conference.data },\n      joined: false,\n      ringPlayed: false\n    }\n  };\n};\n\nconst stopConference = (\n  state: ChatState,\n  conference: ConferenceData\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: { data: null, joined: false, ringPlayed: false }\n  };\n};\n\nfunction chatReducer(state: ChatState, action: Action): ChatState {\n  switch (action.type) {\n    case \"SET_GROUP_GATHER\":\n      return {\n        ...state,\n        groupGather: {\n          ...state.groupGather,\n          [(action.payload as Group).groupId]: action.payload as Group\n        }\n      };\n    case \"SET_CONTACT_GATHER\":\n      return {\n        ...state,\n        contactGather: {\n          ...state.contactGather,\n          [(action.payload as Contact).userId]: action.payload as Contact\n        }\n      };\n    case \"DEL_GROUP\":\n      return delGroup(state, action.payload as number);\n    case \"DEL_GROUP_MEMBER\":\n      return delGroupMember(state, action.payload as GroupMap);\n    case \"DEL_CONTACT\":\n      return delContact(state, (action.payload as Contact).userId);\n    case \"SET_USER_GATHER\":\n      return {\n        ...state,\n        userGather: {\n          ...state.userGather,\n          [(action.payload as User).userId]: action.payload as User\n        }\n      };\n    case \"UPDATE_ACTIVE_ROOM\":\n      return { ...state, activeRoom: getActiveRoom(state) };\n    case \"SET_ACTIVE_ROOM\":\n      return setActiveRoom(state, action.payload as SetActiveRoom);\n    case \"USER_ONLINE\":\n      return setUserOnline(state, action.payload as number, 1);\n    case \"USER_OFFLINE\":\n      return setUserOnline(state, action.payload as number, 0);\n    case \"ADD_GROUP_MESSAGE\":\n      return addGroupMessage(state, action.payload as GroupMessage);\n    case \"ADD_PRIVATE_MESSAGE\":\n      return addPrivateMessage(state, action.payload as PrivateMessage);\n    case \"ADD_GROUP_UNREAD_GATHER\":\n      return groupUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1\n      );\n    case \"ADD_CONTACT_UNREAD_GATHER\":\n      return contactUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1\n      );\n    case \"SET_TYPING\":\n      return { ...state, typing: action.payload as SetTyping };\n    case \"LOSE_GROUP_UNREAD_GATHER\":\n      return groupUnreadGather(state, action.payload as number, () => 0);\n    case \"LOSE_CONTACT_UNREAD_GATHER\":\n      return contactUnreadGather(state, action.payload as number, () => 0);\n    case \"REVOKE_MESSAGE\":\n      return revokeMessage(state, action.payload as MessageOperation);\n    case \"UPDATE_GROUP_INFO\":\n      return updateGroupInfo(state, action.payload as Group);\n    case \"UPDATE_USER_INFO\":\n      return updateUserInfo(state, action.payload as User);\n    case \"ADD_GROUP_MEMBER\":\n      return addGroupMember(state, action.payload as GroupMember);\n    case \"SET_CONFERENCE\":\n      return setConference(state, action.payload as ConferenceData);\n    case \"JOIN_CONFERENCE\":\n      return {\n        ...state,\n        conference: {\n          data: { ...(action.payload as ConferenceData) },\n          joined: true,\n          ringPlayed: false\n        }\n      };\n    case \"PAUSE_CONFERENCE\":\n      return pauseConference(state, action.payload as ConferenceData);\n    case \"STOP_CONFERENCE\":\n      return stopConference(state, action.payload as ConferenceData);\n    case \"MARK_PRIVATE_MESSAGES_READ\":\n      return markPrivateMessagesRead(state, action.payload as number);\n    case \"ADD_PRIVATE_MESSAGES\":\n      return addPrivateMessages(state, action.payload as AddPrivateMessages);\n    case \"ADD_GROUP_MESSAGES\":\n      return addGroupMessages(state, action.payload as AddGroupMessages);\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        loading: action.payload as boolean,\n        error: \"\"\n      };\n    case \"SET_ERROR\":\n      return {\n        ...state,\n        error: action.payload as string,\n        success: undefined\n      };\n    case \"SET_SUCCES\":\n      return {\n        ...state,\n        success: action.payload as string,\n        error: undefined\n      };\n    case \"SET_TOKEN\":\n      return setToken(state, action.payload as string);\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.payload as User\n      };\n    case \"CLEAR_USER\":\n      return clearUser(state);\n    case \"CLEAR_CHAT_DATA\":\n      return {\n        ...state,\n        activeRoom: null,\n        groupGather: {},\n        userGather: {},\n        contactGather: {},\n        conference: {\n          data: null,\n          joined: false,\n          ringPlayed: false\n        },\n        typing: null\n      };\n    case \"SET_OPERATORS\":\n      return {\n        ...state,\n        operators: action.payload as Contact[]\n      };\n  }\n\n  return state;\n}\n\nexport type ChatDispatch = React.Dispatch<Action>;\nconst emptyDispatch: ChatDispatch = () => null;\n\ntype ChatProviderProps = {\n  defLang: string | undefined;\n  tokenKey: string;\n  children: JSX.Element | JSX.Element[];\n};\n\nexport const ChatContext = React.createContext({\n  state: emptyChatState,\n  dispatch: emptyDispatch\n});\n\nexport const ChatProvider: React.FC<ChatProviderProps> = (\n  props: ChatProviderProps\n) => {\n  emptyUser.langCode = props.defLang;\n  const token = localStorage.getItem(props.tokenKey) as string;\n  const chatState: ChatState = {\n    ...emptyChatState,\n    tokenKey: props.tokenKey,\n    token\n  };\n\n  const [state, dispatch] = React.useReducer(chatReducer, chatState);\n\n  return (\n    <ChatContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </ChatContext.Provider>\n  );\n};\n","import React, { createContext, useCallback, useContext } from \"react\";\nimport { ChatContext } from \"./ChatContext\";\nimport axios, { AxiosError, AxiosInstance } from \"axios\";\nimport { Contact, Group, PagingResponse, PrivateMessage } from \"../types\";\n\nexport interface IRestContext {\n  apiUrl: string;\n  pageSize: number;\n  fetch: AxiosInstance | null;\n  getPrivateMessages: (chat: Contact) => Promise<void>;\n  getGroupMessages: (chat: Group) => Promise<void>;\n  getUserByMmk: (\n    mmkId: string | null,\n    guid: string | null\n  ) => Promise<number | undefined>;\n}\nconst initialContext = {} as IRestContext;\n\nexport const RestContext: React.Context<IRestContext> = createContext(\n  initialContext\n);\n\ntype RestProviderProps = {\n  baseURLApi: string;\n  pageSize: number;\n  children: JSX.Element;\n};\n\nexport const RestProvider: React.FC<RestProviderProps> = ({\n  baseURLApi,\n  pageSize,\n  children\n}: RestProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n\n  const fetch: AxiosInstance = axios.create({\n    timeout: 60000, // Таймаут минута\n    baseURL: baseURLApi,\n    headers: {\n      \"Cache-Control\": \"no-cache\",\n      Pragma: \"no-cache\",\n      Authorization: `Bearer ${state.token}`\n    },\n    withCredentials: false\n  });\n\n  const getPrivateMessages = useCallback(\n    async (chat: Contact) => {\n      const contactId = chat.userId;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: \"SET_LOADING\", payload: true });\n        const { data } = await fetch.get(\"/contact/messages\", {\n          params: {\n            contactId,\n            current,\n            pageSize\n          }\n        });\n        if (data) {\n          dispatch({\n            type: \"ADD_PRIVATE_MESSAGES\",\n            payload: {\n              pageSize,\n              contactId,\n              messages: data as PrivateMessage[]\n            }\n          });\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: \"SET_ERROR\", payload: err.message });\n      } finally {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      }\n    },\n    [dispatch]\n  );\n\n  const getGroupMessages = useCallback(\n    async (chat: Group) => {\n      const { groupId } = chat;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: \"SET_LOADING\", payload: true });\n        const { data }: { data: PagingResponse } = await fetch.get(\n          \"/group/messages\",\n          {\n            params: {\n              groupId,\n              current,\n              pageSize\n            }\n          }\n        );\n        if (data) {\n          dispatch({\n            type: \"ADD_GROUP_MESSAGES\",\n            payload: {\n              pageSize,\n              groupId,\n              ...data\n            }\n          });\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: \"SET_ERROR\", payload: err.message });\n      } finally {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      }\n    },\n    [dispatch]\n  );\n\n  const getUserByMmk = async (mmkId: string | null, guid: string | null) => {\n    try {\n      const { data }: { data: number } = await fetch.get(\"/contact/find\", {\n        params: {\n          mmkId,\n          guid\n        }\n      });\n      if (data != null) {\n        return data;\n      }\n    } catch (error) {\n      console.log(\"err getUserByMmk\", error);\n    }\n  };\n  return (\n    <RestContext.Provider\n      value={{\n        apiUrl: baseURLApi,\n        pageSize,\n        fetch,\n        getPrivateMessages,\n        getGroupMessages,\n        getUserByMmk\n      }}\n    >\n      {children}\n    </RestContext.Provider>\n  );\n};\n","import React, { createContext, useContext, useEffect } from \"react\";\nimport { Socket } from \"socket.io-client\";\nimport { useSocket } from \"../hooks/useSocket\";\nimport {\n  ChatData,\n  Contact,\n  Group,\n  GroupMessage,\n  JoinGroup,\n  MessageOperation,\n  PrivateMessage,\n  SetTyping,\n  User,\n  ConferenceData,\n  SetActiveRoom,\n  GroupMap,\n} from \"../types\";\nimport { ChatContext } from \"./ChatContext\";\n\n// Формат ответа сервера\ninterface ServerRes {\n  code: number;\n  msg: string;\n  data: unknown;\n}\n\nexport interface ISocketContext {\n  socket: Socket | null;\n  online: boolean;\n}\nconst initialContext = {\n  online: false,\n} as ISocketContext;\n\nexport const SocketContext: React.Context<ISocketContext> =\n  createContext(initialContext);\n\ntype SocketProviderProps = {\n  wsUrl: string;\n  wsPath: string;\n  children: JSX.Element;\n};\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({\n  wsUrl,\n  wsPath,\n  children,\n}: SocketProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n  const { socket, online, disconnectSocket, connectSocket } = useSocket(\n    wsUrl,\n    wsPath,\n    state.token\n  );\n\n  useEffect(() => {\n    if (state.token) {\n      connectSocket();\n    }\n    return () => {\n      disconnectSocket();\n    };\n  }, [state.token, connectSocket]);\n\n  useEffect(() => {\n    if (!state.token) disconnectSocket();\n  }, [state.token, disconnectSocket]);\n\n  // listen unauthorized event\n  useEffect(() => {\n    const listener = (msg: string) => {\n      console.log(\"unauthorized msg\", msg);\n      dispatch({ type: \"CLEAR_USER\" });\n    };\n\n    // attach\n    socket?.on(\"unauthorized\", listener);\n    // detatch\n    return () => {\n      socket?.off(\"unauthorized\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen chatData event\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const payload = res.data as ChatData;\n      const groupArr = payload.groupData;\n      const contactArr = payload.contactData;\n      const userArr = payload.userData;\n      dispatch({ type: \"CLEAR_CHAT_DATA\" });\n      dispatch({ type: \"SET_USER\", payload: payload.user });\n      if (groupArr.length) {\n        for (const group of groupArr) {\n          socket?.emit(\"joinGroupSocket\", {\n            groupId: group.groupId,\n          });\n          dispatch({ type: \"SET_GROUP_GATHER\", payload: group });\n        }\n      }\n      if (contactArr.length) {\n        for (const contact of contactArr) {\n          socket?.emit(\"joinPrivateSocket\", {\n            contactId: contact.userId,\n          });\n          dispatch({ type: \"SET_CONTACT_GATHER\", payload: contact });\n        }\n      }\n      dispatch({ type: \"SET_OPERATORS\", payload: payload.operatorData });\n      if (userArr.length) {\n        for (const user_ of userArr) {\n          dispatch({ type: \"SET_USER_GATHER\", payload: user_ });\n        }\n      }\n      dispatch({ type: \"UPDATE_ACTIVE_ROOM\" });\n      dispatch({type: \"SET_CONFERENCE\", payload: payload.conferenceData})\n    };\n    socket?.on(\"chatData\", listener);\n    return () => {\n      socket?.off(\"chatData\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen user online\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: \"USER_ONLINE\", payload: res.data as number });\n    };\n    socket?.on(\"userOnline\", listener);\n    return () => {\n      socket?.off(\"userOnline\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen user offline\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: \"USER_OFFLINE\", payload: res.data as number });\n    };\n    socket?.on(\"userOffline\", listener);\n    return () => {\n      socket?.off(\"userOffline\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen private socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      console.log(\"Успешно вошел в приватный чат\");\n    };\n    socket?.on(\"joinPrivateSocket\", listener);\n    return () => {\n      socket?.off(\"joinPrivateSocket\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen group socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as JoinGroup;\n      const newUser: Contact = data.user;\n      newUser.online = 1;\n      const { group } = data;\n      const groupObj = state.groupGather[group.groupId];\n      // Информация о присоединении к группе новых пользователей\n      if (\n        groupObj &&\n        !groupObj.members?.find((member) => member.userId === newUser.userId)\n      ) {\n        newUser.isManager = 0;\n        groupObj.members?.push(newUser);\n        // Vue.prototype.$message.info(res.msg);\n      }\n      dispatch({ type: \"SET_USER_GATHER\", payload: newUser });\n    };\n    socket?.on(\"joinGroupSocket\", listener);\n    return () => {\n      socket?.off(\"joinGroupSocket\", listener);\n    };\n  }, [socket?.id, state.groupGather]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMessage;\n      dispatch({ type: \"ADD_GROUP_MESSAGE\", payload: data });\n      const { activeRoom } = state;\n      if (\n        activeRoom &&\n        (activeRoom as Group).groupId === data.groupId &&\n        data.userId !== state.user.userId\n      ) {\n        socket?.emit(\"markAsRead\", {\n          groupId: data.groupId,\n          _id: data._id,\n        });\n      }\n    };\n\n    socket?.on(\"groupMessage\", listener);\n    return () => {\n      socket?.off(\"groupMessage\", listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as PrivateMessage;\n      if (\n        data.contactId === state.user.userId ||\n        data.userId === state.user.userId\n      ) {\n        dispatch({\n          type: \"ADD_PRIVATE_MESSAGE\",\n          payload: data,\n        });\n\n        // если есть активная комната и это приватная комната (!groupId && userId) с отправителем сообщения (userId)\n        if (\n          state.activeRoom &&\n          !(state.activeRoom as Group).groupId &&\n          state.activeRoom?.userId === data.userId\n        ) {\n          socket?.emit(\"markAsRead\", {\n            contactId: data.userId,\n            _id: data._id,\n          });\n        }\n      }\n    };\n\n    socket?.on(\"privateMessage\", listener);\n    return () => {\n      socket?.off(\"privateMessage\", listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      if (timer) clearTimeout(timer);\n      dispatch({ type: \"SET_TYPING\", payload: res.data as SetTyping });\n      timer = setTimeout(() => {\n        dispatch({ type: \"SET_TYPING\", payload: null });\n      }, 1000);\n    };\n    socket?.on(\"typing\", listener);\n    return () => {\n      if (timer) clearTimeout(timer);\n      socket?.off(\"typing\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      if (data.userId === state.user.userId) {\n        if (data.groupId) {\n          dispatch({\n            type: \"LOSE_GROUP_UNREAD_GATHER\",\n            payload: data.groupId,\n          });\n        } else {\n          dispatch({\n            type: \"LOSE_CONTACT_UNREAD_GATHER\",\n            payload: data.contactId,\n          });\n        }\n      } else {\n        if (data.contactId)\n          dispatch({\n            type: \"MARK_PRIVATE_MESSAGES_READ\",\n            payload: data.userId,\n          });\n      }\n    };\n    socket?.on(\"markAsRead\", listener);\n    return () => {\n      socket?.off(\"markAsRead\", listener);\n    };\n  }, [socket?.id, state.user.userId]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      dispatch({ type: \"REVOKE_MESSAGE\", payload: data });\n    };\n    socket?.on(\"revokeMessage\", listener);\n    return () => {\n      socket?.off(\"revokeMessage\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({ type: \"SET_GROUP_GATHER\", payload: res.data as Group });\n    };\n    socket?.on(\"addGroup\", listener);\n    return () => {\n      socket?.off(\"addGroup\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: \"SET_CONTACT_GATHER\", payload: data });\n      dispatch({ type: \"SET_USER_GATHER\", payload: data });\n      socket?.emit(\"joinPrivateSocket\", {\n        contactId: data.userId,\n      });\n    };\n    socket?.on(\"addContact\", listener);\n    return () => {\n      socket?.off(\"addContact\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMap;\n      if (data.userId === state.user.userId) {\n        // если удаляем себя из группы\n        dispatch({ type: \"DEL_GROUP\", payload: data.groupId });\n      } else {\n        dispatch({ type: \"DEL_GROUP_MEMBER\", payload: data });\n      }\n    };\n    socket?.on(\"deleteGroup\", listener);\n    return () => {\n      socket?.off(\"deleteGroup\", listener);\n    };\n  }, [socket?.id, state.user]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: \"DEL_CONTACT\", payload: data });\n    };\n    socket?.on(\"deleteContact\", listener);\n    return () => {\n      socket?.off(\"deleteContact\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Group;\n      dispatch({ type: \"UPDATE_GROUP_INFO\", payload: data });\n    };\n    socket?.on(\"updateGroupInfo\", listener);\n    return () => {\n      socket?.off(\"updateGroupInfo\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as User;\n      dispatch({ type: \"UPDATE_USER_INFO\", payload: data });\n    };\n    socket?.on(\"updateUserInfo\", listener);\n    return () => {\n      socket?.off(\"updateUserInfo\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const { group, user: newUser } = res.data as JoinGroup;\n\n      if (!state.groupGather[group.groupId]) {\n        console.log(\"joined to a new group\");\n        // Если группы еще у нас нет, то получаем информацию о пользователях в группе\n        socket?.emit(\"chatData\");\n      } else if (newUser.userId !== state.user.userId) {\n        // Новые пользователи присоединяются к группе\n        dispatch({\n          type: \"ADD_GROUP_MEMBER\",\n          payload: {\n            groupId: group.groupId,\n            members: [newUser],\n          },\n        });\n      }\n    };\n    socket?.on(\"joinGroup\", listener);\n    return () => {\n      socket?.off(\"joinGroup\", listener);\n    };\n  }, [socket?.id, state.user, state.groupGather]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({ type: \"SET_CONFERENCE\", payload: res.data as ConferenceData });\n    };\n    socket?.on(\"startConference\", listener);\n    return () => {\n      socket?.off(\"startConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"PAUSE_CONFERENCE\",\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on(\"pauseConference\", listener);\n    return () => {\n      socket?.off(\"pauseConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"STOP_CONFERENCE\",\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on(\"stopConference\", listener);\n    return () => {\n      socket?.off(\"stopConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n    };\n    socket?.on(\"addOperator\", listener);\n    return () => {\n      socket?.off(\"addOperator\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"SET_ACTIVE_ROOM\",\n        payload: res.data as SetActiveRoom,\n      });\n    };\n    socket?.on(\"setActiveRoom\", listener);\n    return () => {\n      socket?.off(\"setActiveRoom\", listener);\n    };\n  }, [socket?.id]);\n\n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n","import React from 'react';\nimport { IconButton, Tooltip } from '@mui/material';\nimport SettingsSuggestIcon from '@mui/icons-material/SettingsSuggest';\nimport SettingsVoiceIcon from '@mui/icons-material/SettingsVoice';\nimport VideoSettingsIcon from '@mui/icons-material/VideoSettings';\nimport { ChatContext } from '../context/ChatContext';\nimport { useTranslation } from 'react-i18next';\ntype CheckAudiVideoPermProps = {\n  audio: boolean;\n  video: boolean;\n};\n\nconst CheckAudiVideoPerm: React.FC<CheckAudiVideoPermProps> = ({\n  audio,\n  video,\n}: CheckAudiVideoPermProps) => {\n  const { t } = useTranslation();\n  //const [havePermissions, setHavePermissions] = useState(false);\n  const { dispatch } = React.useContext(ChatContext);\n  const checkPermissions = () => {\n    const permissions = navigator.mediaDevices.getUserMedia({\n      audio,\n      video,\n    });\n    permissions\n      .then(data => {\n        console.log('permissions', data);\n        dispatch({\n          type: 'SET_SUCCES',\n          payload: t('CHAT.CONFERENCE.ALLOK'),\n        });\n      })\n      .catch(err => {\n        let payload = t('CHAT.CONFERENCE.ErrorAny');\n        if (err.name === 'NotFoundError') {\n          payload = t('CHAT.CONFERENCE.NotFoundError');\n        }\n        if (err.name === 'NotAllowedError') {\n          payload = t('CHAT.CONFERENCE.NotAllowedError');\n        }\n\n        dispatch({\n          type: 'SET_ERROR',\n          payload,\n        });\n        //setHavePermissions(false);\n        console.log('err', `${err.name} : ${err.message}`);\n      });\n  };\n\n  const title =\n    audio && video\n      ? t('CHAT.CONFERENCE.CheckCamMic')\n      : audio\n      ? t('CHAT.CONFERENCE.CheckMic')\n      : t('CHAT.CONFERENCE.CheckCam');\n  return (\n    <Tooltip title={title}>\n      <IconButton\n        aria-label=\"check\"\n        onClick={() => checkPermissions()}\n        size=\"large\"\n      >\n        {audio && video ? (\n          <SettingsSuggestIcon />\n        ) : audio ? (\n          <SettingsVoiceIcon />\n        ) : (\n          <VideoSettingsIcon />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default CheckAudiVideoPerm;\n","import React from \"react\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { Alert, Snackbar } from \"@mui/material\";\n\nconst ChatAlert: React.FC = () => {\n  // const { t } = useTranslation();\n  //const [havePermissions, setHavePermissions] = useState(false);\n  const {\n    state: { error, success },\n    dispatch\n  } = React.useContext(ChatContext);\n\n  const handleClose = () => {\n    dispatch({ type: \"SET_ERROR\", payload: undefined });\n    dispatch({ type: \"SET_SUCCES\", payload: undefined });\n  };\n  console.log(\"success\", success);\n  console.log(error ? \"error\" : \"success\");\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={!!error || !!success}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <Alert onClose={handleClose} severity={error ? \"error\" : \"success\"}>\n        {error ? error : success}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default ChatAlert;\n","import * as React from \"react\";\nimport {\n  Container,\n  Box,\n  Grid,\n  useMediaQuery,\n  Paper,\n  IconButton,\n  Tooltip\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Room, RoomList, Conference } from \"../components\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { RestContext } from \"../context/RestContext\";\nimport { SocketContext } from \"../context/SocketContext\";\nimport {\n  ChatPa,\n  Group,\n  Contact,\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  ConferenceData\n} from \"../types\";\nimport { getParam, isEmpty, allMessCount } from \"../utils/common\";\nimport ConferenceCall from \"../components/ConferenceCall\";\nimport { ArrowForward } from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nimport CheckAudiVideoPerm from \"../components/CheckAudiVideoPerm\";\nimport ChatAlert from \"../components/Alert\";\n\n// Отключили проигрыш звука\n// const getRingAudio = (): HTMLAudioElement => {\n//   const audio = new Audio(\n//     process.env.PUBLIC_URL + '/audio/ring-in.ogg',\n//   );\n//   audio.loop = true;\n//   return audio;\n// };\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    minWidth: 640,\n    minHeight: 470,\n    height: \"100%\",\n    //width: `calc(100vw - ${theme.spacing(8)})`,\n    padding: 0,\n    [theme.breakpoints.down(\"sm\")]: {\n      height: `calc(100vh - ${theme.spacing(8)})`,\n      width: \"auto\",\n      minWidth: \"auto\",\n      minHeight: \"auto\",\n      overflow: \"hidden\"\n    }\n  },\n  innerBox: {\n    height: \"100%\",\n    width: \"100%\",\n    margin: 0,\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: 0\n    }\n  },\n  innerGrid: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  conAbsOnConf: {\n    position: \"absolute\",\n    top: 42,\n    left: 25,\n    zIndex: 1000,\n\n    margin: theme.spacing(3)\n  }\n}));\n\nexport const ChatPage: React.FC<ChatPa> = ({\n  activeGroupId,\n  activeChatUserId\n}: ChatPa) => {\n  const classes = useStyles();\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down(\"sm\")\n  );\n  const { t } = useTranslation();\n  const { state, dispatch } = React.useContext(ChatContext);\n  const { socket } = React.useContext(SocketContext);\n\n  const {\n    apiUrl,\n    pageSize,\n    getPrivateMessages,\n    getGroupMessages,\n    getUserByMmk\n  } = React.useContext(RestContext);\n\n  // const [ringAudio] = React.useState(getRingAudio());\n\n  const onExitActiveRoom = React.useCallback(() => {\n    dispatch({\n      type: \"SET_ACTIVE_ROOM\",\n      payload: {}\n    });\n  }, [dispatch]);\n\n  const onNeedMoreMessages = React.useCallback(\n    async (chat: ChatRoom) => {\n      if ((chat as Group).groupId) await getGroupMessages(chat as Group);\n      else await getPrivateMessages(chat as Contact);\n    },\n    [getPrivateMessages, getGroupMessages]\n  );\n\n  const onMessageDelete = React.useCallback(\n    (chat: ChatRoom, message: ChatMessage) => {\n      socket?.emit(\"revokeMessage\", {\n        groupId: (chat as Group).groupId, // Идентификатор группы\n        contactId: chat.userId, // Идентификатор контакта\n        _id: message._id // Идентификатор удаленного сообщения\n      });\n    },\n    [socket?.id]\n  );\n\n  const onTyping = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit(\"typing\", {\n        groupId: (chat as Group)?.groupId,\n        contactId: chat?.userId\n      });\n    },\n    [socket?.id]\n  );\n\n  const onSendMessage = React.useCallback(\n    (chat: ChatRoom, data: SendMessage) => {\n      if ((chat as Group).groupId) {\n        socket?.emit(\"groupMessage\", {\n          groupId: (chat as Group)?.groupId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size\n        });\n      } else {\n        socket?.emit(\"privateMessage\", {\n          contactId: chat?.userId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size\n        });\n      }\n    },\n    [socket?.id]\n  );\n\n  const onChangeChat = React.useCallback(\n    (chat: ChatRoom) => {\n      dispatch({\n        type: \"SET_ACTIVE_ROOM\",\n        payload: {\n          groupId: (chat as Group)?.groupId,\n          contactId: chat?.userId\n        }\n      });\n    },\n    [socket?.id, dispatch]\n  );\n\n  const onEnterRoom = React.useCallback(\n    (chat: ChatRoom) => {\n      if (!chat.messages || chat.messages.length === 0) return;\n      if ((chat as Group).groupId) {\n        socket?.emit(\"markAsRead\", {\n          groupId: (chat as Group).groupId,\n          _id: chat.messages[chat.messages.length - 1]._id\n        });\n      } else {\n        socket?.emit(\"markAsRead\", {\n          contactId: chat.userId,\n          _id: chat.messages[chat.messages.length - 1]._id\n        });\n      }\n    },\n    [socket?.id]\n  );\n\n  const onVideoCall = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit(\"startConference\", {\n        groupId: (chat as Group).groupId,\n        contactId: chat.userId\n      });\n    },\n    [socket?.id]\n  );\n\n  const onVideoEnd = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit(\"stopConference\", {\n          id: conference?.id\n        });\n    },\n    [socket?.id]\n  );\n\n  const onConferencePause = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit(\"pauseConference\", {\n          id: conference.id\n        });\n    },\n    [socket?.id]\n  );\n\n  const onConferenceCallAccept = React.useCallback(\n    (conference: ConferenceData) => {\n      // отправляем resumeConference чтобы возобновить запись\n      if (conference?.id != null)\n        socket?.emit(\"resumeConference\", {\n          id: conference.id\n        });\n      dispatch({ type: \"JOIN_CONFERENCE\", payload: conference });\n    },\n    [socket?.id, dispatch]\n  );\n\n  const onOperatorAdd = React.useCallback(\n    (group: Group, operator: Contact) => {\n      socket?.emit(\"addOperator\", {\n        groupId: group.groupId,\n        operatorId: operator.userId\n      });\n    },\n    [socket?.id]\n  );\n\n  const onLeaveGroup = React.useCallback(\n    (group: Group) => {\n      socket?.emit(\"deleteGroup\", {\n        groupId: group.groupId\n      });\n    },\n    [socket?.id]\n  );\n\n  React.useEffect(() => {\n    if (activeChatUserId != null && !isEmpty(state.contactGather)) {\n      const Chat = Object.values(state.contactGather).find(\n        item => item.userId === activeChatUserId\n      );\n      onChangeChat(Chat);\n      onEnterRoom(Chat);\n    }\n\n    const mmkId = getParam(\"mmk\");\n    const guid = getParam(\"guid\");\n    if ((mmkId != null || guid != null) && !isEmpty(state.contactGather)) {\n      //console.log(\"mmkId\", mmkId);\n      const changeChatByMmkId = async () => {\n        const userId = await getUserByMmk(mmkId, guid);\n        console.log(\"userId\", userId);\n        if (userId != null) {\n          const Chat = Object.values(state.contactGather).find(\n            item => item.userId === userId\n          );\n          onChangeChat(Chat);\n          onEnterRoom(Chat);\n        }\n      };\n      changeChatByMmkId();\n    }\n  }, [state.contactGather]);\n\n  React.useEffect(() => {\n    if (activeGroupId != null && !isEmpty(state.groupGather)) {\n      const onlyChat = Object.values(state.groupGather).find(\n        item => item.groupId === activeGroupId\n      );\n\n      if (!isEmpty(onlyChat)) {\n        onChangeChat(onlyChat);\n        onEnterRoom(onlyChat);\n      }\n    }\n  }, [state.groupGather]);\n\n  // Отключили проигрыш звука\n  // React.useEffect(() => {\n  //   if (\n  //     state.conference.data?.id &&\n  //     state.conference.ringPlayed &&\n  //     !state.conference.joined\n  //   )\n  //     ringAudio.play();\n  //   else ringAudio.pause();\n  // }, [state.conference.data?.id, state.conference.ringPlayed]);\n\n  const renderRoom = state.activeRoom != null && (\n    <Room\n      apiUrl={apiUrl}\n      user={state.user}\n      users={state.userGather}\n      operators={state.operators}\n      chat={state.activeRoom}\n      typing={state.typing}\n      conference={state.conference.data}\n      conferenceJoined={state.conference.joined}\n      loading={state.loading}\n      pageSize={pageSize}\n      onExitRoom={onExitActiveRoom}\n      onEnterRoom={onEnterRoom}\n      onNeedMoreMessages={onNeedMoreMessages}\n      onMeesageDelete={onMessageDelete}\n      onTyping={onTyping}\n      onSendMessage={onSendMessage}\n      onVideoCall={onVideoCall}\n      onVideoEnd={onVideoEnd}\n      onConferencePause={onConferencePause}\n      onOperatorAdd={onOperatorAdd}\n      onLeaveGroup={onLeaveGroup}\n    />\n  );\n\n  const GetRoomList = () => (\n    <RoomList\n      apiUrl={apiUrl}\n      user={state.user}\n      activeRoom={state.activeRoom}\n      groups={Object.values(state.groupGather)}\n      contacts={Object.values(state.contactGather)}\n      typing={state.typing}\n      onChangeChat={onChangeChat}\n    />\n  );\n\n  const GetConferenceCall = () =>\n    state.conference.data && (\n      <ConferenceCall\n        apiUrl={apiUrl}\n        contact={\n          state.contactGather[\n            state.user.userId === state.conference.data.userId\n              ? state.conference.data.contactId\n              : state.conference.data.userId\n          ]\n        }\n        conference={state.conference.data}\n        onAccept={onConferenceCallAccept}\n      />\n    );\n\n  const GetConference = () => (\n    <Conference\n      conference={state.conference.data}\n      onClose={onConferencePause}\n    />\n  );\n\n  // const getMessCount = (data: GroupGather) => {\n  //   const messages = ;\n  //   return messages.reduce((a: number, b: number) => a + b, 0);\n  // };\n\n  const depsContats = state.conference.data?.id\n    ? [\n        state.conference.joined,\n        state.conference.data?.id,\n        state.conference.data?.contactId,\n        state.activeRoom?.groupId,\n        state.activeRoom?.userId\n      ]\n    : [\n        state.activeRoom,\n        allMessCount(state.groupGather),\n        allMessCount(state.contactGather)\n      ];\n\n  const Contacts = React.useMemo(\n    () =>\n      state.conference.data?.id != null ? (\n        <>\n          {state.conference.joined ? <GetConference /> : <GetConferenceCall />}\n          <Box className={classes.conAbsOnConf}>\n            <Paper style={{ borderRadius: 8 }}>\n              <Box display=\"flex\" flexDirection=\"row\" my={3}>\n                {((isEmpty(state.activeRoom) && isMobile) ||\n                  (!isEmpty(state.activeRoom) && !isMobile)) && (\n                  <>\n                    <CheckAudiVideoPerm audio={true} video={false} />\n                    <CheckAudiVideoPerm audio={false} video={true} />\n                  </>\n                )}\n\n                {isEmpty(state.activeRoom) &&\n                  state.chatOld != null &&\n                  isMobile && (\n                    <Tooltip title={t(\"CHAT.CONFERENCE.BACK\")}>\n                      <IconButton\n                        aria-label=\"check\"\n                        onClick={() =>\n                          state.chatOld != null && onChangeChat(state.chatOld)\n                        }\n                        size=\"large\"\n                      >\n                        <ArrowForward />\n                      </IconButton>\n                    </Tooltip>\n                  )}\n              </Box>\n            </Paper>\n          </Box>\n        </>\n      ) : (\n        <GetRoomList />\n      ),\n\n    depsContats\n  );\n\n  console.log(\"chat state\", state);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.root}>\n      <Box className={classes.innerBox}>\n        {isMobile ? (\n          <>\n            {Contacts}\n            {renderRoom}\n          </>\n        ) : (\n          <Grid container spacing={1} className={classes.innerGrid}>\n            <Grid\n              item\n              sm={state.conference.data?.id != null ? 6 : 4}\n              className={classes.innerGrid}\n            >\n              {Contacts}\n            </Grid>\n\n            <Grid\n              item\n              sm={state.conference.data?.id != null ? 6 : 8}\n              className={classes.innerGrid}\n            >\n              {renderRoom}\n            </Grid>\n          </Grid>\n        )}\n      </Box>\n      <ChatAlert />\n    </Container>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport io, { Socket } from \"socket.io-client\";\n\nexport const useSocket = (\n  url: string,\n  path: string,\n  accessToken: string\n): {\n  socket: Socket | null;\n  online: boolean;\n  connectSocket: () => void;\n  disconnectSocket: () => void;\n} => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n\n  const connectSocket = useCallback(() => {\n    // console.log(\"do connect\");\n    const socketTemp = io(url, {\n      path,\n      reconnection: true,\n      extraHeaders: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    setSocket(socketTemp);\n  }, [url, path, accessToken]);\n\n  const disconnectSocket = useCallback(() => {\n    // console.log(\"do disconnect\");\n    socket?.disconnect();\n    setSocket(null);\n  }, [socket]);\n\n  const [online, setOnline] = useState<boolean>(false);\n\n  useEffect(() => {\n    setOnline(socket?.connected ? true : false);\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"connect\", () => {\n      // console.log(\"connected\");\n      setOnline(true);\n      socket.emit(\"chatData\");\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"disconnect\", () => {\n      // console.log(\"disconnected\");\n      setOnline(false);\n    });\n  }, [socket]);\n\n  return {\n    socket,\n    online,\n    disconnectSocket,\n    connectSocket,\n  };\n};\n","import en from \"./en.json\";\nimport fr from \"./fr.json\";\nimport ru from \"./ru.json\";\n\nexport const chatResources = {\n  ru,\n  en,\n  fr,\n};\n"],"names":["MessageStatus","Role","ContextMenuType","useStyles","makeStyles","createStyles","item","cursor","Emoji","props","classes","emojiClick","e","onSelect","target","innerText","Item","itemProps","React.createElement","Box","m","component","onClick","className","emoji","display","flexDirection","theme","typingText","paddingLeft","spacing","typingDot","verticalAlign","width","height","margin","background","palette","primary","main","borderRadius","opacity","animation","&:nth-child(1)","animationDelay","&:nth-child(2)","&:nth-child(3)","@keyframes loadingFade","0%","50%","100%","Typing","React","Typography","color","variant","message","input","flex","inputUpload","attachmentIcon","fill","stroke","Entry","chat","t","useTranslation","useState","empjiEl","setEmojiEl","text","setText","time","lastTyping","setLastTyping","handleEmojiClose","sendMessage","data","onSendMessage","submit","trim","length","messageType","emojiOpen","Boolean","enojiId","undefined","TextField","placeholder","autoFocus","InputProps","disableUnderline","startAdornment","InputAdornment","position","accept","id","type","onChange","event","currentTarget","files","file","includes","image","Image","url","window","URL","webkitURL","src","createObjectURL","onload","imageSize","fileName","name","size","htmlFor","IconButton","aria-label","SvgIcon","d","strokeWidth","strokeLinecap","strokeLinejoin","aria-describedby","InsertEmoticon","endAdornment","edge","preventDefault","Send","value","onTyping","Date","now","onKeyPress","key","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","isEmpty","Object","keys","formatTime","moment","add","startOf","isAfter","format","getChatId","groupId","userId","getChatName","username","allMessCount","chats","values","map","it","messages","reduce","a","b","chatRoomComparer","hasMessagesA","Array","isArray","hasMessagesB","cdate","getTime","getParam","param","QueryString","location","search","URLSearchParams","get","fileIcon","fontSize","fileBody","File","meta","content","split","date","getFileMeta","idx","lastIndexOf","ext","slice","splitFileName","Avatar","toUpperCase","mediaContent","maxWidth","maxHeight","breakpoints","down","Video","apiUrl","isConference","JSON","parse","visitId","controls","muted","viewerVisible","setViewerVisible","getImageMeta","Fragment","Viewer","zIndex","visible","changeable","images","MessageContent","rootContact","padding","& span","float","secondary","& $message","backgroundColor","grey","borderTopRightRadius","borderBottomRightRadius","& $firstMessage","borderTopLeftRadius","marginTop","& $lastMessage","borderBottomLeftRadius","marginBottom","rootUser","paddingRight","justifyContent","contrastText","rootNotify","& > *","fontWeight","firstMessage","lastMessage","flexWrap","header","overflow","body","wordBreak","status","alignSelf","statusImage","marginRight","Message","owner","refOnLastMess","user","isGroupMessage","isUserFirst","isUserLast","ListItem","Alert","severity","ref","isRevoke","align","revokeUserName","isMine","onContextMenu","child","Link","underline","href","download","wrapMessage","React.Fragment","Done","DoneAll","ContactStatus","isTyping","contact","online","star","ContactList","List","contacts","button","ListItemAvatar","alt","avatar","ListItemText","StarIcon","AddContact","Dialog","aria-labelledby","DialogTitle","Transition","forwardRef","Slide","direction","AlertDialog","children","setOpen","_ref$severity","handleClose","TransitionComponent","keepMounted","DialogContent","DialogActions","Button","ConferenceTime","currentDate","finishDate","modaleInfo","setModaleInfo","currTime","finTime","counter","max","setCounter","counterRef","useRef","useEffect","current","setInterval","clearInterval","handlerRefresh","useCounter","Math","round","totalSeconds","hours","floor","strHours","minutes","seconds","strTime","hhMmSs","textAlign","popover","pointerEvents","paper","avatarGroup","getGroupStatus","group","members","_group$members","onlineCount","sum","push","join","RoomHeader","typing","conference","conferenceJoined","operators","onVideoCall","onVideoEnd","onConferencePause","onOperatorAdd","onLeaveGroup","setAnchorEl","addOperatorOpen","setAddOperatorOpen","CardHeader","title","subheader","handlePopoverClose","console","log","GroupIcon","aria-owns","aria-haspopup","onMouseEnter","onMouseLeave","disableRestoreFocus","action","role","PersonAddIcon","operator","_group$members2","find","DeleteIcon","contactId","startIcon","CallEndIcon","style","marginLeft","VideoCallIcon","root","minWidth","inline","messageListOuter","overflowY","scrollbarWidth","scrollbarColor","&::-webkit-scrollbar, & *::-webkit-scrollbar","&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb","border","&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus","&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active","&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover","&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner","messageList","roomHeader","roomProgress","flexAll","flexEnd","initialMenuState","mouseX","mouseY","canCopy","canDelete","initialScrollState","autoScroll","Room","users","loading","pageSize","isMobile","useMediaQuery","scrollState","setScrollState","messageCount","refList","menuState","setMenuState","onEnterRoom","useLayoutEffect","scrollIntoView","scrollTop","scrollHeight","onScroll","useCallback","noMoreData","_context","onNeedMoreMessages","handleCopy","navigator","clipboard","writeText","handleDelete","onMeesageDelete","Card","elevation","Tooltip","onExitRoom","ArrowBackIcon","CircularProgress","Divider","CardContent","inx","clientX","clientY","handleMenuPopup","Menu","anchorReference","anchorPosition","top","left","MenuItem","disabled","ListItemIcon","FileCopyIcon","whiteSpace","textOverflow","unread","TypingBadge","withStyles","badge","boxShadow","&::after","@keyframes ripple","transform","Badge","OnlineBadge","RoomListItem","roomName","overlap","contactAvatar","roomText","getMessageText","roomTime","selected","active","secondaryTypographyProps","unreadCount","Chip","label","searchField","listStyle","filterChats","filter","lowerFilter","toLowerCase","indexOf","sortChats","groups","roomArr","sort","topChatId","localStorage","getItem","c","k","isTop","unshift","RoomList","setChats","fullWidth","activeRoom","onChangeChat","Conference","listener","source","_ref$current","contentWindow","addEventListener","removeEventListener","allowFullScreen","allow","alignItems","pulse","&::before","footer","paddingTop","@keyframes pulse","ConferenceCall","onAccept","Paper","emptyUser","password","langCode","emptyChatState","tokenKey","token","chatOld","groupGather","userGather","contactGather","initialContactId","joined","ringPlayed","error","success","getFreshActiveRoom","state","getActiveRoom","newActiveRoom","rooms","setUserOnline","newState","member","index","findIndex","contactUnreadGather","predicate","groupUnreadGather","chatReducer","payload","updateActiveRoom","delGroup","delGroupMember","delContact","setActiveRoom","x","addGroupMessage","_newState$activeRoom","addPrivateMessage","userName","msg","_id","revokeMessage","info","notice","updateGroupInfo","updateUserInfo","isManager","addGroupMember","setConference","_state$conference$dat","pauseConference","_state$conference$dat2","stopConference","updatedValue","i","markPrivateMessagesRead","addPrivateMessages","userArr","addGroupMessages","setItem","setToken","removeItem","clearUser","ChatContext","createContext","dispatch","RestContext","SocketContext","CheckAudiVideoPerm","audio","video","useContext","mediaDevices","getUserMedia","then","catch","err","SettingsSuggestIcon","SettingsVoiceIcon","VideoSettingsIcon","ChatAlert","_React$useContext$sta","Snackbar","autoHideDuration","minHeight","innerBox","innerGrid","conAbsOnConf","activeGroupId","activeChatUserId","socket","getPrivateMessages","getGroupMessages","getUserByMmk","onExitActiveRoom","onMessageDelete","emit","onConferenceCallAccept","operatorId","Chat","mmkId","guid","_context2","changeChatByMmkId","onlyChat","renderRoom","GetRoomList","GetConferenceCall","GetConference","depsContats","_state$conference$dat3","_state$activeRoom","_state$activeRoom2","Contacts","_state$conference$dat4","my","ArrowForward","Container","Grid","container","sm","_state$conference$dat5","_state$conference$dat6","defLang","chatState","useReducer","Provider","baseURLApi","fetch","axios","create","timeout","baseURL","headers","Cache-Control","Pragma","Authorization","withCredentials","_chat$messages","params","_chat$messages2","_context3","wsUrl","wsPath","path","accessToken","setSocket","connectSocket","socketTemp","io","reconnection","extraHeaders","disconnectSocket","disconnect","setOnline","connected","on","useSocket","off","res","code","groupArr","groupData","contactArr","contactData","userData","operatorData","conferenceData","newUser","groupObj","_groupObj$members","_groupObj$members2","timer","clearTimeout","setTimeout","ru","en","fr"],"mappings":"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"}