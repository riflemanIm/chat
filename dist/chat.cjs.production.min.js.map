{"version":3,"file":"chat.cjs.production.min.js","sources":["../src/types/index.ts","../src/components/Emoji.tsx","../src/components/Typing.tsx","../src/components/Entry.tsx","../src/utils/common.ts","../src/components/MessageContent/File.tsx","../src/components/MessageContent/Video.tsx","../src/components/MessageContent/Image.tsx","../src/components/MessageContent/index.tsx","../src/components/Message.tsx","../src/components/ContactStatus.tsx","../src/components/ContactList.tsx","../src/components/AddContact.tsx","../src/components/RoomHeader.tsx","../src/components/Room.tsx","../src/components/RoomListItem.tsx","../src/components/RoomList.tsx","../src/components/Conference.tsx","../src/components/ConferenceCall.tsx","../src/context/ChatContext.tsx","../src/context/RestContext.tsx","../src/context/SocketContext.tsx","../src/pages/chat.tsx","../src/hooks/useSocket.ts","../src/translations/index.ts"],"sourcesContent":["export interface ChatPa {\n  inModale?: boolean;\n  onlyChatGroupId?: number;\n}\n\n// Тип сообщения\nexport type MessageType =\n  | \"text\"\n  | \"image\"\n  | \"file\"\n  | \"video\"\n  | \"notify\"\n  | \"video_conference\";\n\nexport enum MessageStatus {\n  sent = 0,\n  read = 1\n}\n\nexport enum Role {\n  Unknown = 0,\n  Client = 1,\n  Agent = 2,\n  Specialist = 3,\n  Operator = 4\n}\n\nexport interface User {\n  userId: number;\n  username: string;\n  password: string;\n  avatar: string;\n  role?: Role;\n  online?: 1 | 0; // В сети\n  langCode?: string;\n}\n\n// Приватные сообщения\nexport interface PrivateMessage {\n  _id?: number;\n  userId: number;\n  contactId: number;\n  content: string;\n  messageType: MessageType;\n  status: MessageStatus;\n  cdate: string;\n  type?: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Контакт\nexport interface Contact {\n  userId: number;\n  groupId?: number;\n  username: string;\n  avatar?: string;\n  role?: Role;\n  messages?: PrivateMessage[];\n  unreadCount?: number;\n  isTop?: boolean;\n  online?: 1 | 0;\n  isManager?: 1 | 0;\n  noMoreData?: boolean;\n}\n\n// Информация о друзьях\nexport interface ContactGather {\n  [userId: number]: Contact;\n}\n\n// Групповое сообщение\nexport interface GroupMessage {\n  _id?: number;\n  userId: number;\n  groupId: number;\n  content: string;\n  messageType: MessageType;\n  cdate: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Группа\nexport interface Group {\n  groupId: number;\n  userId: number; // владелец\n  name: string;\n  notice: string;\n  messages?: GroupMessage[];\n  unreadCount?: number;\n  cdate: string;\n  isTop?: boolean;\n  members?: Contact[];\n  noMoreData?: boolean;\n}\n\n// Группы\nexport interface GroupGather {\n  [groupId: number]: Group;\n}\n\n// Ассоциации групп и пользователей\nexport interface GroupMap {\n  groupId: number;\n  userId: number;\n}\n\n// Ассоциации пользователей и друзей\nexport interface ContactMap {\n  contactId: number;\n  userId: number;\n}\n\nexport interface SendMessage {\n  message: string | File;\n  width?: number;\n  height?: number;\n  fileName?: string;\n  messageType: MessageType[0] | MessageType[1];\n  size?: number;\n}\n\n// Размер изображения\nexport interface ImageSize {\n  width: number;\n  height: number;\n}\n\n// Непрочитанные сообщения\nexport interface UnReadGather {\n  [key: string]: number;\n}\n\n// Получить сообщения постранично\nexport interface PagingParams {\n  groupId?: number;\n  userId?: number;\n  contactId?: number;\n  current: number;\n  pageSize: number;\n}\n\n// Постраничный ответ для групповых сообщений\nexport interface PagingResponse {\n  messageArr: GroupMessage[];\n  userArr: User[];\n}\n\nexport interface ContactUserMap {\n  contactId: number;\n  contactUserName: string;\n}\n\n// информация о том, что контакт печатает текст\nexport interface SetTyping {\n  userId?: number;\n  groupId?: number;\n  contactId?: number;\n}\n\n// Операция с сообщением\nexport interface MessageOperation {\n  userId?: number;\n  username: string;\n  groupId?: number;\n  contactId?: number;\n  _id: number;\n}\n\n// Данные конференции\nexport interface ConferenceData {\n  userId: number;\n  contactId: number;\n  id: string;\n  url?: string;\n  serverAddress?: string;\n  user?: string;\n  password?: string;\n}\n\n// Данные чата\nexport interface ChatData {\n  user: User;\n  groupData: Group[];\n  contactData: Contact[];\n  userData: User[];\n  operatorData: Contact[];\n  conferenceData: ConferenceData;\n}\n\nexport interface GroupMember {\n  groupId: number;\n  members: Contact[];\n}\n\nexport interface AddPrivateMessages {\n  pageSize: number;\n  contactId: number;\n  messages: PrivateMessage[];\n}\n\nexport interface AddGroupMessages extends PagingResponse {\n  pageSize: number;\n  groupId: number;\n}\n\nexport interface SetActiveRoom {\n  groupId?: number;\n  contactId?: number;\n  ifNotExists: boolean;\n}\n\nexport interface JoinGroup {\n  group: Group;\n  user: Contact;\n}\n\nexport interface SetUser {\n  user: User;\n  token: string;\n}\n\nexport type ChatRoom = Group | Contact;\nexport type ChatMessage = GroupMessage | PrivateMessage;\n\n// Операции контекстного меню\nexport enum ContextMenuType {\n  COPY = \"COPY\", // Скопировать\n  REVOKE = \"REVOKE\", // Удалить сообщение\n  TOP_REVERT = \"TOP_REVERT\", // Открепить\n  TOP = \"TOP\", // Закрепить\n  READ = \"READ\", // Прочесть всё\n  DELETE = \"DELETE\" // Удалить\n}\n","import * as React from \"react\";\nimport { Box,  } from \"@mui/material\";\nimport { makeStyles,createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    item: {\n      cursor: \"pointer\",\n    },\n  })\n);\n\ntype EmojiProps = {\n  onSelect?: (emoji: string) => void;\n};\n\ntype EmojiItemProps = {\n  emoji: string;\n};\n\nconst Emoji: React.FC<EmojiProps> = (props: EmojiProps) => {\n  const classes = useStyles();\n  const emojiClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (props.onSelect) {\n      props.onSelect((e.target as HTMLDivElement).innerText);\n    }\n  };\n\n  const Item = (itemProps: EmojiItemProps) => {\n    return (\n      <Box\n        m={0.5}\n        component=\"span\"\n        onClick={emojiClick}\n        className={classes.item}\n      >\n        {itemProps.emoji}\n      </Box>\n    );\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😃\" />\n        <Item emoji=\"😁\" />\n        <Item emoji=\"😂\" />\n        <Item emoji=\"😄\" />\n        <Item emoji=\"😅\" />\n        <Item emoji=\"😆\" />\n        <Item emoji=\"😇\" />\n        <Item emoji=\"😈\" />\n        <Item emoji=\"😉\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😊\" />\n        <Item emoji=\"😋\" />\n        <Item emoji=\"😌\" />\n        <Item emoji=\"😍\" />\n        <Item emoji=\"😎\" />\n        <Item emoji=\"😏\" />\n        <Item emoji=\"😐\" />\n        <Item emoji=\"😒\" />\n        <Item emoji=\"😓\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"❓\" />\n        <Item emoji=\"😕\" />\n        <Item emoji=\"😖\" />\n        <Item emoji=\"😗\" />\n        <Item emoji=\"😘\" />\n        <Item emoji=\"😙\" />\n        <Item emoji=\"😚\" />\n        <Item emoji=\"😜\" />\n        <Item emoji=\"😝\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😞\" />\n        <Item emoji=\"😟\" />\n        <Item emoji=\"😠\" />\n        <Item emoji=\"😡\" />\n        <Item emoji=\"😢\" />\n        <Item emoji=\"😣\" />\n        <Item emoji=\"😤\" />\n        <Item emoji=\"😥\" />\n        <Item emoji=\"😦\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😨\" />\n        <Item emoji=\"😩\" />\n        <Item emoji=\"😪\" />\n        <Item emoji=\"😫\" />\n        <Item emoji=\"😬\" />\n        <Item emoji=\"😭\" />\n        <Item emoji=\"😮\" />\n        <Item emoji=\"😯\" />\n        <Item emoji=\"😰\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😲\" />\n        <Item emoji=\"😳\" />\n        <Item emoji=\"😴\" />\n        <Item emoji=\"😵\" />\n        <Item emoji=\"🧐\" />\n        <Item emoji=\"😷\" />\n        <Item emoji=\"🙁\" />\n        <Item emoji=\"🙂\" />\n        <Item emoji=\"🙃\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤐\" />\n        <Item emoji=\"🤑\" />\n        <Item emoji=\"🤒\" />\n        <Item emoji=\"🤓\" />\n        <Item emoji=\"🤔\" />\n        <Item emoji=\"🤕\" />\n        <Item emoji=\"🤠\" />\n        <Item emoji=\"🤡\" />\n        <Item emoji=\"🤢\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤤\" />\n        <Item emoji=\"🤥\" />\n        <Item emoji=\"🤧\" />\n        <Item emoji=\"🤨\" />\n        <Item emoji=\"🤩\" />\n        <Item emoji=\"🤪\" />\n        <Item emoji=\"🤫\" />\n        <Item emoji=\"🤬\" />\n        <Item emoji=\"🤭\" />\n      </Box>\n    </Box>\n  );\n};\nexport default Emoji;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typingText: {\n      paddingLeft: theme.spacing(0.5),\n    },\n    typingDot: {\n      display: \"inline-block\",\n      verticalAlign: \"middle\",\n      width: 4,\n      height: 4,\n      margin: \"0px 2px\",\n      background: theme.palette.primary.main,\n      borderRadius: \"50%\",\n      opacity: \"0\",\n      animation: \"$loadingFade 1s infinite\",\n      \"&:nth-child(1)\": {\n        animationDelay: \"0s\",\n      },\n      \"&:nth-child(2)\": {\n        animationDelay: \"0.2s\",\n      },\n      \"&:nth-child(3)\": {\n        animationDelay: \"0.4s\",\n      },\n    },\n    \"@keyframes loadingFade\": {\n      \"0%\": {\n        opacity: 0,\n      },\n      \"50%\": {\n        opacity: 0.8,\n      },\n      \"100%\": {\n        opacity: 0,\n      },\n    },\n  })\n);\n\ntype TypingProps = {\n  message: string;\n};\n\nconst Typing: React.FC<TypingProps> = (props: TypingProps) => {\n  const classes = useStyles();\n  return (\n    <Typography color=\"primary\" variant=\"body2\" component=\"span\">\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingText}>{props.message}</span>\n    </Typography>\n  );\n};\nexport default Typing;\n","import React, { ChangeEvent, KeyboardEvent } from \"react\";\nimport {\n  Box,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Popover,\n  SvgIcon,\n} from \"@mui/material\";\n\nimport { makeStyles } from '@mui/styles';\nimport { Send, InsertEmoticon } from \"@mui/icons-material\";\nimport Emoji from \"./Emoji\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatRoom, ImageSize, SendMessage } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    flex: \"auto\",\n  },\n  inputUpload: {\n    display: \"none\",\n  },\n  attachmentIcon: {\n    fill: \"none\",\n    stroke: \"currentColor\",\n  },\n}));\n\ntype EntryProps = {\n  chat: ChatRoom | null;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n};\n\n/**\n * Рассчитать пропорции изображения\n */\nconst getImageSize = (data: ImageSize) => {\n  let { width, height } = data;\n  if (width > 335 || height > 335) {\n    if (width > height) {\n      height = 335 * (height / width);\n      width = 335;\n    } else {\n      width = 335 * (width / height);\n      height = 335;\n    }\n  }\n  return {\n    width,\n    height,\n  };\n};\n\nconst Entry: React.FC<EntryProps> = (props: EntryProps) => {\n  const classes = useStyles();\n  const { chat } = props;\n\n  const { t } = useTranslation();\n\n  const [empjiEl, setEmojiEl] = React.useState<HTMLButtonElement | null>(null);\n  const [text, setText] = React.useState(\"\");\n  const [lastTyping, setLastTyping] = React.useState({\n    chat,\n    time: 0,\n  });\n\n  const handleEmojiClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setEmojiEl(event.currentTarget);\n  };\n\n  const handleEmojiClose = () => {\n    setEmojiEl(null);\n  };\n\n  const emojiSelect = (emoji: string) => {\n    setText(`${text}${emoji}`);\n    handleEmojiClose();\n  };\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setText(target.value);\n    if (\n      chat &&\n      props.onTyping &&\n      (lastTyping.chat !== chat || Date.now() - lastTyping.time >= 500)\n    ) {\n      setLastTyping({\n        chat,\n        time: Date.now(),\n      });\n      props.onTyping(chat);\n    }\n  };\n\n  const sendMessage = (data: SendMessage) => {\n    if (chat && props.onSendMessage) props.onSendMessage(chat, data);\n  };\n\n  const submit = () => {\n    if (text.trim().length === 0) {\n      return;\n    }\n\n    sendMessage({ message: text, messageType: \"text\" });\n    setText(\"\");\n  };\n\n  const onSubmitClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    submit();\n  };\n\n  const onKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      submit();\n    }\n  };\n\n  const onSubmitFile = (event: React.FormEvent<HTMLInputElement>) => {\n    if (!event.currentTarget.files) return;\n    const file = event.currentTarget.files[0];\n    let messageType: string;\n    if (file.type.includes(\"image\")) {\n      messageType = \"image\";\n    } else if (file.type.includes(\"video\")) {\n      messageType = \"video\";\n    } else {\n      messageType = \"file\";\n    }\n    if (messageType === \"image\") {\n      const image = new Image();\n      const url = window.URL || window.webkitURL;\n      image.src = url.createObjectURL(file);\n      image.onload = () => {\n        const imageSize: ImageSize = getImageSize({\n          width: image.width,\n          height: image.height,\n        });\n        sendMessage({\n          message: file,\n          width: imageSize.width,\n          height: imageSize.height,\n          messageType,\n        });\n      };\n    } else {\n      sendMessage({\n        message: file,\n        messageType,\n        fileName: file.name,\n        size: file.size,\n      });\n    }\n  };\n\n  const emojiOpen = Boolean(empjiEl);\n  const enojiId = emojiOpen ? \"simple-popover\" : undefined;\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <TextField\n        className={classes.input}\n        placeholder={t(\"CHAT.INPUT_MESSAGE\")}\n        autoFocus={true}\n        variant=\"standard\"\n        InputProps={{\n          disableUnderline: true,\n          startAdornment: (\n            <InputAdornment position={\"start\"}>\n              <input\n                accept=\"*\"\n                className={classes.inputUpload}\n                id=\"icon-button-file\"\n                type=\"file\"\n                onChange={onSubmitFile}\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload\"\n                  component=\"span\"\n                  size=\"small\"\n                >\n                  <SvgIcon fill=\"none\" className={classes.attachmentIcon}>\n                    <path\n                      d=\"M16.768 13.5767L11.6961 18.6486C9.35886 20.9859 5.56937 20.9859 3.23208 18.6486V18.6486C0.894789 16.3114 0.894789 12.5219 3.23208 10.1846L10.4479 2.96872C12.0875 1.32914 14.7458 1.32914 16.3854 2.96873V2.96873C18.025 4.60831 18.025 7.26659 16.3854 8.90617L9.16515 16.1264C8.23032 17.0612 6.71466 17.0612 5.77982 16.1264V16.1264C4.84499 15.1916 4.84499 13.6759 5.77982 12.7411L10.8896 7.63131\"\n                      strokeWidth=\"1.6\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </SvgIcon>\n                </IconButton>\n              </label>{\" \"}\n              <IconButton\n                aria-describedby={enojiId}\n                onClick={handleEmojiClick}\n                color=\"primary\"\n                size=\"small\"\n              >\n                <InsertEmoticon />\n              </IconButton>\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={onSubmitClick}\n            >\n              <Send />\n            </IconButton>\n          ),\n        }}\n        value={text}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n      />\n      <Popover\n        id={enojiId}\n        open={emojiOpen}\n        anchorEl={empjiEl}\n        onClose={handleEmojiClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Emoji onSelect={emojiSelect} />\n      </Popover>\n    </Box>\n  );\n};\nexport default Entry;\n","import moment from \"moment\";\nimport { ChatRoom, Contact, Group } from \"../types\";\n\nexport function isEmpty(value: unknown): boolean {\n  return (\n    value == null ||\n    (typeof value === \"object\" && Object.keys(value).length === 0) ||\n    (typeof value === \"string\" && value.trim().length === 0)\n  );\n}\n\n// string contains string\nexport function isContainStr(str1: string, str2: string): boolean {\n  return str2.indexOf(str1) >= 0;\n}\n\n/**\n * check URL\n * @param text\n */\nexport function isUrl(text: string): boolean {\n  // parse url\n  const UrlReg = new RegExp(/http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?/);\n  return UrlReg.test(text);\n}\n\n/**\n * Формитирование времени сообщения\n * @param time\n */\nexport function formatTime(time: Date | string | undefined) {\n  if (typeof time === \"undefined\") return null;\n  if (typeof time === \"string\") time = new Date(time);\n  // больше чем вчера\n  if (\n    moment()\n      .add(-1, \"days\")\n      .startOf(\"day\")\n      .isAfter(time)\n  ) {\n    return moment(time).format(\"DD.MM.YYYY HH:mm\");\n  }\n  // вчера\n  if (\n    moment()\n      .startOf(\"day\")\n      .isAfter(time)\n  ) {\n    return `Вчера в ${moment(time).format(\"HH:mm\")}`;\n  }\n\n  return moment(time).format(\"HH:mm\");\n}\n\n/**\n * Раскрыть содержимое\n * @param content - данные в строке\n */\nexport function getFileMeta(\n  content: string\n): {\n  date: string;\n  userId: string;\n  size: string;\n  name: string;\n} {\n  // Формат  [date]$[userId]$[size]$[fileName]\n  // Например fileName = 1606980397047$1a01e20f-3780-4227-84b5-5c69ca766ee5$15.41KB$123.docx\n  const meta = content.split(\"$\");\n  const [date, userId, size, name] = meta;\n  return {\n    date,\n    userId,\n    size,\n    name\n  };\n}\n\nexport function getImageMeta(\n  content: string\n): {\n  date: string;\n  userId: string;\n  width: string;\n  height: string;\n} {\n  // Формат [date]$[userId]$[width]$[height]$...\n  const meta = content.split(\"$\");\n  const [date, userId, width, height] = meta;\n  return {\n    date,\n    userId,\n    width,\n    height\n  };\n}\n\nexport function splitFileName(name: string): { name: string; ext: string } {\n  const idx = name.lastIndexOf(\".\");\n  if (idx === -1)\n    return {\n      name,\n      ext: \"\"\n    };\n  return {\n    name: name.slice(0, idx),\n    ext: name.slice(idx + 1)\n  };\n}\n\nexport const getChatId = (chat: ChatRoom | null): string | null => {\n  if (!chat) return null;\n  return (chat as Group).groupId\n    ? `group:${(chat as Group).groupId}`\n    : `user:${chat.userId}`;\n};\n\nexport const getChatName = (chat: ChatRoom): string => {\n  return (chat as Group).groupId\n    ? (chat as Group).name\n    : (chat as Contact).username;\n};\n\nexport const chatRoomComparer = (a: ChatRoom, b: ChatRoom): number => {\n  const hasMessagesA = Array.isArray(a.messages) && a.messages.length > 0;\n  const hasMessagesB = Array.isArray(b.messages) && b.messages.length > 0;\n  if (\n    hasMessagesA &&\n    hasMessagesB &&\n    b.messages != null &&\n    a.messages != null\n  ) {\n    return (\n      new Date(b.messages[b.messages.length - 1].cdate).getTime() -\n      new Date(a.messages[a.messages.length - 1].cdate).getTime()\n    );\n  }\n  if (hasMessagesA) {\n    return -1;\n  }\n  return 1;\n};\n","import React from \"react\";\nimport {\n  Avatar,\n  Box,\n} from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport { getFileMeta, splitFileName } from \"../../utils/common\";\nimport { ChatMessage } from \"../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fileIcon: {\n      fontSize: \"0.75rem\",\n    },\n    fileBody: {\n      paddingLeft: theme.spacing(1),\n    },\n  })\n);\ntype FileProps = {\n  message: ChatMessage;\n};\n\nconst File: React.FC<FileProps> = ({ message }: FileProps) => {\n  const classes = useStyles();\n  const meta = getFileMeta(message.content);\n  const { name, ext } = splitFileName(meta.name);\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <Avatar className={classes.fileIcon}>{ext.toUpperCase()}</Avatar>\n      <Box display=\"flex\" flexDirection=\"column\" className={classes.fileBody}>\n        {name}\n        <span>{`${ext} ${meta.size}`}</span>\n      </Box>\n    </Box>\n  );\n};\n\nexport default File;\n","import React from \"react\";\nimport { makeStyles } from '@mui/styles';\nimport { ChatMessage } from \"../../types\";\n\nconst useStyles = makeStyles(() => ({\n  mediaContent: {\n    maxWidth: 350,\n    maxHeight: 350,\n  },\n}));\n\ntype VideoProps = {\n  apiUrl: string;\n  message: ChatMessage;\n  isConference: boolean;\n};\n\nconst Video: React.FC<VideoProps> = ({\n  apiUrl,\n  message,\n  isConference,\n}: VideoProps) => {\n  const classes = useStyles();\n  let src = \"\";\n  if (isConference) {\n    const meta = JSON.parse(message.content);\n    src = `${apiUrl}/static/conf/${meta.visitId}/${meta.name}`;\n  } else src = `${apiUrl}/static/file/${message.content}`;\n  return (\n    <video src={src} className={classes.mediaContent} controls muted>\n      Ваш браузер не поддерживает тег video.\n    </video>\n  );\n};\n\nexport default Video;\n","import React from \"react\";\nimport Viewer from \"react-viewer\";\nimport { Theme } from '@mui/material/styles';\nimport { getImageMeta } from \"../../utils/common\";\nimport { ChatMessage } from \"../../types\";\nimport { makeStyles, createStyles } from '@mui/styles';\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mediaContent: {\n      maxWidth: 350,\n      maxHeight: 350,\n      cursor: \"pointer\",\n      [theme.breakpoints.down(\"sm\")]: {\n        maxWidth: 250,\n        maxHeight: 250,\n      },\n    },\n  })\n);\ntype ImageProrps = {\n  apiUrl: string;\n  message: ChatMessage;\n};\n\nconst Image: React.FC<ImageProrps> = ({ apiUrl, message }: ImageProrps) => {\n  const classes = useStyles();\n  const [viewerVisible, setViewerVisible] = React.useState(false);\n  const meta = getImageMeta(message.content);\n  return (\n    <React.Fragment>\n      <Viewer\n        zIndex={2000}\n        visible={viewerVisible}\n        changeable={false}\n        onClose={() => {\n          setViewerVisible(false);\n        }}\n        images={[\n          {\n            src: `${apiUrl}/static/image/${message.content}`,\n          },\n        ]}\n      />\n      <img\n        src={`${apiUrl}/static/image/${message.content}`}\n        width={meta.width}\n        height={meta.height}\n        className={classes.mediaContent}\n        onClick={() => {\n          setViewerVisible(true);\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\nimport File from \"./File\";\nimport Video from \"./Video\";\nimport Image from \"./Image\";\nimport { ChatMessage } from \"../../types\";\n\ntype MessageProps = {\n  apiUrl: string;\n  message: ChatMessage;\n};\nconst MessageContent: React.FC<MessageProps> = ({\n  apiUrl,\n  message,\n}: MessageProps) => {\n  switch (message.messageType) {\n    case \"text\":\n      return <React.Fragment>{message.content}</React.Fragment>;\n    case \"video\":\n    case \"video_conference\":\n      return (\n        <Video\n          message={message}\n          apiUrl={apiUrl}\n          isConference={message.messageType === \"video_conference\"}\n        />\n      );\n    case \"image\":\n      return <Image message={message} apiUrl={apiUrl} />;\n    case \"file\":\n      return <File message={message} />;\n  }\n  return null;\n};\n\nexport default MessageContent;\n","import * as React from \"react\";\nimport {\n  Box,\n  Link,\n  ListItem,\n  Typography,\n} from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport { DoneAll, Done } from \"@mui/icons-material\";\nimport { formatTime } from \"../utils/common\";\nimport MessageContent from \"./MessageContent\";\nimport { Alert } from \"@mui/lab\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatMessage, Contact, PrivateMessage, User } from \"../types\";\n\ntype MessageProps = {\n  apiUrl: string;\n  user: User;\n  message: ChatMessage;\n  owner: Contact;\n  isGroupMessage: boolean; // сообщение в группу\n  isUserFirst: boolean; // начинает группу сообщений от одного пользователя\n  isUserLast: boolean; // завершает группу сообщений от одного пользователя\n  refOnLastMess: React.RefObject<HTMLDivElement> | null;\n  onContextMenu: (event: React.MouseEvent<HTMLElement>) => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    rootContact: {\n      \"& span\": {\n        float: \"right\",\n        color: \"#B2B6C2\",\n      },\n      \"& $message\": {\n        backgroundColor: \"#F1F4FC\",\n        color: \"black\",\n      },\n      \"& $lastMessage\": {\n        borderBottomLeftRadius: 0,\n      },\n    },\n    rootUser: {\n      justifyContent: \"flex-end\",\n      \"& span\": {\n        float: \"right\",\n        color: \"#D9DEEC\",\n      },\n      \"& $message\": {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n      },\n      \"& $lastMessage\": {\n        borderBottomRightRadius: 0,\n      },\n    },\n    rootNotify: {\n      justifyContent: \"center\",\n      \"& > *\": {\n        padding: `0px ${theme.spacing(1)}`,\n        borderRadius: 16,\n        fontWeight: 500,\n      },\n    },\n    message: {\n      maxWidth: \"85%\",\n      borderRadius: 16,\n      padding: theme.spacing(1),\n    },\n    lastMessage: {},\n    file: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      cursor: \"pointer\",\n    },\n    header: {\n      flex: \"0 0 100%\",\n      overflow: \"hidden\",\n      fontWeight: \"bold\",\n    },\n    body: {\n      flex: \"1 1 auto\",\n      wordBreak: \"break-word\",\n      overflow: \"hidden\",\n    },\n    status: {\n      paddingLeft: theme.spacing(1),\n      flex: \"1 1 auto\",\n      alignSelf: \"flex-end\",\n    },\n    statusImage: {\n      fontSize: \"1rem\",\n      marginRight: theme.spacing(0.5),\n      verticalAlign: \"middle\",\n    },\n  })\n);\n\nconst wrapMessage = (\n  apiUrl: string,\n  message: ChatMessage,\n  classes: ReturnType<typeof useStyles>,\n  isUserLast: boolean,\n  onContextMenu: ((event: React.MouseEvent<HTMLElement>) => void) | undefined,\n  child: JSX.Element\n) => {\n  const { messageType } = message;\n\n  const className = isUserLast\n    ? `${classes.message} ${classes.lastMessage}`\n    : classes.message;\n\n  if (messageType === \"file\") {\n    return (\n      <Link\n        className={`${className} ${classes.file}`}\n        underline=\"none\"\n        href={`${apiUrl}/static/file/${message.content}`}\n        target=\"_blank\"\n        download\n        onContextMenu={onContextMenu}\n      >\n        {child}\n      </Link>\n    );\n  }\n  const isMedia =\n    messageType === \"image\" ||\n    messageType === \"video\" ||\n    messageType === \"video_conference\";\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection={isMedia ? \"column\" : \"row\"}\n      flexWrap=\"wrap\"\n      className={className}\n      onContextMenu={onContextMenu}\n    >\n      {child}\n    </Box>\n  );\n};\n\nconst Message: React.FC<MessageProps> = (props: MessageProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const {\n    apiUrl,\n    message,\n    owner,\n    refOnLastMess,\n    user,\n    isGroupMessage,\n    isUserFirst,\n    isUserLast,\n  } = props;\n\n  if (message.messageType === \"notify\") {\n    // Уведомление - особый случай\n    const content =\n      message.content[0] === \"{\"\n        ? JSON.parse(message.content)\n        : message.content;\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Alert\n          severity={typeof content === \"string\" ? \"info\" : content.severity}\n          ref={refOnLastMess}\n        >\n          {typeof content === \"string\" ? content : content.message}\n        </Alert>\n      </ListItem>\n    );\n  }\n\n  if (message.isRevoke) {\n    // Удаленное сообщение\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Typography variant=\"body2\" ref={refOnLastMess} align=\"center\">\n          {message.userId === user.userId\n            ? t(\"CHAT.MESSAGE.REVOKED.YOU\")\n            : `${message.revokeUserName} ${t(\"CHAT.MESSAGE.REVOKED.CONTACT\")}`}\n        </Typography>\n      </ListItem>\n    );\n  }\n\n  const isMine = user.userId === message.userId;\n\n  return (\n    <ListItem className={isMine ? classes.rootUser : classes.rootContact}>\n      {wrapMessage(\n        apiUrl,\n        message,\n        classes,\n        isUserLast,\n        props.onContextMenu,\n        <React.Fragment>\n          {!isMine && isGroupMessage && owner && isUserFirst && (\n            <div className={classes.header}>{owner.username}</div>\n          )}\n          <div className={classes.body}>\n            <MessageContent message={message} apiUrl={apiUrl} />\n          </div>\n          <div className={classes.status} ref={refOnLastMess}>\n            <span>\n              {isMine ? (\n                (message as PrivateMessage).status === 0 ? (\n                  <Done className={classes.statusImage} />\n                ) : (\n                  <DoneAll className={classes.statusImage} />\n                )\n              ) : null}\n              {formatTime(message.cdate)}\n            </span>\n          </div>\n        </React.Fragment>\n      )}\n    </ListItem>\n  );\n};\nexport default Message;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport Typing from \"./Typing\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"../types\";\n\ntype ContactStatusProps = {\n  contact: Contact;\n  isTyping: boolean;\n};\n\nconst ContactStatus: React.FC<ContactStatusProps> = (\n  props: ContactStatusProps\n) => {\n  const { t } = useTranslation();\n\n  if (props.isTyping) return <Typing message={t(\"CHAT.STATUS.TYPING\")} />;\n  if (props.contact.online === 1)\n    return (\n      <Typography variant=\"body2\" color=\"primary\" component=\"span\">\n        {t(\"CHAT.STATUS.ONLINE\")}\n      </Typography>\n    );\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n      {t(\"CHAT.STATUS.OFFLINE\")}\n    </Typography>\n  );\n};\n\nexport default ContactStatus;\n","import React from \"react\";\nimport {\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@mui/material\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport ContactStatus from \"./ContactStatus\";\nimport { makeStyles } from '@mui/styles';\nimport { Contact } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  star: {\n    fontSize: \"0.85rem\",\n    verticalAlign: \"middle\",\n  },\n}));\n\ntype ContactListProps = {\n  apiUrl: string;\n  contacts: Contact[];\n  owner?: number;\n  onClick?: (contact: Contact) => void;\n};\n\nconst ContactList: React.FC<ContactListProps> = (props: ContactListProps) => {\n  const classes = useStyles();\n  const { apiUrl, contacts, owner } = props;\n\n  return (\n    <List aria-label=\"contacts\">\n      {contacts.map((contact) => (\n        <ListItem\n          button\n          key={contact.userId}\n          onClick={() => props.onClick && props.onClick(contact)}\n        >\n          <ListItemAvatar>\n            <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={\n              <span>\n                {contact.username}{\" \"}\n                {owner === contact.userId && (\n                  <StarIcon className={classes.star} color=\"primary\" />\n                )}\n              </span>\n            }\n            secondary={<ContactStatus contact={contact} isTyping={false} />}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\nexport default ContactList;\n","import { Dialog, DialogTitle } from \"@mui/material\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"../types\";\nimport ContactList from \"./ContactList\";\n\ninterface AddContactProps {\n  open: boolean;\n  apiUrl: string;\n  contacts: Contact[];\n  onClose: (value?: Contact) => void;\n}\n\nconst AddContact: React.FC<AddContactProps> = (\n  props: AddContactProps\n) => {\n  const { onClose, open, apiUrl, contacts } = props;\n  const { t } = useTranslation();\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleListItemClick = (contact: Contact) => {\n    onClose(contact);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"add-contact-title\"\n      open={open}\n    >\n      <DialogTitle id=\"switch-operator-title\">\n        {t(\"CHAT.ADD_CONTACT\")}\n      </DialogTitle>\n      <ContactList\n        apiUrl={apiUrl}\n        contacts={contacts}\n        onClick={handleListItemClick}\n      />\n    </Dialog>\n  );\n};\n\nexport default AddContact;","import React from \"react\";\nimport {\n  Avatar,\n  CardHeader,\n  Button,\n  Popover,\n  IconButton,\n} from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport { useTranslation } from \"react-i18next\";\nimport VideoCallIcon from \"@mui/icons-material/VideoCall\";\nimport CallEndIcon from \"@mui/icons-material/CallEnd\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ContactStatus from \"./ContactStatus\";\nimport ContactList from \"./ContactList\";\nimport AddContact from \"./AddContact\";\nimport {\n  ChatRoom,\n  Contact,\n  Group,\n  SetTyping,\n  User,\n  ConferenceData,\n} from \"../types\";\nimport { makeStyles, createStyles } from '@mui/styles';\nimport { isEmpty } from \"../utils/common\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popover: {\n      pointerEvents: \"none\",\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n    avatarGroup: {\n      backgroundColor: \"#28B7C6\",\n      color: \"#fff\",\n    },\n  })\n);\n\ntype RoomHeaderProps = {\n  apiUrl: string;\n  user: User;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  className: string;\n  operators: Contact[];\n  onVideoCall?: (chat: ChatRoom) => void;\n  onVideoEnd?: (conference: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst getGroupStatus = (group: Group, t: (key: string) => string) => {\n  const status = [`${group.members?.length} ${t(\"CHAT.MEMBERS\")}`];\n  const onlineCount = (group.members || []).reduce(\n    (sum: number, contact) => (contact.online ? sum + 1 : sum),\n    0\n  );\n  if (onlineCount) status.push(`${onlineCount} ${t(\"CHAT.STATUS.ONLINE\")}`);\n  return status.join(\", \");\n};\n\nconst RoomHeader: React.FC<RoomHeaderProps> = ({\n  apiUrl,\n  user,\n  chat,\n  typing,\n  conference,\n  className,\n  operators,\n  onVideoCall,\n  onVideoEnd,\n  onConferencePause,\n  onOperatorAdd,\n  onLeaveGroup,\n\n\n}: RoomHeaderProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const [addOperatorOpen, setAddOperatorOpen] = React.useState(false);\n\n  if (!chat)\n    return (\n      <CardHeader\n        avatar={<Avatar />}\n        title=\"\"\n        subheader=\"\"\n        className={className}\n      />\n    );\n\n  const handlePopoverOpen = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleAddOperatorOpen = () => {\n    setAddOperatorOpen(true);\n  };\n\n  const handleAddOperatorClose = (operator?: Contact) => {\n    setAddOperatorOpen(false);\n    if (onOperatorAdd && operator && chat)\n      onOperatorAdd(chat as Group, operator);\n  };\n\n  const group = chat as Group;\n  if (group.groupId) {\n    // группа\n    return (\n      <CardHeader\n        avatar={\n          <Avatar alt={group.name} className={classes.avatarGroup}>\n            <GroupIcon />{\" \"}\n          </Avatar>\n        }\n        title={group.name}\n        subheader={\n          <React.Fragment>\n            <span\n              aria-owns={anchorEl ? \"mouse-over-popover\" : undefined}\n              aria-haspopup=\"true\"\n              onMouseEnter={handlePopoverOpen}\n              onMouseLeave={handlePopoverClose}\n            >\n              {getGroupStatus(group, t)}\n            </span>\n            <Popover\n              id=\"mouse-over-popover\"\n              className={classes.popover}\n              classes={{\n                paper: classes.paper,\n              }}\n              open={!!anchorEl}\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              onClose={handlePopoverClose}\n              disableRestoreFocus\n            >\n              <ContactList\n                apiUrl={apiUrl}\n                contacts={group.members as Contact[]}\n                owner={group.userId}\n              />\n            </Popover>\n          </React.Fragment>\n        }\n        className={className}\n        action={\n          <React.Fragment>\n            {user.role === 4 && (\n              <React.Fragment>\n                <IconButton\n                  aria-label=\"add user\"\n                  onClick={handleAddOperatorOpen}\n                >\n                  <PersonAddIcon />\n                </IconButton>\n                <AddContact\n                  apiUrl={apiUrl}\n                  open={addOperatorOpen}\n                  contacts={operators}\n                  onClose={handleAddOperatorClose}\n                />\n              </React.Fragment>\n            )}\n            {user.role === 4 &&\n              group.members?.find(\n                (it) => it.userId !== user.userId && it.role === 4\n              ) &&\n              onLeaveGroup && (\n                <IconButton\n                  aria-label=\"leave group\"\n                  onClick={() => onLeaveGroup(group)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              )}\n          </React.Fragment>\n        }\n      />\n    );\n  }\n  const contact = chat as Contact;\n  const isTyping = !!typing?.contactId && typing?.userId === contact.userId;\n\n  console.log(\"conference\", conference, \"user\", user, \"contact\", contact)\n\n  return (\n    <CardHeader\n      avatar={\n        <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n      }\n      title={contact.username}\n      subheader={<ContactStatus contact={contact} isTyping={isTyping} />}\n      className={className}\n      action={\n        <React.Fragment>\n          {conference != null && !isEmpty(conference) && onConferencePause != null && (\n            <Button\n              aria-label=\"cancel call\"\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"small\"\n              disabled={!contact.online}\n              startIcon={<CallEndIcon color=\"error\" />}\n              onClick={() => onConferencePause(conference)}\n            >\n              {t(\"CHAT.CONFERENCE.PAUSE\")}\n            </Button>\n          )}\n\n          {conference != null && !isEmpty(conference) && onVideoEnd != null && user.role != null && [3, 4].includes(user.role) && (\n            <Button\n              aria-label=\"cancel call\"\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              disabled={!contact.online}\n              startIcon={<CallEndIcon color=\"error\" />}\n              onClick={() => onVideoEnd(conference)}\n              style={{ marginLeft: 8 }}\n            >\n              {t(\"CHAT.CONFERENCE.FINISH\")}\n            </Button>\n          )}\n\n          {isEmpty(conference) && onVideoCall != null && user.role != null && [3, 4].includes(user.role) && (\n            <Button\n              aria-label=\"video call\"\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"small\"\n              disabled={!contact.online}\n              startIcon={<VideoCallIcon />}\n              onClick={() => onVideoCall(contact)}\n\n            >\n              {t(\"CHAT.CONFERENCE.START\")}\n            </Button>\n          )}\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default RoomHeader;\n","import React, { useCallback } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CircularProgress,\n\n  Divider,\n  List,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  IconButton,\n} from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport Entry from \"./Entry\";\nimport Message from \"./Message\";\nimport RoomHeader from \"./RoomHeader\";\nimport { useTranslation } from \"react-i18next\";\nimport { getChatId, isEmpty } from \"../utils/common\";\nimport {\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  SetTyping,\n  User,\n  Contact,\n  ConferenceData,\n  Group,\n  ContactGather,\n} from \"../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      minWidth: 360,\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    inline: {\n      display: \"inline\",\n    },\n    messageListOuter: {\n      flex: 1,\n      overflowY: \"auto\",\n      margin: 0,\n      padding: 0,\n      scrollbarWidth: \"thin\",\n      scrollbarColor: \"#6b6b6b #fff\",\n      \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n        backgroundColor: \"#fff\",\n      },\n      \"&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb\": {\n        borderRadius: 8,\n        backgroundColor: \"#d5d9ef\",\n        border: \"5px solid #fff\",\n      },\n      \"&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus\": {\n        backgroundColor: \"#fff\",\n      },\n      \"&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active\":\n      {\n        backgroundColor: \"#73d7f5\",\n        border: \"3px solid #fff\",\n      },\n      \"&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover\": {\n        backgroundColor: \"#73d7f5\",\n        border: \"3px solid #fff\",\n      },\n      \"&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n    messageList: {\n      height: \"100%\",\n      overflow: \"auto\",\n    },\n    roomHeader: {\n      flex: 1,\n    },\n    roomProgress: {\n      padding: theme.spacing(2),\n    },\n    flexAll: {\n      flex: \"1 1 auto\",\n    },\n    flexEnd: {\n      justifyContent: \"flex-end\",\n    },\n  })\n);\n\nconst initialMenuState = {\n  message: null,\n  mouseX: null,\n  mouseY: null,\n  canCopy: false,\n  canDelete: false,\n};\n\nconst initialScrollState = {\n  autoScroll: true,\n  height: 0,\n};\n\ntype RoomProps = {\n  apiUrl: string;\n  user: User;\n  users: ContactGather;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  loading: boolean;\n  pageSize: number;\n  operators: Contact[];\n  onExitRoom?: (chat: ChatRoom) => void;\n  onEnterRoom?: (chat: ChatRoom) => void;\n  onNeedMoreMessages: (chat: ChatRoom) => Promise<void>;\n  onMeesageDelete?: (chat: ChatRoom, message: ChatMessage) => void;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n  onVideoCall?: (chat: ChatRoom) => void;\n  onVideoEnd?: (chat: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n\n};\n\nconst Room: React.FC<RoomProps> = (props: RoomProps) => {\n  const { apiUrl, user, users, chat, typing, conference, loading, pageSize } =\n    props;\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [scrollState, setScrollState] = React.useState(initialScrollState);\n\n  const messages = chat?.messages;\n  const messageCount = messages?.length || 0;\n\n  const refOnLastMess = React.useRef<HTMLDivElement>(null);\n  const refList = React.useRef<HTMLUListElement>(null);\n\n  const [menuState, setMenuState] = React.useState<{\n    message: ChatMessage | null;\n    mouseX: null | number;\n    mouseY: null | number;\n    canCopy: boolean;\n    canDelete: boolean;\n  }>(initialMenuState);\n\n  React.useEffect(() => {\n    if (props.onEnterRoom && chat) props.onEnterRoom(chat);\n  }, [getChatId(chat)]);\n\n  React.useLayoutEffect(() => {\n    if (scrollState.autoScroll && refOnLastMess.current) {\n      refOnLastMess.current.scrollIntoView();\n    }\n  }, [getChatId(chat), messageCount]);\n\n  React.useLayoutEffect(() => {\n    if (!loading && refList.current && scrollState.height > 0) {\n      refList.current.scrollTop =\n        refList.current.scrollHeight - scrollState.height;\n      setScrollState(initialScrollState);\n    }\n  }, [getChatId(chat), loading, scrollState.height]);\n\n  const onScroll = React.useCallback(\n    async (event: React.UIEvent<HTMLUListElement>) => {\n      const { currentTarget } = event;\n      if (!currentTarget || !chat || !!chat.noMoreData) return;\n      if (currentTarget.scrollTop === 0) {\n        if (messageCount >= pageSize && !loading && props.onNeedMoreMessages) {\n          setScrollState({\n            autoScroll: false,\n            height: currentTarget.scrollHeight,\n          });\n          props.onNeedMoreMessages(chat);\n        }\n      }\n    },\n    [chat, loading]\n  );\n\n  const handleMenuPopup = (\n    message: ChatMessage,\n    event: React.MouseEvent<HTMLElement>\n  ) => {\n    const canCopy = message.messageType === \"text\";\n    const canDelete =\n      user.userId === message.userId &&\n      !!props.onMeesageDelete &&\n      new Date().getTime() - new Date(message.cdate).getTime() <= 1000 * 60 * 2;\n    if (!canCopy && !canDelete) {\n      setMenuState(initialMenuState);\n      return;\n    }\n    event.preventDefault();\n    setMenuState({\n      message,\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4,\n      canCopy,\n      canDelete,\n    });\n  };\n\n  const handleMenuClose = () => {\n    setMenuState(initialMenuState);\n  };\n\n  const handleCopy = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (!message) return;\n    navigator.clipboard.writeText(message.content);\n  }, [menuState.message]);\n\n  const handleDelete = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (props.onMeesageDelete && chat && message)\n      props.onMeesageDelete(chat, message);\n  }, [menuState.message]);\n\n  console.log(\"messages\", messages)\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <Box display=\"flex\" flexDirection=\"row\">\n        {props.onExitRoom && chat && (\n          <IconButton\n            aria-label=\"exit room\"\n            onClick={() => props.onExitRoom && props.onExitRoom(chat)}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n        )}\n        <RoomHeader\n          apiUrl={apiUrl}\n          user={user}\n          chat={chat}\n          typing={typing}\n          conference={conference}\n          operators={props.operators}\n          className={classes.roomHeader}\n          onVideoCall={props.onVideoCall}\n          onVideoEnd={props.onVideoEnd}\n          onConferencePause={props.onConferencePause}\n          onOperatorAdd={props.onOperatorAdd}\n          onLeaveGroup={props.onLeaveGroup}\n        />\n        {loading && (\n          <div className={classes.roomProgress}>\n            <CircularProgress size={20} />\n          </div>\n        )}\n      </Box>\n      <Divider />\n      <CardContent className={classes.messageListOuter}>\n        {!isEmpty(messages) ? (\n          <List className={classes.messageList} onScroll={onScroll}>\n            {messages != null &&\n              (messages as ChatMessage[]).map((message, inx) => (\n                <Message\n                  key={message._id}\n                  apiUrl={apiUrl}\n                  user={user}\n                  message={message}\n                  owner={users[message.userId]}\n                  isGroupMessage={!!chat?.groupId}\n                  isUserFirst={\n                    inx === 0 ||\n                    messages[inx - 1].messageType === \"notify\" ||\n                    messages[inx - 1].userId !== messages[inx].userId\n                  }\n                  isUserLast={\n                    inx === messages.length - 1 ||\n                    messages[inx + 1].messageType === \"notify\" ||\n                    messages[inx + 1].userId !== messages[inx].userId\n                  }\n                  onContextMenu={(event) => handleMenuPopup(message, event)}\n                  refOnLastMess={\n                    inx === messages.length - 1 ? refOnLastMess : null\n                  }\n                />\n              ))}\n          </List>\n        ) : null}\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Entry\n          chat={chat}\n          onTyping={props.onTyping}\n          onSendMessage={props.onSendMessage}\n        />\n      </CardContent>\n      <Menu\n        keepMounted\n        open={menuState.mouseY !== null}\n        onClose={handleMenuClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          menuState.mouseY !== null && menuState.mouseX !== null\n            ? { top: menuState.mouseY, left: menuState.mouseX }\n            : undefined\n        }\n      >\n        <MenuItem onClick={handleCopy} disabled={!menuState.canCopy}>\n          <span className={classes.flexAll}>{t(\"CHAT.MESSAGE.MENU.COPY\")}</span>\n          <ListItemIcon className={classes.flexEnd}>\n            <FileCopyIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n        <MenuItem onClick={handleDelete} disabled={!menuState.canDelete}>\n          <span className={classes.flexAll}>\n            {t(\"CHAT.MESSAGE.MENU.DELETE\")}\n          </span>\n          <ListItemIcon className={classes.flexEnd}>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n      </Menu>\n    </Card>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport {\n  Avatar,\n  Badge,\n  Box,\n  Chip,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles, withStyles } from '@mui/styles';\n\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport { formatTime, getChatName } from \"../utils/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatMessage, ChatRoom, Contact, Group, SetTyping } from \"../types\";\n\ntype RoomListItemProps = {\n  apiUrl: string;\n  chat: ChatRoom;\n  active: boolean;\n  typing: SetTyping | null;\n  onClick: React.MouseEventHandler<HTMLDivElement> | undefined;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      flex: \"1 1 auto\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n    time: {\n      paddingLeft: theme.spacing(1),\n      justifyContent: \"flex-end\",\n      whiteSpace: \"nowrap\",\n    },\n    unread: {\n      justifyContent: \"flex-end\",\n      maxHeight: 20,\n    },\n    avatarGroup: {\n      backgroundColor: \"#28B7C6\",\n      color: \"#fff\",\n    },\n  })\n);\n\nconst getMessageText = (\n  message: ChatMessage | null,\n  t: (key: string) => string\n) => {\n  if (!message) return null;\n  switch (message.messageType) {\n    case \"text\":\n      return message.content;\n    case \"image\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.IMAGE\")}]`;\n    case \"video\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.VIDEO\")}]`;\n    case \"file\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.FILE\")}]`;\n    case \"notify\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.NOTIFY\")}]`;\n    default:\n      return null;\n  }\n};\n\nconst TypingBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: \"#44b700\",\n      color: \"#44b700\",\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      \"&::after\": {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"50%\",\n        animation: \"$ripple 1.2s infinite ease-in-out\",\n        border: \"1px solid currentColor\",\n        content: '\"\"',\n      },\n    },\n    \"@keyframes ripple\": {\n      \"0%\": {\n        transform: \"scale(.8)\",\n        opacity: 1,\n      },\n      \"100%\": {\n        transform: \"scale(2.4)\",\n        opacity: 0,\n      },\n    },\n  })\n)(Badge);\n\nconst OnlineBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: theme.palette.primary.main,\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    },\n  })\n)(Badge);\n\nconst contactAvatar = (\n  apiUrl: string,\n  contact: Contact,\n  typing: SetTyping | null\n): JSX.Element => {\n  const avatar = (\n    <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n  );\n\n  const isTyping = !!typing?.contactId && typing?.userId === contact.userId;\n  if (isTyping)\n    return (\n      <TypingBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </TypingBadge>\n    );\n\n  if (contact?.online)\n    return (\n      <OnlineBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </OnlineBadge>\n    );\n\n  return avatar;\n};\n\nconst RoomListItem: React.FC<RoomListItemProps> = (\n  props: RoomListItemProps\n) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { apiUrl, chat, typing } = props;\n  const roomName = getChatName(chat);\n\n  const avatar = (chat as Group).groupId ? (\n    <Avatar alt={roomName} className={classes.avatarGroup}>\n      <GroupIcon />{\" \"}\n    </Avatar>\n  ) : (\n    contactAvatar(apiUrl, chat as Contact, typing)\n  );\n\n  const lastMessage =\n    chat.messages && chat.messages.length > 0\n      ? chat.messages[chat.messages.length - 1]\n      : null;\n\n  const roomText = getMessageText(lastMessage, t);\n  const roomTime = lastMessage?.cdate;\n\n  return (\n    <ListItem button selected={props.active} onClick={props.onClick}>\n      <ListItemAvatar>{avatar}</ListItemAvatar>\n      <ListItemText\n        secondaryTypographyProps={{ component: \"span\" }}\n        primary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomName}</span>\n            <span className={classes.time}>{formatTime(roomTime)}</span>\n          </Box>\n        }\n        secondary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomText}</span>\n            {chat.unreadCount ? (\n              <Chip\n                className={classes.unread}\n                component=\"span\"\n                size=\"small\"\n                color=\"primary\"\n                label={chat.unreadCount}\n              />\n            ) : null}\n          </Box>\n        }\n      />\n    </ListItem>\n  );\n};\nexport default RoomListItem;\n","import React, { useEffect } from \"react\";\nimport List from \"@mui/material/List\";\nimport { Card, CardHeader, Divider, TextField } from \"@mui/material\";\nimport RoomListItem from \"./RoomListItem\";\nimport {\n  chatRoomComparer,\n  getChatId,\n  getChatName,\n  isEmpty,\n} from \"../utils/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatRoom, Contact, Group, SetTyping, User } from \"../types\";\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  searchField: {\n    width: \"100%\",\n  },\n}));\n\ntype RoomListProps = {\n  apiUrl: string;\n  user: User;\n  activeRoom: ChatRoom | null;\n  groups: Group[];\n  contacts: Contact[];\n  typing: SetTyping | null;\n  onChangeChat?: (chat: ChatRoom) => void;\n};\n\nconst filterChats = (chats: ChatRoom[], filter: string | null): ChatRoom[] => {\n  if (filter === null) return chats;\n  const lowerFilter = filter.toLowerCase();\n  return chats.filter(\n    (chat) =>\n      getChatName(chat).toLowerCase().indexOf(lowerFilter.toLowerCase()) !== -1\n  );\n};\n\nconst sortChats = (\n  userId: number,\n  groups: ChatRoom[],\n  contacts: ChatRoom[]\n) => {\n  let roomArr = [...groups, ...contacts];\n\n  // Сортировать окно чата (по времени последних сообщений)\n  roomArr = roomArr.sort(chatRoomComparer);\n\n  // Проверяем, есть ли список, который нужно закрепить\n  const topChatId = localStorage.getItem(`${userId}-topChatId`) as string;\n  if (topChatId) {\n    const chat = roomArr.find((c) => getChatId(c) === topChatId);\n    if (chat) {\n      // На первое место\n      roomArr = roomArr.filter((k) => getChatId(k) !== topChatId);\n      chat.isTop = true;\n      roomArr.unshift(chat);\n    }\n  }\n\n  return roomArr;\n};\n\nconst RoomList: React.FC<RoomListProps> = (props: RoomListProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [chats, setChats] = React.useState<ChatRoom[]>([]);\n\n  useEffect(() => {\n    setChats(\n      sortChats(\n        props.user.userId,\n        filterChats(props.groups, null),\n        filterChats(props.contacts, null)\n      )\n    );\n  }, []);\n\n  const onSearchChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    //    console.log(\"e.target.value\", e.target.value);\n\n    setChats(\n      sortChats(\n        props.user.userId,\n        filterChats(props.groups, e.target.value),\n        filterChats(props.contacts, e.target.value)\n      )\n    );\n  };\n\n  //console.log('props.activeRoom ==', props.activeRoom);\n  //const activeItem = (id: number) => id === props.activeRoom?.userId;\n  return (\n    <Card elevation={1} className={classes.root}>\n      <CardHeader\n        title={\n          <TextField\n            className={classes.searchField}\n            label={t(\"CHAT.INPUT_SEARCH_CONTACT\")}\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            onChange={onSearchChange}\n          />\n        }\n      />\n      <Divider />\n      <List component=\"nav\" aria-label=\"rooms\">\n        {!isEmpty(chats) &&\n          chats.map((chat) => (\n            <RoomListItem\n              key={getChatId(chat)}\n              apiUrl={props.apiUrl}\n              chat={chat}\n              active={chat === props.activeRoom}\n              typing={props.typing}\n              onClick={() =>\n                props.onChangeChat != null && props.onChangeChat(chat)\n              }\n            />\n          ))}\n      </List>\n    </Card>\n  );\n};\nexport default RoomList;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from '@mui/styles';\nimport { ConferenceData } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n  },\n}));\n\ntype ConferenceProps = {\n  conference: ConferenceData | null;\n  onClose: (conference: ConferenceData | null) => void;\n};\n\nconst Conference: React.FC<ConferenceProps> = ({\n  conference,\n  onClose,\n}: ConferenceProps) => {\n  const classes = useStyles();\n  const ref = React.useRef<HTMLIFrameElement>(null);\n\n  useEffect(() => {\n\n    const listener = ({ source, data }: MessageEvent) => {\n      if (source === ref.current?.contentWindow) {\n        const { type } = data;\n        if (\n          [\n            \"notSupported\",\n            \"connectionFail\",\n            // \"loginFail\",\n            \"callFail\",\n            \"hangUp\",\n            \"remoteHangUp\",\n            // \"onParticipantLeft\"\n          ].includes(type)\n        )\n          onClose(conference);\n      }\n    };\n    window.addEventListener(\"message\", listener);\n    return () => {\n      window.removeEventListener(\"message\", listener);\n    };\n  }, [conference?.id]);\n\n  return (\n    <iframe\n      title=\"conference\"\n      className={classes.root}\n      src={conference?.url}\n      allowFullScreen\n      allow=\"microphone; camera; autoplay; display-capture\"\n      ref={ref}\n    />\n  );\n};\nexport default Conference;\n","import React from \"react\";\nimport { Avatar, Button,  Paper } from \"@mui/material\";\nimport { ConferenceData, Contact } from \"../types\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  pulse: {\n    height: 100,\n    width: 100,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n    \"&::before\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\",\n    },\n    \"&::after\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\",\n      animationDelay: \"0.3s\",\n    },\n  },\n  avatar: {\n    width: \"80%\",\n    height: \"80%\",\n  },\n  footer: {\n    width: \"100%\",\n    alignSelf: \"flex-end\",\n    paddingTop: 64,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  \"@keyframes pulse\": {\n    \"0%\": {\n      transform: \"scale(0.5)\",\n      opacity: 0,\n    },\n    \"50%\": {\n      transform: \"scale(1)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(1.3)\",\n      opacity: 0,\n    },\n  },\n}));\n\ntype ConferenceCallProps = {\n  conference: ConferenceData;\n  contact: Contact;\n  apiUrl: string;\n  onAccept: (conference: ConferenceData) => void;\n};\n\nconst ConferenceCall: React.FC<ConferenceCallProps> = ({\n  conference,\n  contact,\n  apiUrl,\n  onAccept,\n}: ConferenceCallProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.pulse}>\n        {contact ? (\n          <Avatar\n            className={classes.avatar}\n            alt={contact.username}\n            src={`${apiUrl}${contact.avatar}`}\n          />\n        ) : (\n          <Avatar className={classes.avatar} />\n        )}\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => onAccept(conference)}\n        >\n          {t(\"CHAT.CONFERENCE.JOIN\")}\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n\nexport default ConferenceCall;\n","import React from \"react\";\nimport {\n  AddGroupMessages,\n  AddPrivateMessages,\n  ChatRoom,\n  Contact,\n  ContactGather,\n  Group,\n  GroupGather,\n  GroupMember,\n  GroupMessage,\n  MessageOperation,\n  PrivateMessage,\n  SetActiveRoom,\n  //SetUser,\n  SetTyping,\n  User,\n  ConferenceData,\n  GroupMap,\n} from \"../types\";\nimport { chatRoomComparer } from \"../utils/common\";\n\nexport interface ChatState {\n  tokenKey: string;\n  user: User;\n  token: string;\n  activeRoom: ChatRoom | null;\n  groupGather: GroupGather;\n  userGather: ContactGather;\n  contactGather: ContactGather;\n  operators: Contact[];\n  initialContactId: number | null;\n  conference: {\n    data: ConferenceData | null;\n    joined: boolean;\n    ringPlayed: boolean;\n  };\n  typing: SetTyping | null;\n  loading: boolean;\n  error?: string;\n}\n\nconst emptyUser: User = {\n  userId: 0,\n  username: \"\",\n  password: \"\",\n  avatar: \"\",\n  langCode: \"\",\n};\n\nconst emptyChatState: ChatState = {\n  tokenKey: \"\", // ключ, где хранить токен\n  user: emptyUser, // пользователь\n  token: \"\", // токен\n  activeRoom: null, // активная комната\n  groupGather: {}, // список групп\n  userGather: {}, // список онлайн\n  contactGather: {}, // контакты\n  operators: [], // операторы\n  initialContactId: null, // начальный контакт\n  conference: {\n    data: null, // данные конференции\n    joined: false,\n    ringPlayed: false,\n  },\n  typing: null, // кто печатает текст\n  loading: false, // загрузка данных\n  error: undefined, // ошибка\n};\n\ntype ChatActionType =\n  | \"ADD_GROUP_MEMBER\"\n  | \"ADD_GROUP_MESSAGE\"\n  | \"ADD_GROUP_MESSAGES\"\n  | \"SET_GROUP_MESSAGES\"\n  | \"ADD_PRIVATE_MESSAGE\"\n  | \"ADD_PRIVATE_MESSAGES\"\n  | \"SET_PRIVATE_MESSAGES\"\n  | \"SET_ACTIVE_ROOM\"\n  | \"UPDATE_ACTIVE_ROOM\"\n  | \"SET_GROUP_GATHER\"\n  | \"SET_CONTACT_GATHER\"\n  | \"SET_USER_GATHER\"\n  | \"DEL_GROUP\"\n  | \"DEL_GROUP_MEMBER\"\n  | \"DEL_CONTACT\"\n  | \"ADD_CONTACT_UNREAD_GATHER\"\n  | \"LOSE_CONTACT_UNREAD_GATHER\"\n  | \"ADD_GROUP_UNREAD_GATHER\"\n  | \"LOSE_GROUP_UNREAD_GATHER\"\n  | \"REVOKE_MESSAGE\"\n  | \"USER_ONLINE\"\n  | \"USER_OFFLINE\"\n  | \"UPDATE_USER_INFO\"\n  | \"SET_INITIAL_CONTACT_ID\"\n  | \"SET_CONFERENCE\"\n  | \"JOIN_CONFERENCE\"\n  | \"PAUSE_CONFERENCE\"\n  | \"STOP_CONFERENCE\"\n  | \"SET_TYPING\"\n  | \"MARK_AS_READ\"\n  | \"UPDATE_GROUP_INFO\"\n  | \"MARK_PRIVATE_MESSAGES_READ\"\n  | \"SET_LOADING\"\n  | \"SET_ERROR\"\n  | \"SET_USER\"\n  | \"SET_TOKEN\"\n  | \"CLEAR_USER\"\n  | \"CLEAR_CHAT_DATA\"\n  | \"SET_OPERATORS\";\n\ntype Action = {\n  type: ChatActionType;\n  payload?:\n  | null\n  | boolean\n  | number\n  | string\n  | Group\n  | Contact\n  | User\n  | PrivateMessage\n  | GroupMessage\n  | SetTyping\n  | MessageOperation\n  | GroupMember\n  | AddPrivateMessages\n  | AddGroupMessages\n  | SetActiveRoom\n  | ConferenceData\n  | Contact[]\n  | GroupMap;\n};\n\nconst getFreshActiveRoom = (state: ChatState) => {\n  if (state.activeRoom)\n    return (\n      state.groupGather[(state.activeRoom as Group).groupId] ||\n      state.contactGather[state.activeRoom.userId]\n    );\n  return null;\n};\n\nconst getActiveRoom = (state: ChatState) => {\n  const { activeRoom, initialContactId, contactGather } = state;\n  let newActiveRoom: ChatRoom | null = null;\n  if (initialContactId) {\n    newActiveRoom = contactGather[initialContactId];\n  } else if (activeRoom) {\n    newActiveRoom = getFreshActiveRoom(state);\n  } else {\n    // ищем комнату с самым свежим сообщением\n    const rooms = [\n      ...Object.values(state.contactGather),\n      ...Object.values(state.groupGather),\n    ].sort(chatRoomComparer);\n    if (rooms.length > 0) newActiveRoom = rooms[0];\n  }\n  return newActiveRoom;\n};\n\nconst setUserOnline = (\n  state: ChatState,\n  userId: number,\n  online: 0 | 1\n): ChatState => {\n  const newState = { ...state };\n  // Обновить статусы приватных чатов\n  if (state.contactGather[userId])\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      online,\n    };\n\n  // Обновить статус участника в группах\n  for (const group of Object.values(state.groupGather) as Group[]) {\n    if (!group.members) continue;\n    const member = group.members.find((m) => m.userId === userId);\n    if (member) {\n      const index = group.members.indexOf(member);\n      group.members[index] = { ...member, online };\n    }\n  }\n  // Обновить статус операторов\n  const idx = newState.operators.findIndex((it) => it.userId === userId);\n  if (idx !== -1)\n    newState.operators[idx] = { ...newState.operators[idx], online };\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addGroupMessage = (state: ChatState, payload: GroupMessage) => {\n  const newState = { ...state };\n  const { groupId } = payload;\n  if (newState.groupGather[groupId]) {\n    if (newState.groupGather[groupId].messages) {\n      newState.groupGather[groupId].messages = [\n        ...(newState.groupGather[groupId].messages as GroupMessage[]),\n        payload,\n      ];\n    } else {\n      newState.groupGather[groupId] = {\n        ...state.groupGather[groupId],\n        messages: [payload],\n      };\n    }\n  }\n\n  // увеличиваем счетчик новых сообщений, если это не активная комната и сообщение не от нас\n  const { activeRoom } = newState;\n  if (\n    activeRoom &&\n    (activeRoom as Group).groupId !== groupId &&\n    payload.userId !== state.user.userId\n  ) {\n    return groupUnreadGather(newState, groupId, (x?: number) => (x || 0) + 1);\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addPrivateMessage = (state: ChatState, payload: PrivateMessage) => {\n  const newState = { ...state };\n  const contactId =\n    payload.contactId === state.user.userId\n      ? payload.userId\n      : payload.contactId;\n\n  // 1 добавляем сообщение\n  if (newState.contactGather[contactId].messages) {\n    newState.contactGather[contactId].messages = [\n      ...(newState.contactGather[contactId].messages as PrivateMessage[]),\n      payload,\n    ];\n  } else {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [payload],\n    };\n  }\n\n  // 2 если это сообщение в неактивной комнате и источник не мы (в соседней вкладке), то увеличиваем счетчик непрочитанных\n  if (\n    newState.activeRoom?.userId !== contactId &&\n    payload.userId !== state.user.userId\n  ) {\n    return contactUnreadGather(\n      newState,\n      contactId,\n      (x?: number) => (x || 0) + 1\n    );\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst contactUnreadGather = (\n  state: ChatState,\n  userId: number,\n  predicate: (x?: number) => number\n) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      unreadCount: predicate(newState.contactGather[userId].unreadCount),\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst groupUnreadGather = (\n  state: ChatState,\n  groupId: number,\n  predicate: (x?: number) => number\n) => {\n  const newState = { ...state };\n\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      unreadCount: predicate(newState.groupGather[groupId].unreadCount),\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst revokeMessage = (state: ChatState, payload: MessageOperation) => {\n  const { userId } = state.user;\n  const newState = { ...state };\n  const userName =\n    payload.username || newState.userGather[payload.userId as number].username;\n  if (payload.groupId) {\n    const { messages } = newState.groupGather[payload.groupId];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find((message) => message._id === payload._id);\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName,\n        };\n      }\n    }\n  } else {\n    const { messages } =\n      newState.contactGather[\n      payload.contactId === userId\n        ? (payload.userId as number)\n        : (payload.contactId as number)\n      ];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find((message) => message._id === payload._id);\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName,\n        };\n      }\n    }\n  }\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst delContact = (state: ChatState, userId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.contactGather[userId];\n  delete newState.contactGather[userId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroup = (state: ChatState, groupId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.groupGather[groupId];\n  delete newState.groupGather[groupId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroupMember = (state: ChatState, data: GroupMap) => {\n  const newState = { ...state };\n\n  const group = newState.groupGather[data.groupId];\n  if (group) {\n    group.members = group.members?.filter((it) => it.userId !== data.userId);\n  }\n\n  return newState;\n};\n\nconst updateGroupInfo = (state: ChatState, group: Group) => {\n  const newState = { ...state };\n\n  const { groupId, name, notice } = group;\n  const info = newState.groupGather[groupId];\n  if (info) {\n    newState.groupGather[groupId] = { ...info, name, notice };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst updateUserInfo = (state: ChatState, user: User) => {\n  const newState = { ...state };\n\n  const { userId, username, avatar } = user;\n\n  if (newState.userGather[userId]) {\n    newState.userGather[userId] = {\n      ...newState.userGather[userId],\n      username,\n      avatar,\n    };\n  }\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      username,\n      avatar,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMember = (state: ChatState, payload: GroupMember) => {\n  const members: Contact[] = payload.members.map((member) => ({\n    ...member,\n    isManager: 0,\n  }));\n\n  const newState = { ...state };\n\n  if (newState.groupGather[payload.groupId].members && members) {\n    newState.groupGather[payload.groupId].members = [\n      ...(state.groupGather[payload.groupId].members as Contact[]),\n      ...members,\n    ];\n  } else {\n    newState.groupGather[payload.groupId] = {\n      ...newState.groupGather[payload.groupId],\n      members,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst markPrivateMessagesRead = (state: ChatState, userId: number) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    const updatedValue = { ...newState.contactGather[userId] };\n\n    if (updatedValue.messages) {\n      for (let i = 0; i < updatedValue.messages.length; i++)\n        updatedValue.messages[i] = {\n          ...updatedValue.messages[i],\n          status: 1,\n        };\n    }\n    newState.contactGather[userId] = updatedValue;\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addPrivateMessages = (state: ChatState, data: AddPrivateMessages) => {\n  const newState = { ...state };\n\n  const { messages, contactId } = data;\n\n  if (newState.contactGather[contactId]) {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [\n        ...messages,\n        ...(newState.contactGather[contactId].messages || []),\n      ],\n      noMoreData: messages.length < data.pageSize,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMessages = (state: ChatState, data: AddGroupMessages) => {\n  const newState = { ...state };\n\n  const { groupId, messageArr: messages, userArr: users } = data;\n\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      messages: [\n        ...messages,\n        ...(newState.groupGather[groupId].messages || []),\n      ],\n      noMoreData: messages.length < data.pageSize,\n    };\n  }\n\n  newState.userGather = { ...newState.userGather };\n  for (const user of users) {\n    if (!newState.userGather[user.userId]) {\n      newState.userGather[user.userId] = user;\n    }\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst setActiveRoom = (state: ChatState, data: SetActiveRoom) => {\n  if (state.activeRoom && data.ifNotExists) return state;\n  return {\n    ...state,\n    activeRoom: data.groupId\n      ? state.groupGather[data.groupId]\n      : data.contactId\n        ? state.contactGather[data.contactId]\n        : null,\n  };\n};\n\nconst setToken = (state: ChatState, token: string): ChatState => {\n  localStorage.setItem(state.tokenKey, token);\n  return {\n    ...state,\n    token,\n  };\n};\n\nconst clearUser = (state: ChatState): ChatState => {\n  localStorage.removeItem(state.tokenKey);\n  return {\n    ...state,\n    token: \"\",\n    user: emptyUser,\n  };\n};\n\nconst setConference = (\n  state: ChatState,\n  conference: ConferenceData\n): ChatState => {\n  return {\n    ...state,\n    conference: {\n      data: { ...conference },\n      joined: conference?.userId === state.user.userId,\n      ringPlayed: conference?.userId === state.user.userId,\n    },\n  };\n};\n\nconst pauseConference = (\n  state: ChatState,\n  conference: ConferenceData\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: {\n      data: { ...state.conference.data },\n      joined: false,\n      ringPlayed: true,\n    },\n  };\n};\n\nconst stopConference = (\n  state: ChatState,\n  conference: ConferenceData\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: { data: null, joined: false, ringPlayed: false },\n  };\n};\n\nfunction chatReducer(state: ChatState, action: Action): ChatState {\n  switch (action.type) {\n    case \"SET_GROUP_GATHER\":\n      return {\n        ...state,\n        groupGather: {\n          ...state.groupGather,\n          [(action.payload as Group).groupId]: action.payload as Group,\n        },\n      };\n    case \"SET_CONTACT_GATHER\":\n      return {\n        ...state,\n        contactGather: {\n          ...state.contactGather,\n          [(action.payload as Contact).userId]: action.payload as Contact,\n        },\n      };\n    case \"DEL_GROUP\":\n      return delGroup(state, action.payload as number);\n    case \"DEL_GROUP_MEMBER\":\n      return delGroupMember(state, action.payload as GroupMap);\n    case \"DEL_CONTACT\":\n      return delContact(state, (action.payload as Contact).userId);\n    case \"SET_USER_GATHER\":\n      return {\n        ...state,\n        userGather: {\n          ...state.userGather,\n          [(action.payload as User).userId]: action.payload as User,\n        },\n      };\n    case \"UPDATE_ACTIVE_ROOM\":\n      return { ...state, activeRoom: getActiveRoom(state) };\n    case \"SET_ACTIVE_ROOM\":\n      return setActiveRoom(state, action.payload as SetActiveRoom);\n    case \"USER_ONLINE\":\n      return setUserOnline(state, action.payload as number, 1);\n    case \"USER_OFFLINE\":\n      return setUserOnline(state, action.payload as number, 0);\n    case \"ADD_GROUP_MESSAGE\":\n      return addGroupMessage(state, action.payload as GroupMessage);\n    case \"ADD_PRIVATE_MESSAGE\":\n      return addPrivateMessage(state, action.payload as PrivateMessage);\n    case \"ADD_GROUP_UNREAD_GATHER\":\n      return groupUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1\n      );\n    case \"ADD_CONTACT_UNREAD_GATHER\":\n      return contactUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1\n      );\n    case \"SET_TYPING\":\n      return { ...state, typing: action.payload as SetTyping };\n    case \"LOSE_GROUP_UNREAD_GATHER\":\n      return groupUnreadGather(state, action.payload as number, () => 0);\n    case \"LOSE_CONTACT_UNREAD_GATHER\":\n      return contactUnreadGather(state, action.payload as number, () => 0);\n    case \"REVOKE_MESSAGE\":\n      return revokeMessage(state, action.payload as MessageOperation);\n    case \"UPDATE_GROUP_INFO\":\n      return updateGroupInfo(state, action.payload as Group);\n    case \"UPDATE_USER_INFO\":\n      return updateUserInfo(state, action.payload as User);\n    case \"ADD_GROUP_MEMBER\":\n      return addGroupMember(state, action.payload as GroupMember);\n    case \"SET_CONFERENCE\":\n      return setConference(state, action.payload as ConferenceData);\n    case \"JOIN_CONFERENCE\":\n      return {\n        ...state,\n        conference: {\n          data: { ...action.payload as ConferenceData },\n          joined: true,\n          ringPlayed: true,\n        },\n      };\n    case \"PAUSE_CONFERENCE\":\n      return pauseConference(state, action.payload as ConferenceData);\n    case \"STOP_CONFERENCE\":\n      return stopConference(state, action.payload as ConferenceData);\n    case \"MARK_PRIVATE_MESSAGES_READ\":\n      return markPrivateMessagesRead(state, action.payload as number);\n    case \"ADD_PRIVATE_MESSAGES\":\n      return addPrivateMessages(state, action.payload as AddPrivateMessages);\n    case \"ADD_GROUP_MESSAGES\":\n      return addGroupMessages(state, action.payload as AddGroupMessages);\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        loading: action.payload as boolean,\n        error: \"\",\n      };\n    case \"SET_ERROR\":\n      return {\n        ...state,\n        error: action.payload as string,\n      };\n    case \"SET_TOKEN\":\n      return setToken(state, action.payload as string);\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.payload as User,\n      };\n    case \"CLEAR_USER\":\n      return clearUser(state);\n    case \"CLEAR_CHAT_DATA\":\n      return {\n        ...state,\n        activeRoom: null,\n        groupGather: {},\n        userGather: {},\n        contactGather: {},\n        conference: {\n          data: null,\n          joined: false,\n          ringPlayed: false,\n        },\n        typing: null,\n      };\n    case \"SET_OPERATORS\":\n      return {\n        ...state,\n        operators: action.payload as Contact[],\n      };\n  }\n\n  return state;\n}\n\nexport type ChatDispatch = React.Dispatch<Action>;\nconst emptyDispatch: ChatDispatch = () => null;\n\ntype ChatProviderProps = {\n  defLang: string | undefined;\n  tokenKey: string;\n  children: JSX.Element | JSX.Element[];\n};\n\nexport const ChatContext = React.createContext({\n  state: emptyChatState,\n  dispatch: emptyDispatch,\n});\n\nexport const ChatProvider: React.FC<ChatProviderProps> = (\n  props: ChatProviderProps\n) => {\n  emptyUser.langCode = props.defLang;\n  const token = localStorage.getItem(props.tokenKey) as string;\n  const chatState: ChatState = {\n    ...emptyChatState,\n    tokenKey: props.tokenKey,\n    token,\n  };\n\n  const [state, dispatch] = React.useReducer(chatReducer, chatState);\n\n  return (\n    <ChatContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </ChatContext.Provider>\n  );\n};\n","import React, { createContext, useCallback, useContext } from \"react\";\nimport { ChatContext } from \"./ChatContext\";\nimport axios, { AxiosError, AxiosInstance } from \"axios\";\nimport { Contact, Group, PagingResponse, PrivateMessage } from \"../types\";\n\nexport interface IRestContext {\n  apiUrl: string;\n  pageSize: number;\n  fetch: AxiosInstance | null;\n  getPrivateMessages: (chat: Contact) => Promise<void>;\n  getGroupMessages: (chat: Group) => Promise<void>;\n}\nconst initialContext = {} as IRestContext;\n\nexport const RestContext: React.Context<IRestContext> = createContext(\n  initialContext\n);\n\ntype RestProviderProps = {\n  baseURLApi: string;\n  pageSize: number;\n  children: JSX.Element;\n};\n\nexport const RestProvider: React.FC<RestProviderProps> = ({\n  baseURLApi,\n  pageSize,\n  children\n}: RestProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n\n  const fetch: AxiosInstance = axios.create({\n    timeout: 60000, // Таймаут минута\n    baseURL: baseURLApi,\n    headers: {\n      \"Cache-Control\": \"no-cache\",\n      Pragma: \"no-cache\",\n      Authorization: `Bearer ${state.token}`\n    },\n    withCredentials: false\n  });\n\n  const getPrivateMessages = useCallback(\n    async (chat: Contact) => {\n      const contactId = chat.userId;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: \"SET_LOADING\", payload: true });\n        const { data } = await fetch.get(\"/contact/messages\", {\n          params: {\n            contactId,\n            current,\n            pageSize\n          }\n        });\n        if (data) {\n          dispatch({\n            type: \"ADD_PRIVATE_MESSAGES\",\n            payload: {\n              pageSize,\n              contactId,\n              messages: data as PrivateMessage[]\n            }\n          });\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: \"SET_ERROR\", payload: err.message });\n      } finally {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      }\n    },\n    [dispatch]\n  );\n\n  const getGroupMessages = useCallback(\n    async (chat: Group) => {\n      const { groupId } = chat;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: \"SET_LOADING\", payload: true });\n        const { data }: { data: PagingResponse } = await fetch.get(\n          \"/group/messages\",\n          {\n            params: {\n              groupId,\n              current,\n              pageSize\n            }\n          }\n        );\n        if (data) {\n          dispatch({\n            type: \"ADD_GROUP_MESSAGES\",\n            payload: {\n              pageSize,\n              groupId,\n              ...data\n            }\n          });\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: \"SET_ERROR\", payload: err.message });\n      } finally {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      }\n    },\n    [dispatch]\n  );\n\n  return (\n    <RestContext.Provider\n      value={{\n        apiUrl: baseURLApi,\n        pageSize,\n        fetch,\n        getPrivateMessages,\n        getGroupMessages\n      }}\n    >\n      {children}\n    </RestContext.Provider>\n  );\n};\n","import React, { createContext, useContext, useEffect } from \"react\";\nimport { Socket } from \"socket.io-client\";\nimport { useSocket } from \"../hooks/useSocket\";\nimport {\n  ChatData,\n  Contact,\n  Group,\n  GroupMessage,\n  JoinGroup,\n  MessageOperation,\n  PrivateMessage,\n  SetTyping,\n  User,\n  ConferenceData,\n  SetActiveRoom,\n  GroupMap,\n} from \"../types\";\nimport { ChatContext } from \"./ChatContext\";\n\n// Формат ответа сервера\ninterface ServerRes {\n  code: number;\n  msg: string;\n  data: unknown;\n}\n\nexport interface ISocketContext {\n  socket: Socket | null;\n  online: boolean;\n}\nconst initialContext = {\n  online: false,\n} as ISocketContext;\n\nexport const SocketContext: React.Context<ISocketContext> =\n  createContext(initialContext);\n\ntype SocketProviderProps = {\n  wsUrl: string;\n  children: JSX.Element;\n};\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({\n  wsUrl,\n  children,\n}: SocketProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n  const { socket, online, disconnectSocket, connectSocket } = useSocket(\n    wsUrl,\n    state.token\n  );\n\n  useEffect(() => {\n    if (state.token) {\n      connectSocket();\n    }\n    return () => {\n      disconnectSocket();\n    };\n  }, [state.token, connectSocket]);\n\n  useEffect(() => {\n    if (!state.token) disconnectSocket();\n  }, [state.token, disconnectSocket]);\n\n  // listen unauthorized event\n  useEffect(() => {\n    const listener = (msg: string) => {\n      console.log(\"unauthorized msg\", msg);\n      dispatch({ type: \"CLEAR_USER\" });\n    };\n\n    // attach\n    socket?.on(\"unauthorized\", listener);\n    // detatch\n    return () => {\n      socket?.off(\"unauthorized\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen chatData event\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const payload = res.data as ChatData;\n      const groupArr = payload.groupData;\n      const contactArr = payload.contactData;\n      const userArr = payload.userData;\n      dispatch({ type: \"CLEAR_CHAT_DATA\" });\n      dispatch({ type: \"SET_USER\", payload: payload.user });\n      if (groupArr.length) {\n        for (const group of groupArr) {\n          socket?.emit(\"joinGroupSocket\", {\n            groupId: group.groupId,\n          });\n          dispatch({ type: \"SET_GROUP_GATHER\", payload: group });\n        }\n      }\n      if (contactArr.length) {\n        for (const contact of contactArr) {\n          socket?.emit(\"joinPrivateSocket\", {\n            contactId: contact.userId,\n          });\n          dispatch({ type: \"SET_CONTACT_GATHER\", payload: contact });\n        }\n      }\n      dispatch({ type: \"SET_OPERATORS\", payload: payload.operatorData });\n      if (userArr.length) {\n        for (const user_ of userArr) {\n          dispatch({ type: \"SET_USER_GATHER\", payload: user_ });\n        }\n      }\n      dispatch({ type: \"UPDATE_ACTIVE_ROOM\" });\n      dispatch({type: \"SET_CONFERENCE\", payload: payload.conferenceData})\n    };\n    socket?.on(\"chatData\", listener);\n    return () => {\n      socket?.off(\"chatData\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen user online\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: \"USER_ONLINE\", payload: res.data as number });\n    };\n    socket?.on(\"userOnline\", listener);\n    return () => {\n      socket?.off(\"userOnline\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen user offline\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: \"USER_OFFLINE\", payload: res.data as number });\n    };\n    socket?.on(\"userOffline\", listener);\n    return () => {\n      socket?.off(\"userOffline\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen private socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      console.log(\"Успешно вошел в приватный чат\");\n    };\n    socket?.on(\"joinPrivateSocket\", listener);\n    return () => {\n      socket?.off(\"joinPrivateSocket\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen group socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as JoinGroup;\n      const newUser: Contact = data.user;\n      newUser.online = 1;\n      const { group } = data;\n      const groupObj = state.groupGather[group.groupId];\n      // Информация о присоединении к группе новых пользователей\n      if (\n        groupObj &&\n        !groupObj.members?.find((member) => member.userId === newUser.userId)\n      ) {\n        newUser.isManager = 0;\n        groupObj.members?.push(newUser);\n        // Vue.prototype.$message.info(res.msg);\n      }\n      dispatch({ type: \"SET_USER_GATHER\", payload: newUser });\n    };\n    socket?.on(\"joinGroupSocket\", listener);\n    return () => {\n      socket?.off(\"joinGroupSocket\", listener);\n    };\n  }, [socket?.id, state.groupGather]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMessage;\n      dispatch({ type: \"ADD_GROUP_MESSAGE\", payload: data });\n      const { activeRoom } = state;\n      if (\n        activeRoom &&\n        (activeRoom as Group).groupId === data.groupId &&\n        data.userId !== state.user.userId\n      ) {\n        socket?.emit(\"markAsRead\", {\n          groupId: data.groupId,\n          _id: data._id,\n        });\n      }\n    };\n\n    socket?.on(\"groupMessage\", listener);\n    return () => {\n      socket?.off(\"groupMessage\", listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as PrivateMessage;\n      if (\n        data.contactId === state.user.userId ||\n        data.userId === state.user.userId\n      ) {\n        dispatch({\n          type: \"ADD_PRIVATE_MESSAGE\",\n          payload: data,\n        });\n\n        // если есть активная комната и это приватная комната (!groupId && userId) с отправителем сообщения (userId)\n        if (\n          state.activeRoom &&\n          !(state.activeRoom as Group).groupId &&\n          state.activeRoom?.userId === data.userId\n        ) {\n          socket?.emit(\"markAsRead\", {\n            contactId: data.userId,\n            _id: data._id,\n          });\n        }\n      }\n    };\n\n    socket?.on(\"privateMessage\", listener);\n    return () => {\n      socket?.off(\"privateMessage\", listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      if (timer) clearTimeout(timer);\n      dispatch({ type: \"SET_TYPING\", payload: res.data as SetTyping });\n      timer = setTimeout(() => {\n        dispatch({ type: \"SET_TYPING\", payload: null });\n      }, 1000);\n    };\n    socket?.on(\"typing\", listener);\n    return () => {\n      if (timer) clearTimeout(timer);\n      socket?.off(\"typing\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      if (data.userId === state.user.userId) {\n        if (data.groupId) {\n          dispatch({\n            type: \"LOSE_GROUP_UNREAD_GATHER\",\n            payload: data.groupId,\n          });\n        } else {\n          dispatch({\n            type: \"LOSE_CONTACT_UNREAD_GATHER\",\n            payload: data.contactId,\n          });\n        }\n      } else {\n        if (data.contactId)\n          dispatch({\n            type: \"MARK_PRIVATE_MESSAGES_READ\",\n            payload: data.userId,\n          });\n      }\n    };\n    socket?.on(\"markAsRead\", listener);\n    return () => {\n      socket?.off(\"markAsRead\", listener);\n    };\n  }, [socket?.id, state.user.userId]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      dispatch({ type: \"REVOKE_MESSAGE\", payload: data });\n    };\n    socket?.on(\"revokeMessage\", listener);\n    return () => {\n      socket?.off(\"revokeMessage\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({ type: \"SET_GROUP_GATHER\", payload: res.data as Group });\n    };\n    socket?.on(\"addGroup\", listener);\n    return () => {\n      socket?.off(\"addGroup\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: \"SET_CONTACT_GATHER\", payload: data });\n      dispatch({ type: \"SET_USER_GATHER\", payload: data });\n      socket?.emit(\"joinPrivateSocket\", {\n        contactId: data.userId,\n      });\n    };\n    socket?.on(\"addContact\", listener);\n    return () => {\n      socket?.off(\"addContact\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMap;\n      if (data.userId === state.user.userId) {\n        // если удаляем себя из группы\n        dispatch({ type: \"DEL_GROUP\", payload: data.groupId });\n      } else {\n        dispatch({ type: \"DEL_GROUP_MEMBER\", payload: data });\n      }\n    };\n    socket?.on(\"deleteGroup\", listener);\n    return () => {\n      socket?.off(\"deleteGroup\", listener);\n    };\n  }, [socket?.id, state.user]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: \"DEL_CONTACT\", payload: data });\n    };\n    socket?.on(\"deleteContact\", listener);\n    return () => {\n      socket?.off(\"deleteContact\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Group;\n      dispatch({ type: \"UPDATE_GROUP_INFO\", payload: data });\n    };\n    socket?.on(\"updateGroupInfo\", listener);\n    return () => {\n      socket?.off(\"updateGroupInfo\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as User;\n      dispatch({ type: \"UPDATE_USER_INFO\", payload: data });\n    };\n    socket?.on(\"updateUserInfo\", listener);\n    return () => {\n      socket?.off(\"updateUserInfo\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const { group, user: newUser } = res.data as JoinGroup;\n\n      if (!state.groupGather[group.groupId]) {\n        console.log(\"joined to a new group\");\n        // Если группы еще у нас нет, то получаем информацию о пользователях в группе\n        socket?.emit(\"chatData\");\n      } else if (newUser.userId !== state.user.userId) {\n        // Новые пользователи присоединяются к группе\n        dispatch({\n          type: \"ADD_GROUP_MEMBER\",\n          payload: {\n            groupId: group.groupId,\n            members: [newUser],\n          },\n        });\n      }\n    };\n    socket?.on(\"joinGroup\", listener);\n    return () => {\n      socket?.off(\"joinGroup\", listener);\n    };\n  }, [socket?.id, state.user, state.groupGather]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({ type: \"SET_CONFERENCE\", payload: res.data as ConferenceData });\n    };\n    socket?.on(\"startConference\", listener);\n    return () => {\n      socket?.off(\"startConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"PAUSE_CONFERENCE\",\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on(\"pauseConference\", listener);\n    return () => {\n      socket?.off(\"pauseConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"STOP_CONFERENCE\",\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on(\"stopConference\", listener);\n    return () => {\n      socket?.off(\"stopConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n    };\n    socket?.on(\"addOperator\", listener);\n    return () => {\n      socket?.off(\"addOperator\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"SET_ACTIVE_ROOM\",\n        payload: res.data as SetActiveRoom,\n      });\n    };\n    socket?.on(\"setActiveRoom\", listener);\n    return () => {\n      socket?.off(\"setActiveRoom\", listener);\n    };\n  }, [socket?.id]);\n\n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n","import * as React from \"react\";\nimport {\n  Container,\n  Box,\n  Grid,\n\n  Snackbar,\n  useMediaQuery,\n} from \"@mui/material\";\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material/styles';\nimport { Alert } from \"@mui/lab\";\nimport { Room, RoomList, Conference } from \"../components\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { RestContext } from \"../context/RestContext\";\nimport { SocketContext } from \"../context/SocketContext\";\nimport {\n  ChatPa,\n  Group,\n  Contact,\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  ConferenceData,\n} from \"../types\";\nimport { isEmpty } from \"../utils/common\";\nimport ConferenceCall from \"../components/ConferenceCall\";\n\nconst getRingAudio = (): HTMLAudioElement => {\n  const audio = new Audio(process.env.PUBLIC_URL + \"/audio/ring-in.ogg\");\n  audio.loop = true;\n  return audio;\n};\n\nexport const ChatPage: React.FC<ChatPa> = ({\n  inModale,\n  onlyChatGroupId,\n}: ChatPa) => {\n  const useStyles = makeStyles((theme: Theme) => ({\n    root: {\n      minWidth: 640,\n      minHeight: 470,\n      height: inModale ? \"100%\" : `calc(100vh - ${theme.spacing(8)})`,\n      padding: 0,\n      [theme.breakpoints.down(\"sm\")]: {\n        height: `calc(100vh - ${theme.spacing(8)})`,\n        minWidth: 'auto',\n        minHeight: 'auto',\n        overflow: \"hidden\"\n      },\n    },\n    innerBox: {\n      height: \"100%\",\n      width: \"100%\",\n      margin: inModale ? 0 : `${theme.spacing(4)} 0`,\n      [theme.breakpoints.down(\"sm\")]: {\n        margin: 0,\n      },\n    },\n    innerGrid: {\n      height: \"100%\",\n      width: \"100%\",\n    },\n  }));\n  const classes = useStyles();\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down(\"sm\")\n  );\n\n  const { state, dispatch } = React.useContext(ChatContext);\n  const { socket } = React.useContext(SocketContext);\n\n  const { apiUrl, pageSize, getPrivateMessages, getGroupMessages } =\n    React.useContext(RestContext);\n\n  const [ringAudio] = React.useState(getRingAudio());\n\n  const onExitActiveRoom = React.useCallback(() => {\n    dispatch({\n      type: \"SET_ACTIVE_ROOM\",\n      payload: { ifNotExists: false },\n    });\n  }, [dispatch]);\n\n  const onNeedMoreMessages = React.useCallback(\n    async (chat: ChatRoom) => {\n      if ((chat as Group).groupId) await getGroupMessages(chat as Group);\n      else await getPrivateMessages(chat as Contact);\n    },\n    [getPrivateMessages, getGroupMessages]\n  );\n\n  const onMessageDelete = React.useCallback(\n    (chat: ChatRoom, message: ChatMessage) => {\n      socket?.emit(\"revokeMessage\", {\n        groupId: (chat as Group).groupId, // Идентификатор группы\n        contactId: chat.userId, // Идентификатор контакта\n        _id: message._id, // Идентификатор удаленного сообщения\n      });\n    },\n    [socket?.id]\n  );\n\n  const onTyping = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit(\"typing\", {\n        groupId: (chat as Group)?.groupId,\n        contactId: chat?.userId,\n      });\n    },\n    [socket?.id]\n  );\n\n  const onSendMessage = React.useCallback(\n    (chat: ChatRoom, data: SendMessage) => {\n      if ((chat as Group).groupId) {\n        socket?.emit(\"groupMessage\", {\n          groupId: (chat as Group)?.groupId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size,\n        });\n      } else {\n        socket?.emit(\"privateMessage\", {\n          contactId: chat?.userId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size,\n        });\n      }\n    },\n    [socket?.id]\n  );\n\n  const onChangeChat = React.useCallback(\n    (chat: ChatRoom) => {\n      dispatch({\n        type: \"SET_ACTIVE_ROOM\",\n        payload: {\n          groupId: (chat as Group)?.groupId,\n          contactId: chat?.userId,\n          ifNotExists: false,\n        },\n      });\n    },\n    [socket?.id, dispatch]\n  );\n\n  const onEnterRoom = React.useCallback(\n    (chat: ChatRoom) => {\n      if (!chat.messages || chat.messages.length === 0) return;\n      if ((chat as Group).groupId) {\n        socket?.emit(\"markAsRead\", {\n          groupId: (chat as Group).groupId,\n          _id: chat.messages[chat.messages.length - 1]._id,\n        });\n      } else {\n        socket?.emit(\"markAsRead\", {\n          contactId: chat.userId,\n          _id: chat.messages[chat.messages.length - 1]._id,\n        });\n      }\n    },\n    [socket?.id]\n  );\n\n  const onVideoCall = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit(\"startConference\", {\n        groupId: (chat as Group).groupId,\n        contactId: chat.userId,\n      });\n    },\n    [socket?.id]\n  );\n\n  const onVideoEnd = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit(\"stopConference\", {\n          id: conference?.id,\n        });\n    },\n    [socket?.id]\n  );\n\n  const onConferencePause = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit(\"pauseConference\", {\n          id: conference.id,\n        });\n    },\n    [socket?.id]\n  );\n\n  const onConferenceCallAccept = React.useCallback(\n    (conference: ConferenceData) => {\n      dispatch({ type: \"JOIN_CONFERENCE\", payload: conference });\n    },\n    [dispatch]\n  );\n\n  const onOperatorAdd = React.useCallback(\n    (group: Group, operator: Contact) => {\n      socket?.emit(\"addOperator\", {\n        groupId: group.groupId,\n        operatorId: operator.userId,\n      });\n    },\n    [socket?.id]\n  );\n\n  const onLeaveGroup = React.useCallback(\n    (group: Group) => {\n      socket?.emit(\"deleteGroup\", {\n        groupId: group.groupId,\n      });\n    },\n    [socket?.id]\n  );\n\n  const handleError = React.useCallback(() => {\n    dispatch({ type: \"SET_ERROR\" });\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    if (onlyChatGroupId != null) {\n      const onlyChat = Object.values(state.contactGather).find(\n        (item) => item.groupId === onlyChatGroupId\n      );\n\n      if (!isEmpty(onlyChat)) {\n        onChangeChat(onlyChat);\n      }\n    }\n  }, [state.contactGather]);\n\n  React.useEffect(() => {\n    if (state.conference?.data != null && !state.conference.ringPlayed)\n      ringAudio.play();\n    else ringAudio.pause();\n  }, [state.conference?.data?.id]);\n\n  //  console.log(\"state.conference\", state.conference)\n\n  const renderRoom = state.activeRoom != null && (\n    <Room\n      apiUrl={apiUrl}\n      user={state.user}\n      users={state.userGather}\n      operators={state.operators}\n      chat={state.activeRoom}\n      typing={state.typing}\n      conference={state.conference.data}\n      loading={state.loading}\n      pageSize={pageSize}\n      onExitRoom={\n        isMobile && onlyChatGroupId == null ? onExitActiveRoom : undefined\n      }\n      onEnterRoom={onEnterRoom}\n      onNeedMoreMessages={onNeedMoreMessages}\n      onMeesageDelete={onMessageDelete}\n      onTyping={onTyping}\n      onSendMessage={onSendMessage}\n      onVideoCall={onVideoCall}\n      onVideoEnd={onVideoEnd}\n      onConferencePause={onConferencePause}\n      onOperatorAdd={onOperatorAdd}\n      onLeaveGroup={onLeaveGroup}\n    />\n  );\n\n  const GetRoomList = () => (\n    <RoomList\n      apiUrl={apiUrl}\n      user={state.user}\n      activeRoom={state.activeRoom}\n      groups={Object.values(state.groupGather)}\n      contacts={Object.values(state.contactGather)}\n      typing={state.typing}\n      onChangeChat={onChangeChat}\n    />\n  );\n\n  const GetConferenceCall = () =>\n    state.conference.data && (\n      <ConferenceCall\n        apiUrl={apiUrl}\n        contact={\n          state.contactGather[\n          state.user.userId === state.conference.data.userId\n            ? state.conference.data.contactId\n            : state.conference.data.userId\n          ]\n        }\n        conference={state.conference.data}\n        onAccept={onConferenceCallAccept}\n      />\n    );\n\n  const GetConference = () => (\n    <Conference\n      conference={state.conference.data}\n      onClose={onConferencePause}\n    />\n  );\n\n  const Contacts = React.useMemo(\n    () =>\n      !isEmpty(state.conference.data) ? (\n        state.conference.joined ? (\n          <GetConference />\n        ) : (\n          <GetConferenceCall />\n        )\n      ) : (\n        <GetRoomList />\n      ),\n    [\n      state.conference?.data,\n      state.activeRoom?.groupId,\n      state.activeRoom?.userId,\n      //state.activeRoom?.messages?.length,\n      state.activeRoom?.unreadCount,\n    ]\n  );\n  const isLeftPart = onlyChatGroupId == null || !isEmpty(state.conference.data);\n\n  //console.log(\"state.conference\", state.conference)\n  return (\n    <Container maxWidth=\"lg\" className={classes.root}>\n      <Box className={classes.innerBox}>\n        {isMobile ? (\n          <>\n            {isLeftPart && Contacts}\n            {renderRoom}\n          </>\n        ) : (\n          <Grid container spacing={1} className={classes.innerGrid}>\n            {isLeftPart && (\n              <Grid item sm={4} className={classes.innerGrid}>\n                {Contacts}\n              </Grid>\n            )}\n            <Grid item sm={isLeftPart ? 8 : 12} className={classes.innerGrid}>\n              {renderRoom}\n            </Grid>\n          </Grid>\n        )}\n      </Box>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={!!state.error}\n        autoHideDuration={6000}\n        onClose={handleError}\n      >\n        <Alert onClose={handleError} severity=\"error\">\n          {state.error}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport io, { Socket } from \"socket.io-client\";\n\nexport const useSocket = (\n  url: string,\n  accessToken: string\n): {\n  socket: Socket | null;\n  online: boolean;\n  connectSocket: () => void;\n  disconnectSocket: () => void;\n} => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n\n  const connectSocket = useCallback(() => {\n    // console.log(\"do connect\");\n    const socketTemp = io(url, {\n      reconnection: true,\n      extraHeaders: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    setSocket(socketTemp);\n  }, [url, accessToken]);\n\n  const disconnectSocket = useCallback(() => {\n    // console.log(\"do disconnect\");\n    socket?.disconnect();\n    setSocket(null);\n  }, [socket]);\n\n  const [online, setOnline] = useState<boolean>(false);\n\n  useEffect(() => {\n    setOnline(socket?.connected ? true : false);\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"connect\", () => {\n      // console.log(\"connected\");\n      setOnline(true);\n      socket.emit(\"chatData\");\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"disconnect\", () => {\n      // console.log(\"disconnected\");\n      setOnline(false);\n    });\n  }, [socket]);\n\n  return {\n    socket,\n    online,\n    disconnectSocket,\n    connectSocket,\n  };\n};\n","import en from \"./en.json\";\nimport fr from \"./fr.json\";\nimport ru from \"./ru.json\";\n\nexport const chatResources = {\n  ru,\n  en,\n  fr,\n};\n"],"names":["MessageStatus","Role","ContextMenuType","useStyles","makeStyles","createStyles","item","cursor","Emoji","props","classes","emojiClick","e","onSelect","target","innerText","Item","itemProps","React.createElement","Box","m","component","onClick","className","emoji","display","flexDirection","theme","typingText","paddingLeft","spacing","typingDot","verticalAlign","width","height","margin","background","palette","primary","main","borderRadius","opacity","animation","&:nth-child(1)","animationDelay","&:nth-child(2)","&:nth-child(3)","@keyframes loadingFade","0%","50%","100%","Typing","React","Typography","color","variant","message","input","flex","inputUpload","attachmentIcon","fill","stroke","Entry","chat","t","useTranslation","useState","empjiEl","setEmojiEl","text","setText","time","lastTyping","setLastTyping","handleEmojiClose","sendMessage","data","onSendMessage","submit","trim","length","messageType","emojiOpen","Boolean","enojiId","undefined","TextField","placeholder","autoFocus","InputProps","disableUnderline","startAdornment","InputAdornment","position","accept","id","type","onChange","event","currentTarget","files","file","includes","image","Image","url","window","URL","webkitURL","src","createObjectURL","onload","imageSize","fileName","name","size","htmlFor","IconButton","aria-label","SvgIcon","d","strokeWidth","strokeLinecap","strokeLinejoin","aria-describedby","InsertEmoticon","endAdornment","edge","preventDefault","Send","value","onTyping","Date","now","onKeyPress","key","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","isEmpty","Object","keys","formatTime","moment","add","startOf","isAfter","format","getChatId","groupId","userId","getChatName","username","chatRoomComparer","a","b","hasMessagesA","Array","isArray","messages","hasMessagesB","cdate","getTime","fileIcon","fontSize","fileBody","File","meta","content","split","date","getFileMeta","idx","lastIndexOf","ext","slice","splitFileName","Avatar","toUpperCase","mediaContent","maxWidth","maxHeight","Video","apiUrl","isConference","JSON","parse","visitId","controls","muted","breakpoints","down","viewerVisible","setViewerVisible","getImageMeta","Fragment","Viewer","zIndex","visible","changeable","images","MessageContent","rootContact","& span","float","& $message","backgroundColor","& $lastMessage","borderBottomLeftRadius","rootUser","justifyContent","contrastText","borderBottomRightRadius","rootNotify","& > *","padding","fontWeight","lastMessage","flexWrap","header","overflow","body","wordBreak","status","alignSelf","statusImage","marginRight","Message","owner","refOnLastMess","user","isGroupMessage","isUserFirst","isUserLast","ListItem","Alert","severity","ref","isRevoke","align","revokeUserName","isMine","onContextMenu","child","Link","underline","href","download","wrapMessage","React.Fragment","Done","DoneAll","ContactStatus","isTyping","contact","online","star","ContactList","List","contacts","map","button","ListItemAvatar","alt","avatar","ListItemText","StarIcon","secondary","AddContact","Dialog","aria-labelledby","DialogTitle","popover","pointerEvents","paper","avatarGroup","getGroupStatus","group","members","_group$members","onlineCount","reduce","sum","push","join","RoomHeader","typing","conference","operators","onVideoCall","onVideoEnd","onConferencePause","onOperatorAdd","onLeaveGroup","setAnchorEl","addOperatorOpen","setAddOperatorOpen","CardHeader","title","subheader","handlePopoverClose","GroupIcon","aria-owns","aria-haspopup","onMouseEnter","onMouseLeave","disableRestoreFocus","action","role","PersonAddIcon","operator","_group$members2","find","it","DeleteIcon","contactId","console","log","Button","disabled","startIcon","CallEndIcon","style","marginLeft","VideoCallIcon","root","minWidth","inline","messageListOuter","overflowY","scrollbarWidth","scrollbarColor","&::-webkit-scrollbar, & *::-webkit-scrollbar","&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb","border","&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus","&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active","&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover","&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner","messageList","roomHeader","roomProgress","flexAll","flexEnd","initialMenuState","mouseX","mouseY","canCopy","canDelete","initialScrollState","autoScroll","Room","users","loading","pageSize","scrollState","setScrollState","messageCount","useRef","refList","menuState","setMenuState","useEffect","onEnterRoom","useLayoutEffect","current","scrollIntoView","scrollTop","scrollHeight","onScroll","useCallback","noMoreData","_context","onNeedMoreMessages","handleCopy","navigator","clipboard","writeText","handleDelete","onMeesageDelete","Card","elevation","onExitRoom","ArrowBackIcon","CircularProgress","Divider","CardContent","inx","_id","clientX","clientY","handleMenuPopup","Menu","keepMounted","anchorReference","anchorPosition","top","left","MenuItem","ListItemIcon","FileCopyIcon","whiteSpace","textOverflow","unread","TypingBadge","withStyles","badge","boxShadow","&::after","@keyframes ripple","transform","Badge","OnlineBadge","RoomListItem","roomName","overlap","contactAvatar","roomText","getMessageText","roomTime","selected","active","secondaryTypographyProps","unreadCount","Chip","label","searchField","filterChats","chats","filter","lowerFilter","toLowerCase","indexOf","sortChats","groups","roomArr","sort","topChatId","localStorage","getItem","c","k","isTop","unshift","RoomList","setChats","fullWidth","activeRoom","onChangeChat","Conference","listener","source","_ref$current","contentWindow","addEventListener","removeEventListener","allowFullScreen","allow","alignItems","pulse","&::before","footer","paddingTop","@keyframes pulse","ConferenceCall","onAccept","Paper","emptyUser","password","langCode","emptyChatState","tokenKey","token","groupGather","userGather","contactGather","initialContactId","joined","ringPlayed","error","getFreshActiveRoom","state","getActiveRoom","newActiveRoom","rooms","values","setUserOnline","newState","member","index","findIndex","contactUnreadGather","predicate","groupUnreadGather","chatReducer","payload","updateActiveRoom","delGroup","delGroupMember","delContact","ifNotExists","setActiveRoom","x","addGroupMessage","addPrivateMessage","userName","msg","revokeMessage","info","notice","updateGroupInfo","updateUserInfo","isManager","addGroupMember","setConference","pauseConference","stopConference","updatedValue","i","markPrivateMessagesRead","addPrivateMessages","messageArr","userArr","addGroupMessages","setItem","setToken","removeItem","clearUser","ChatContext","createContext","dispatch","RestContext","SocketContext","audio","inModale","onlyChatGroupId","minHeight","innerBox","innerGrid","isMobile","useMediaQuery","socket","getPrivateMessages","getGroupMessages","ringAudio","Audio","process","env","PUBLIC_URL","loop","onExitActiveRoom","onMessageDelete","emit","onConferenceCallAccept","operatorId","handleError","onlyChat","pause","play","_state$conference2","_state$conference2$da","renderRoom","GetRoomList","GetConferenceCall","GetConference","Contacts","_state$conference3","_state$activeRoom","_state$activeRoom2","_state$activeRoom3","isLeftPart","Container","Grid","container","sm","Snackbar","autoHideDuration","defLang","chatState","useReducer","Provider","children","baseURLApi","useContext","fetch","axios","create","timeout","baseURL","headers","Cache-Control","Pragma","Authorization","withCredentials","_chat$messages","get","params","_chat$messages2","_context2","wsUrl","accessToken","setSocket","connectSocket","socketTemp","io","reconnection","extraHeaders","disconnectSocket","disconnect","setOnline","connected","on","useSocket","off","res","code","groupArr","groupData","contactArr","contactData","userData","operatorData","conferenceData","newUser","groupObj","_groupObj$members","timer","clearTimeout","setTimeout","ru","en","fr"],"mappings":"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"}