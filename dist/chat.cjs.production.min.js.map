{"version":3,"file":"chat.cjs.production.min.js","sources":["../src/types/index.ts","../src/components/Emoji.tsx","../src/components/Typing.tsx","../src/components/Entry.tsx","../src/components/ContactStatus.tsx","../src/utils/common.ts","../src/components/ContactList.tsx","../src/components/AddContact.tsx","../src/components/AlertDialog.tsx","../src/components/ConferenceTime.tsx","../src/hooks/useCounter.ts","../src/components/RoomHeader.tsx","../src/components/MessageContent/File.tsx","../src/components/MessageContent/Video.tsx","../src/components/MessageContent/Image.tsx","../src/components/MessageContent/index.tsx","../src/components/styles.ts","../src/components/Message.tsx","../src/components/RoomMessageList.tsx","../src/components/Room.tsx","../src/components/RoomListItem.tsx","../src/components/RoomList.tsx","../src/components/Conference.tsx","../src/components/ConferenceCall.tsx","../src/context/ChatContext.tsx","../src/context/RestContext.tsx","../src/context/SocketContext.tsx","../src/hooks/useSocket.ts","../src/components/CheckAudiVideoPerm.tsx","../src/components/Alert.tsx","../src/pages/chat.tsx","../src/translations/index.ts","../src/context/LanguageContext.tsx","../src/components/ChatIndex/index.tsx"],"sourcesContent":["export interface ChatProps {\n  activeGroupId?: number;\n  activeChatUserId?: number;\n  lang: 'ru' | 'en' | 'fr';\n  chatBaseURLApi: string;\n  chatWsUrl: string;\n  chatWsPath: string;\n  inModale?: boolean;\n  token: string;\n}\nexport interface ChatPageProps {\n  activeGroupId?: number;\n  activeChatUserId?: number;\n  inModale?: boolean;\n}\n\n// Тип сообщения\nexport type MessageType =\n  | 'text'\n  | 'image'\n  | 'file'\n  | 'video'\n  | 'notify'\n  | 'video_conference';\n\nexport enum MessageStatus {\n  sent = 0,\n  read = 1,\n}\n\nexport enum Role {\n  Unknown = 0,\n  Client = 1,\n  Agent = 2,\n  Specialist = 3,\n  Operator = 4,\n}\n\nexport interface User {\n  userId: number;\n  username: string;\n  password: string;\n  avatar: string;\n  role?: Role;\n  online?: 1 | 0; // В сети\n  langCode?: string;\n}\n\n// Приватные сообщения\nexport interface PrivateMessage {\n  _id?: number;\n  userId: number;\n  contactId: number;\n  content: string;\n  messageType: MessageType;\n  status: MessageStatus;\n  cdate: string;\n  type?: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Контакт\nexport interface Contact {\n  userId: number;\n  groupId?: number;\n  username: string;\n  avatar?: string;\n  role?: Role;\n  messages?: PrivateMessage[];\n  unreadCount?: number;\n  isTop?: boolean;\n  online?: 1 | 0;\n  isManager?: 1 | 0;\n  noMoreData?: boolean;\n}\n\n// Информация о друзьях\nexport interface ContactGather {\n  [userId: number]: Contact;\n}\n\n// Групповое сообщение\nexport interface GroupMessage {\n  _id?: number;\n  userId: number;\n  groupId: number;\n  content: string;\n  messageType: MessageType;\n  cdate: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Группа\nexport interface Group {\n  groupId: number;\n  userId: number; // владелец\n  name: string;\n  notice: string;\n  messages?: GroupMessage[];\n  unreadCount?: number;\n  cdate: string;\n  isTop?: boolean;\n  members?: Contact[];\n  noMoreData?: boolean;\n}\n\n// Группы\nexport interface GroupGather {\n  [groupId: number]: Group;\n}\n\n// Ассоциации групп и пользователей\nexport interface GroupMap {\n  groupId: number;\n  userId: number;\n}\n\n// Ассоциации пользователей и друзей\nexport interface ContactMap {\n  contactId: number;\n  userId: number;\n}\n\nexport interface SendMessage {\n  message: string | File;\n  width?: number;\n  height?: number;\n  fileName?: string;\n  messageType: MessageType[0] | MessageType[1];\n  size?: number;\n}\n\n// Размер изображения\nexport interface ImageSize {\n  width: number;\n  height: number;\n}\n\n// Непрочитанные сообщения\nexport interface UnReadGather {\n  [key: string]: number;\n}\n\n// Получить сообщения постранично\nexport interface PagingParams {\n  groupId?: number;\n  userId?: number;\n  contactId?: number;\n  current: number;\n  pageSize: number;\n}\n\n// Постраничный ответ для групповых сообщений\nexport interface PagingResponse {\n  // messageArr: GroupMessage[]; - fix on messages\n  messages: GroupMessage[];\n  userArr: User[];\n}\n\nexport interface ContactUserMap {\n  contactId: number;\n  contactUserName: string;\n}\n\n// информация о том, что контакт печатает текст\nexport interface SetTyping {\n  userId?: number;\n  groupId?: number;\n  contactId?: number;\n}\n\n// Операция с сообщением\nexport interface MessageOperation {\n  userId?: number;\n  username: string;\n  groupId?: number;\n  contactId?: number;\n  _id: number;\n}\n\n// Данные конференции\nexport interface ConferenceData {\n  userId: number;\n  contactId: number;\n  id: string;\n  url?: string;\n  serverAddress?: string;\n  user?: string;\n  password?: string;\n  currentDate?: Date;\n  finishDate?: Date;\n}\n\n// Данные чата\nexport interface ChatData {\n  user: User;\n  groupData: Group[];\n  contactData: Contact[];\n  userData: User[];\n  operatorData: Contact[];\n  conferenceData: ConferenceData;\n}\n\nexport interface GroupMember {\n  groupId: number;\n  members: Contact[];\n}\n\nexport interface AddPrivateMessages {\n  pageSize: number;\n  contactId: number;\n  messages: PrivateMessage[];\n}\n\nexport interface AddGroupMessages extends PagingResponse {\n  pageSize: number;\n  groupId: number;\n}\n\nexport interface SetActiveRoom {\n  groupId?: number;\n  contactId?: number;\n}\n\nexport interface JoinGroup {\n  group: Group;\n  user: Contact;\n}\n\nexport interface SetUser {\n  user: User;\n  token: string;\n}\n\nexport type ChatRoom = Group | Contact;\nexport type ChatMessage = GroupMessage | PrivateMessage;\n\n// Операции контекстного меню\nexport enum ContextMenuType {\n  COPY = 'COPY', // Скопировать\n  REVOKE = 'REVOKE', // Удалить сообщение\n  TOP_REVERT = 'TOP_REVERT', // Открепить\n  TOP = 'TOP', // Закрепить\n  READ = 'READ', // Прочесть всё\n  DELETE = 'DELETE', // Удалить\n}\n","import * as React from \"react\";\nimport { Box,  } from \"@mui/material\";\nimport { makeStyles,createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    item: {\n      cursor: \"pointer\",\n    },\n  })\n);\n\ntype EmojiProps = {\n  onSelect?: (emoji: string) => void;\n};\n\ntype EmojiItemProps = {\n  emoji: string;\n};\n\nconst Emoji: React.FC<EmojiProps> = (props: EmojiProps) => {\n  const classes = useStyles();\n  const emojiClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (props.onSelect) {\n      props.onSelect((e.target as HTMLDivElement).innerText);\n    }\n  };\n\n  const Item = (itemProps: EmojiItemProps) => {\n    return (\n      <Box\n        m={0.5}\n        component=\"span\"\n        onClick={emojiClick}\n        className={classes.item}\n      >\n        {itemProps.emoji}\n      </Box>\n    );\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😃\" />\n        <Item emoji=\"😁\" />\n        <Item emoji=\"😂\" />\n        <Item emoji=\"😄\" />\n        <Item emoji=\"😅\" />\n        <Item emoji=\"😆\" />\n        <Item emoji=\"😇\" />\n        <Item emoji=\"😈\" />\n        <Item emoji=\"😉\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😊\" />\n        <Item emoji=\"😋\" />\n        <Item emoji=\"😌\" />\n        <Item emoji=\"😍\" />\n        <Item emoji=\"😎\" />\n        <Item emoji=\"😏\" />\n        <Item emoji=\"😐\" />\n        <Item emoji=\"😒\" />\n        <Item emoji=\"😓\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"❓\" />\n        <Item emoji=\"😕\" />\n        <Item emoji=\"😖\" />\n        <Item emoji=\"😗\" />\n        <Item emoji=\"😘\" />\n        <Item emoji=\"😙\" />\n        <Item emoji=\"😚\" />\n        <Item emoji=\"😜\" />\n        <Item emoji=\"😝\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😞\" />\n        <Item emoji=\"😟\" />\n        <Item emoji=\"😠\" />\n        <Item emoji=\"😡\" />\n        <Item emoji=\"😢\" />\n        <Item emoji=\"😣\" />\n        <Item emoji=\"😤\" />\n        <Item emoji=\"😥\" />\n        <Item emoji=\"😦\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😨\" />\n        <Item emoji=\"😩\" />\n        <Item emoji=\"😪\" />\n        <Item emoji=\"😫\" />\n        <Item emoji=\"😬\" />\n        <Item emoji=\"😭\" />\n        <Item emoji=\"😮\" />\n        <Item emoji=\"😯\" />\n        <Item emoji=\"😰\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😲\" />\n        <Item emoji=\"😳\" />\n        <Item emoji=\"😴\" />\n        <Item emoji=\"😵\" />\n        <Item emoji=\"🧐\" />\n        <Item emoji=\"😷\" />\n        <Item emoji=\"🙁\" />\n        <Item emoji=\"🙂\" />\n        <Item emoji=\"🙃\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤐\" />\n        <Item emoji=\"🤑\" />\n        <Item emoji=\"🤒\" />\n        <Item emoji=\"🤓\" />\n        <Item emoji=\"🤔\" />\n        <Item emoji=\"🤕\" />\n        <Item emoji=\"🤠\" />\n        <Item emoji=\"🤡\" />\n        <Item emoji=\"🤢\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤤\" />\n        <Item emoji=\"🤥\" />\n        <Item emoji=\"🤧\" />\n        <Item emoji=\"🤨\" />\n        <Item emoji=\"🤩\" />\n        <Item emoji=\"🤪\" />\n        <Item emoji=\"🤫\" />\n        <Item emoji=\"🤬\" />\n        <Item emoji=\"🤭\" />\n      </Box>\n    </Box>\n  );\n};\nexport default Emoji;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typingText: {\n      paddingLeft: theme.spacing(0.5),\n    },\n    typingDot: {\n      display: \"inline-block\",\n      verticalAlign: \"middle\",\n      width: 4,\n      height: 4,\n      margin: \"0px 2px\",\n      background: theme.palette.primary.main,\n      borderRadius: \"50%\",\n      opacity: \"0\",\n      animation: \"$loadingFade 1s infinite\",\n      \"&:nth-child(1)\": {\n        animationDelay: \"0s\",\n      },\n      \"&:nth-child(2)\": {\n        animationDelay: \"0.2s\",\n      },\n      \"&:nth-child(3)\": {\n        animationDelay: \"0.4s\",\n      },\n    },\n    \"@keyframes loadingFade\": {\n      \"0%\": {\n        opacity: 0,\n      },\n      \"50%\": {\n        opacity: 0.8,\n      },\n      \"100%\": {\n        opacity: 0,\n      },\n    },\n  })\n);\n\ntype TypingProps = {\n  message: string;\n};\n\nconst Typing: React.FC<TypingProps> = (props: TypingProps) => {\n  const classes = useStyles();\n  return (\n    <Typography color=\"primary\" variant=\"body2\" component=\"span\">\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingText}>{props.message}</span>\n    </Typography>\n  );\n};\nexport default Typing;\n","import React, { ChangeEvent, KeyboardEvent } from \"react\";\nimport {\n  Box,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Popover,\n  SvgIcon\n} from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { Send, InsertEmoticon } from \"@mui/icons-material\";\nimport Emoji from \"./Emoji\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatRoom, ImageSize, SendMessage } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    flex: \"auto\"\n  },\n  inputUpload: {\n    display: \"none\"\n  },\n  attachmentIcon: {\n    fill: \"none\",\n    stroke: \"currentColor\"\n  }\n}));\n\ntype EntryProps = {\n  chat: ChatRoom | null;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n};\n\n/**\n * Рассчитать пропорции изображения\n */\nconst getImageSize = (data: ImageSize) => {\n  let { width, height } = data;\n  if (width > 335 || height > 335) {\n    if (width > height) {\n      height = 335 * (height / width);\n      width = 335;\n    } else {\n      width = 335 * (width / height);\n      height = 335;\n    }\n  }\n  return {\n    width,\n    height\n  };\n};\n\nconst Entry: React.FC<EntryProps> = (props: EntryProps) => {\n  const classes = useStyles();\n  const { chat } = props;\n\n  const { t } = useTranslation();\n\n  const [empjiEl, setEmojiEl] = React.useState<HTMLButtonElement | null>(null);\n  const [text, setText] = React.useState(\"\");\n  const [lastTyping, setLastTyping] = React.useState({\n    chat,\n    time: 0\n  });\n\n  const handleEmojiClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setEmojiEl(event.currentTarget);\n  };\n\n  const handleEmojiClose = () => {\n    setEmojiEl(null);\n  };\n\n  const emojiSelect = (emoji: string) => {\n    setText(`${text}${emoji}`);\n    handleEmojiClose();\n  };\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setText(target.value);\n    if (\n      chat &&\n      props.onTyping &&\n      (lastTyping.chat !== chat || Date.now() - lastTyping.time >= 500)\n    ) {\n      setLastTyping({\n        chat,\n        time: Date.now()\n      });\n      props.onTyping(chat);\n    }\n  };\n\n  const sendMessage = (data: SendMessage) => {\n    if (chat && props.onSendMessage) props.onSendMessage(chat, data);\n  };\n\n  const submit = () => {\n    if (text.trim().length === 0) {\n      return;\n    }\n\n    sendMessage({ message: text, messageType: \"text\" });\n    setText(\"\");\n  };\n\n  const onSubmitClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    submit();\n  };\n\n  const onKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      submit();\n    }\n  };\n\n  const onSubmitFile = (event: React.FormEvent<HTMLInputElement>) => {\n    if (!event.currentTarget.files) return;\n    const file = event.currentTarget.files[0];\n    let messageType: string;\n    if (file.type.includes(\"image\")) {\n      messageType = \"image\";\n    } else if (file.type.includes(\"video\")) {\n      messageType = \"video\";\n    } else {\n      messageType = \"file\";\n    }\n    if (messageType === \"image\") {\n      const image = new Image();\n      const url = window.URL || window.webkitURL;\n      image.src = url.createObjectURL(file);\n      image.onload = () => {\n        const imageSize: ImageSize = getImageSize({\n          width: image.width,\n          height: image.height\n        });\n        sendMessage({\n          message: file,\n          width: imageSize.width,\n          height: imageSize.height,\n          messageType\n        });\n      };\n    } else {\n      sendMessage({\n        message: file,\n        messageType,\n        fileName: file.name,\n        size: file.size\n      });\n    }\n  };\n\n  const emojiOpen = Boolean(empjiEl);\n  const enojiId = emojiOpen ? \"simple-popover\" : undefined;\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <TextField\n        className={classes.input}\n        placeholder={t(\"CHAT.INPUT_MESSAGE\") || \"\"}\n        autoFocus={true}\n        variant=\"standard\"\n        InputProps={{\n          disableUnderline: true,\n          startAdornment: (\n            <InputAdornment position={\"start\"}>\n              <input\n                accept=\".pdf,.jpg,.jpeg,.bmp,.gif,.png,application/pdf,image/jpeg,image/bmp,image/gif,image/png\"\n                className={classes.inputUpload}\n                id=\"icon-button-file\"\n                type=\"file\"\n                onChange={onSubmitFile}\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload\"\n                  component=\"span\"\n                  size=\"small\"\n                >\n                  <SvgIcon fill=\"none\" className={classes.attachmentIcon}>\n                    <path\n                      d=\"M16.768 13.5767L11.6961 18.6486C9.35886 20.9859 5.56937 20.9859 3.23208 18.6486V18.6486C0.894789 16.3114 0.894789 12.5219 3.23208 10.1846L10.4479 2.96872C12.0875 1.32914 14.7458 1.32914 16.3854 2.96873V2.96873C18.025 4.60831 18.025 7.26659 16.3854 8.90617L9.16515 16.1264C8.23032 17.0612 6.71466 17.0612 5.77982 16.1264V16.1264C4.84499 15.1916 4.84499 13.6759 5.77982 12.7411L10.8896 7.63131\"\n                      strokeWidth=\"1.6\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </SvgIcon>\n                </IconButton>\n              </label>{\" \"}\n              <IconButton\n                aria-describedby={enojiId}\n                onClick={handleEmojiClick}\n                color=\"primary\"\n                size=\"small\"\n              >\n                <InsertEmoticon />\n              </IconButton>\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={onSubmitClick}\n            >\n              <Send />\n            </IconButton>\n          )\n        }}\n        value={text}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n      />\n      <Popover\n        id={enojiId}\n        open={emojiOpen}\n        anchorEl={empjiEl}\n        onClose={handleEmojiClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n      >\n        <Emoji onSelect={emojiSelect} />\n      </Popover>\n    </Box>\n  );\n};\nexport default Entry;\n","import React from 'react';\nimport { Typography } from '@mui/material';\nimport Typing from './Typing';\nimport { useTranslation } from 'react-i18next';\nimport { Contact } from '../types';\n\ntype ContactStatusProps = {\n  contact: Contact;\n  isTyping: boolean;\n};\n\nconst ContactStatus: React.FC<ContactStatusProps> = (\n  props: ContactStatusProps,\n) => {\n  const { t } = useTranslation();\n\n  if (props.isTyping)\n    return <Typing message={t('CHAT.STATUS.TYPING')} />;\n  if (props.contact.online === 1)\n    return (\n      <Typography variant=\"body2\" color=\"primary\" component=\"span\">\n        {t('CHAT.STATUS.ONLINE')}\n      </Typography>\n    );\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"textSecondary\"\n      component=\"span\"\n    >\n      {t('CHAT.STATUS.OFFLINE')}\n    </Typography>\n  );\n};\n\nexport default ContactStatus;\n","import dayjs from \"dayjs\";\nimport { ChatRoom, Contact, ContactGather, Group, GroupGather } from \"../types\";\n\nexport function isEmpty(value: unknown): boolean {\n  return (\n    value == null ||\n    (typeof value === \"object\" && Object.keys(value).length === 0) ||\n    (typeof value === \"string\" && value.trim().length === 0)\n  );\n}\n\n// string contains string\nexport function isContainStr(str1: string, str2: string): boolean {\n  return str2.indexOf(str1) >= 0;\n}\n\n/**\n * check URL\n * @param text\n */\nexport function isUrl(text: string): boolean {\n  // parse url\n  const UrlReg = new RegExp(/http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?/);\n  return UrlReg.test(text);\n}\n\n/**\n * Формитирование времени сообщения\n * @param time\n */\nexport function formatTime(time: Date | string | undefined) {\n  if (typeof time === \"undefined\") return null;\n  if (typeof time === \"string\") time = new Date(time);\n  // больше чем вчера\n  if (\n    dayjs()\n      .add(-1, \"days\")\n      .startOf(\"day\")\n      .isAfter(time)\n  ) {\n    return dayjs(time).format(\"DD.MM.YYYY HH:mm\");\n  }\n  // вчера\n  if (\n    dayjs()\n      .startOf(\"day\")\n      .isAfter(time)\n  ) {\n    return `Вчера в ${dayjs(time).format(\"HH:mm\")}`;\n  }\n\n  return dayjs(time).format(\"HH:mm\");\n}\n\n/**\n * Раскрыть содержимое\n * @param content - данные в строке\n */\nexport function getFileMeta(\n  content: string\n): {\n  date: string;\n  userId: string;\n  size: string;\n  name: string;\n} {\n  // Формат  [date]$[userId]$[size]$[fileName]\n  // Например fileName = 1606980397047$1a01e20f-3780-4227-84b5-5c69ca766ee5$15.41KB$123.docx\n  const meta = content.split(\"$\");\n  const [date, userId, size, name] = meta;\n  return {\n    date,\n    userId,\n    size,\n    name\n  };\n}\n\nexport function getImageMeta(\n  content: string\n): {\n  date: string;\n  userId: string;\n  width: string;\n  height: string;\n} {\n  // Формат [date]$[userId]$[width]$[height]$...\n  const meta = content.split(\"$\");\n  const [date, userId, width, height] = meta;\n  return {\n    date,\n    userId,\n    width,\n    height\n  };\n}\n\nexport function splitFileName(name: string): { name: string; ext: string } {\n  const idx = name.lastIndexOf(\".\");\n  if (idx === -1)\n    return {\n      name,\n      ext: \"\"\n    };\n  return {\n    name: name.slice(0, idx),\n    ext: name.slice(idx + 1)\n  };\n}\n\nexport const getChatId = (chat: ChatRoom | null): string | null => {\n  if (!chat) return null;\n  return (chat as Group).groupId\n    ? `group:${(chat as Group).groupId}`\n    : `user:${chat.userId}`;\n};\n\nexport const getChatName = (chat: ChatRoom): string => {\n  return (chat as Group).groupId\n    ? (chat as Group).name\n    : (chat as Contact).username;\n};\n\nexport const allMessCount = (chats: GroupGather | ContactGather) => {\n  return Object.values(chats)\n    .map(it => (it?.messages != null ? it?.messages.length : 0))\n    .reduce((a: number, b: number) => a + b, 0);\n};\n\nexport const chatRoomComparer = (a: ChatRoom, b: ChatRoom): number => {\n  const hasMessagesA = Array.isArray(a.messages) && a.messages.length > 0;\n  const hasMessagesB = Array.isArray(b.messages) && b.messages.length > 0;\n  if (\n    hasMessagesA &&\n    hasMessagesB &&\n    b.messages != null &&\n    a.messages != null\n  ) {\n    // !!! if cdate === undefined !!!\n    const bb =\n      b.messages[b.messages.length - 1].cdate != null\n        ? new Date(b.messages[b.messages.length - 1].cdate).getTime()\n        : new Date().getTime();\n\n    const aa =\n      a.messages[a.messages.length - 1].cdate != null\n        ? new Date(a.messages[a.messages.length - 1].cdate).getTime()\n        : new Date().getTime() - 1;\n    const res = bb - aa;\n\n    //console.log('res', res);\n    return res;\n  }\n  if (hasMessagesA) {\n    return -1;\n  }\n  return 1;\n};\n\nexport const getParam = (param: string) => {\n  const QueryString = window.location.search;\n  const urlParams = new URLSearchParams(QueryString);\n  return urlParams.get(param);\n};\n\nexport const combineURLs = (baseURL: string, relativeURL: string, queryParams?: Record<string, string>): string => {\n  const url = relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n  if (!queryParams) return url;\n\n  return url + (url.includes('?') ? '&' : '?') + new URLSearchParams(queryParams).toString();\n}\n","import React from \"react\";\nimport {\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@mui/material\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport ContactStatus from \"./ContactStatus\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Contact } from \"../types\";\nimport { combineURLs } from \"../utils/common\";\n\nconst useStyles = makeStyles(() => ({\n  star: {\n    fontSize: \"0.85rem\",\n    verticalAlign: \"middle\",\n  },\n}));\n\ntype ContactListProps = {\n  apiUrl: string;\n  contacts: Contact[];\n  owner?: number;\n  onClick?: (contact: Contact) => void;\n};\n\nconst ContactList: React.FC<ContactListProps> = (props: ContactListProps) => {\n  const classes = useStyles();\n  const { apiUrl, contacts, owner } = props;\n\n  return (\n    <List aria-label=\"contacts\">\n      {contacts.map((contact) => (\n        <ListItem\n          button\n          key={contact.userId}\n          onClick={() => props.onClick && props.onClick(contact)}\n        >\n          <ListItemAvatar>\n            <Avatar alt={contact.username} src={contact.avatar ? combineURLs(apiUrl, contact.avatar) : \"\"} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={\n              <span>\n                {contact.username}{\" \"}\n                {owner === contact.userId && (\n                  <StarIcon className={classes.star} color=\"primary\" />\n                )}\n              </span>\n            }\n            secondary={<ContactStatus contact={contact} isTyping={false} />}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\nexport default ContactList;\n","import { Dialog, DialogTitle } from \"@mui/material\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"../types\";\nimport ContactList from \"./ContactList\";\n\ninterface AddContactProps {\n  open: boolean;\n  apiUrl: string;\n  contacts: Contact[];\n  onClose: (value?: Contact) => void;\n}\n\nconst AddContact: React.FC<AddContactProps> = (\n  props: AddContactProps\n) => {\n  const { onClose, open, apiUrl, contacts } = props;\n  const { t } = useTranslation();\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleListItemClick = (contact: Contact) => {\n    onClose(contact);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"add-contact-title\"\n      open={open}\n    >\n      <DialogTitle id=\"switch-operator-title\">\n        {t(\"CHAT.ADD_CONTACT\")}\n      </DialogTitle>\n      <ContactList\n        apiUrl={apiUrl}\n        contacts={contacts}\n        onClick={handleListItemClick}\n      />\n    </Dialog>\n  );\n};\n\nexport default AddContact;","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport {\n  Alert,\n  Dialog,\n  DialogContent,\n  Slide,\n  Button,\n  DialogActions,\n  Typography,\n  AlertColor,\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\nimport { TransitionProps } from '@mui/material/transitions';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ntype AlertDialogProps = {\n  children: JSX.Element | JSX.Element[] | string;\n  open: boolean;\n  setOpen: (value: boolean) => void;\n  severity: AlertColor;\n};\n\nexport default function AlertDialog({\n  children,\n  open,\n  setOpen,\n  severity = 'warning',\n}: AlertDialogProps) {\n  const { t } = useTranslation();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogContent>\n        <Alert severity={severity}>\n          {typeof children === 'string' ? (\n            <Typography variant=\"body2\">{children}</Typography>\n          ) : (\n            children\n          )}\n        </Alert>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} variant=\"text\">\n          {t('CHAT.BUT_CLOSE')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport useCounter from \"../hooks/useCounter\";\nimport AlertDialog from \"./AlertDialog\";\nimport { useTranslation } from \"react-i18next\";\n//import { useTranslation } from \"react-i18next\";\n\nconst hhMmSs = (totalSeconds: number) => {\n  const hours = Math.floor(totalSeconds / 3600);\n  const strHours = hours < 10 ? `0${hours}` : hours;\n  totalSeconds %= 3600;\n  const minutes = Math.floor(totalSeconds / 60);\n  const strMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const seconds = totalSeconds % 60;\n  const strSeconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  const strTime = `${strHours}:${strMinutes}:${strSeconds}`;\n  return { hours, minutes, seconds, strTime };\n};\ntype AlertModaleProps = {\n  modaleInfo: boolean;\n  setModaleInfo: (vars: boolean) => void;\n  strTime: string;\n};\nconst AlertModale: React.FC<AlertModaleProps> = ({\n  modaleInfo,\n  setModaleInfo,\n  strTime\n}) => {\n  const { t } = useTranslation();\n  return useMemo(\n    () => (\n      <AlertDialog open={modaleInfo} setOpen={setModaleInfo} severity=\"info\">\n        <Typography variant=\"body1\" textAlign=\"center\">\n          {t(\"CHAT.CONFERENCE.UntillTheEnd\")}:\n        </Typography>\n        <Typography variant=\"h6\" textAlign=\"center\">\n          {strTime}\n        </Typography>\n      </AlertDialog>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [modaleInfo]\n  );\n};\n\ntype ConferenceTimeProps = {\n  finishDate: Date;\n};\nconst ConferenceTime: React.FC<ConferenceTimeProps> = ({\n  finishDate\n}: ConferenceTimeProps) => {\n  const { t } = useTranslation();\n  const [modaleInfo, setModaleInfo] = useState(false);\n  const currTime = Date.now();\n  // console.log(\"currentDate server\", currentDate);\n  // console.log(\"currTime client\", currTime);\n  const finTime = new Date(finishDate).getTime();\n\n  //const diffTimeMin = Math.round((finTime - currTime) / (1000 * 60));\n  const diffTimeSec = Math.round((finTime - currTime) / 1000);\n\n  const { counter } = useCounter(diffTimeSec);\n  useEffect(() => {\n    if (minutes != null && minutes === 3 && seconds != null && seconds === 0) {\n      setModaleInfo(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [counter]);\n\n  if (diffTimeSec < 1) return null;\n\n  const { minutes, seconds, strTime } = hhMmSs(diffTimeSec);\n\n  return (\n    <Box textAlign=\"center\">\n      <Typography variant=\"body2\" component=\"span\">\n        {t(\"CHAT.CONFERENCE.LEFT_TIME\")}:{\" \"}\n      </Typography>\n      <Typography variant=\"button\" component=\"span\">\n        {strTime}\n      </Typography>\n      <AlertModale\n        modaleInfo={modaleInfo}\n        setModaleInfo={setModaleInfo}\n        strTime={strTime}\n      />\n    </Box>\n  );\n};\n\nexport default ConferenceTime;\n","import { useEffect, useRef, useState } from \"react\";\n\nexport default function useCounter(max = 30000) {\n  const [counter, setCounter] = useState(max);\n  const counterRef = useRef<ReturnType<typeof setInterval> | null>(null);\n\n  const handlerRefresh = () => {\n    setCounter(max);\n  };\n\n  // Counter\n  useEffect(() => {\n    if (counter > 0)\n      counterRef.current = setInterval(\n        () => setCounter(prev => prev - 1),\n        1000\n      );\n\n    return () => {\n      if (counterRef.current) clearInterval(counterRef.current);\n    };\n  }, [counter]);\n\n  return { counter, handlerRefresh };\n}\n","import React from 'react';\nimport {\n  Avatar,\n  CardHeader,\n  Button,\n  Popover,\n  IconButton,\n} from '@mui/material';\nimport { Theme } from '@mui/material/styles';\nimport GroupIcon from '@mui/icons-material/Group';\nimport { useTranslation } from 'react-i18next';\nimport VideoCallIcon from '@mui/icons-material/VideoCall';\nimport CallEndIcon from '@mui/icons-material/CallEnd';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactStatus from './ContactStatus';\nimport ContactList from './ContactList';\nimport AddContact from './AddContact';\nimport {\n  ChatRoom,\n  Contact,\n  Group,\n  SetTyping,\n  User,\n  ConferenceData,\n} from '../types';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport { combineURLs, isEmpty } from '../utils/common';\nimport ConferenceTime from './ConferenceTime';\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popover: {\n      pointerEvents: 'none',\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n    avatarGroup: {\n      backgroundColor: '#28B7C6',\n      color: '#fff',\n    },\n  }),\n);\n\ntype RoomHeaderProps = {\n  apiUrl: string;\n  user: User;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  conferenceJoined: boolean;\n  className: string;\n  operators: Contact[];\n  onVideoCall?: (chat: ChatRoom) => void;\n  onVideoEnd?: (conference: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst getGroupStatus = (group: Group, t: (key: string) => string) => {\n  const status = [`${group.members?.length} ${t('CHAT.MEMBERS')}`];\n  const onlineCount = (group.members || []).reduce(\n    (sum: number, contact) => (contact.online ? sum + 1 : sum),\n    0,\n  );\n  if (onlineCount)\n    status.push(`${onlineCount} ${t('CHAT.STATUS.ONLINE')}`);\n  return status.join(', ');\n};\n\nconst RoomHeader: React.FC<RoomHeaderProps> = ({\n  apiUrl,\n  user,\n  chat,\n  typing,\n  conference,\n  conferenceJoined,\n  className,\n  operators,\n  onVideoCall,\n  onVideoEnd,\n  onConferencePause,\n  onOperatorAdd,\n  onLeaveGroup,\n}: RoomHeaderProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(\n    null,\n  );\n  const [addOperatorOpen, setAddOperatorOpen] = React.useState(false);\n\n  if (!chat)\n    return (\n      <CardHeader\n        avatar={<Avatar />}\n        title=\"\"\n        subheader=\"\"\n        className={className}\n      />\n    );\n\n  const handlePopoverOpen = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleAddOperatorOpen = () => {\n    setAddOperatorOpen(true);\n  };\n\n  const handleAddOperatorClose = (operator?: Contact) => {\n    setAddOperatorOpen(false);\n    if (onOperatorAdd && operator && chat)\n      onOperatorAdd(chat as Group, operator);\n  };\n\n  const group = chat as Group;\n  if (group.groupId) {\n    // группа\n    return (\n      <CardHeader\n        avatar={\n          <Avatar alt={group.name} className={classes.avatarGroup}>\n            <GroupIcon />\n          </Avatar>\n        }\n        title={group.name}\n        subheader={\n          <React.Fragment>\n            <span\n              aria-owns={anchorEl ? 'mouse-over-popover' : undefined}\n              aria-haspopup=\"true\"\n              onMouseEnter={handlePopoverOpen}\n              onMouseLeave={handlePopoverClose}\n            >\n              {getGroupStatus(group, t)}\n            </span>\n            <Popover\n              id=\"mouse-over-popover\"\n              className={classes.popover}\n              classes={{\n                paper: classes.paper,\n              }}\n              open={!!anchorEl}\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              onClose={handlePopoverClose}\n              disableRestoreFocus\n            >\n              <ContactList\n                apiUrl={apiUrl}\n                contacts={group.members as Contact[]}\n                owner={group.userId}\n              />\n            </Popover>\n          </React.Fragment>\n        }\n        className={className}\n        action={\n          <React.Fragment>\n            {user.role === 4 && (\n              <React.Fragment>\n                <IconButton\n                  aria-label=\"add user\"\n                  onClick={handleAddOperatorOpen}\n                >\n                  <PersonAddIcon />\n                </IconButton>\n                <AddContact\n                  apiUrl={apiUrl}\n                  open={addOperatorOpen}\n                  contacts={operators}\n                  onClose={handleAddOperatorClose}\n                />\n              </React.Fragment>\n            )}\n            {user.role === 4 &&\n              group.members?.find(\n                (it) => it.userId !== user.userId && it.role === 4,\n              ) &&\n              onLeaveGroup && (\n                <IconButton\n                  aria-label=\"leave group\"\n                  onClick={() => onLeaveGroup(group)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              )}\n          </React.Fragment>\n        }\n      />\n    );\n  }\n  const contact = chat as Contact;\n  const isTyping =\n    !!typing?.contactId && typing?.userId === contact.userId;\n\n  return (\n    <CardHeader\n      avatar={\n        <Avatar\n          alt={contact.username}\n          src={\n            contact.avatar ? combineURLs(apiUrl, contact.avatar) : ''\n          }\n        />\n      }\n      title={contact.username}\n      subheader={\n        <ContactStatus contact={contact} isTyping={isTyping} />\n      }\n      className={className}\n      action={\n        <React.Fragment>\n          {user.role !== 1 &&\n            conferenceJoined &&\n            conference &&\n            !isEmpty(conference) &&\n            onConferencePause != null && (\n              <Button\n                aria-label=\"cancel call\"\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                startIcon={<CallEndIcon color=\"error\" />}\n                onClick={() => onConferencePause(conference)}\n              >\n                {t('CHAT.CONFERENCE.PAUSE')}\n              </Button>\n            )}\n\n          {conference &&\n            !isEmpty(conference) &&\n            onVideoEnd != null &&\n            user.role != null &&\n            [3, 4].includes(user.role) && (\n              <Button\n                aria-label=\"cancel call\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<CallEndIcon color=\"error\" />}\n                onClick={() => onVideoEnd(conference)}\n                style={{ marginLeft: 8 }}\n              >\n                {t('CHAT.CONFERENCE.FINISH')}\n              </Button>\n            )}\n\n          {isEmpty(conference) &&\n            onVideoCall != null &&\n            user.role &&\n            [3, 4].includes(user.role) && (\n              <Button\n                aria-label=\"video call\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<VideoCallIcon />}\n                onClick={() => onVideoCall(contact)}\n              >\n                {t('CHAT.CONFERENCE.START')}\n              </Button>\n            )}\n\n          {conference?.finishDate != null && (\n            <ConferenceTime finishDate={conference.finishDate} />\n          )}\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default RoomHeader;\n","import React from \"react\";\nimport { Avatar, Box } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nimport { getFileMeta, splitFileName } from \"../../utils/common\";\nimport { ChatMessage } from \"../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fileIcon: {\n      fontSize: \"0.75rem\"\n    },\n    fileBody: {\n      paddingLeft: theme.spacing(1.2)\n    }\n  })\n);\ntype FileProps = {\n  message: ChatMessage;\n};\n\nconst File: React.FC<FileProps> = ({ message }: FileProps) => {\n  const classes = useStyles();\n  const meta = getFileMeta(message.content);\n  const { name, ext } = splitFileName(meta.name);\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <Avatar className={classes.fileIcon}>{ext.toUpperCase()}</Avatar>\n      <Box display=\"flex\" flexDirection=\"column\" className={classes.fileBody}>\n        {name}\n        <span>{`${ext} ${meta.size}`}</span>\n      </Box>\n    </Box>\n  );\n};\n\nexport default File;\n","import React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material/styles';\nimport { ChatMessage } from '../../types';\nimport { combineURLs } from '../../utils/common';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  mediaContent: {\n    maxWidth: 284,\n    maxHeight: 190,\n    backgroundColor: theme.palette.secondary.main,\n    borderRadius: theme.spacing(1.2),\n    [theme.breakpoints.down('sm')]: {\n      maxWidth: 250,\n      maxHeight: 210,\n    },\n  },\n}));\n\ntype VideoProps = {\n  apiUrl: string;\n  message: ChatMessage;\n  isConference: boolean;\n};\n\nconst Video: React.FC<VideoProps> = ({\n  apiUrl,\n  message,\n  isConference,\n}: VideoProps) => {\n  const classes = useStyles();\n  let src = '';\n  if (isConference) {\n    const meta = JSON.parse(message.content);\n    src = combineURLs(\n      apiUrl,\n      `/static/conf/${meta.visitId}/${meta.name}`,\n    );\n  } else src = combineURLs(apiUrl, `/static/file/${message.content}`);\n  return (\n    <video\n      src={src}\n      className={classes.mediaContent}\n      controls\n      muted\n      preload=\"none\"\n    >\n      Ваш браузер не поддерживает тег video.\n    </video>\n  );\n};\n\nexport default Video;\n","import React from 'react';\n\nimport { Theme } from '@mui/material/styles';\n//import { getImageMeta } from \"../../utils/common\";\nimport { ChatMessage } from '../../types';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport { AspectRatio } from 'react-aspect-ratio';\nimport { combineURLs } from '../../utils/common';\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    img: {\n      cursor: 'pointer',\n      borderRadius: theme.spacing(1.2),\n      maxWidth: 284,\n      maxHeight: 190,\n      [theme.breakpoints.down('sm')]: {\n        maxWidth: 250,\n        maxHeight: 170,\n      },\n    },\n    aspect: {\n      maxWidth: 284,\n      maxHeight: 190,\n      [theme.breakpoints.down('sm')]: {\n        maxWidth: 250,\n        maxHeight: 170,\n      },\n    },\n  }),\n);\ntype ImageProrps = {\n  apiUrl: string;\n  message: ChatMessage;\n  setViewerData: (value: { visible: boolean; src: string }) => void;\n};\n\nconst Image: React.FC<ImageProrps> = ({\n  apiUrl,\n  message,\n  setViewerData,\n}: ImageProrps) => {\n  const classes = useStyles();\n  //const meta = getImageMeta(message.content);\n\n  return (\n    <AspectRatio ratio=\"3/4\" className={classes.aspect}>\n      <img\n        src={combineURLs(apiUrl, `/static/image/${message.content}`)}\n        onClick={() => {\n          setViewerData({\n            visible: true,\n\n            src: combineURLs(\n              apiUrl,\n              `/static/image/${message.content}`,\n            ),\n          });\n        }}\n        className={classes.img}\n        alt={message.cdate}\n      />\n    </AspectRatio>\n  );\n};\n\nexport default Image;\n","import React from 'react';\nimport File from './File';\nimport Video from './Video';\nimport Image from './Image';\nimport { ChatMessage } from '../../types';\n\ntype MessageProps = {\n  apiUrl: string;\n  message: ChatMessage;\n  setViewerData: (value: { visible: boolean; src: string }) => void;\n};\nconst MessageContent: React.FC<MessageProps> = ({\n  apiUrl,\n  message,\n  setViewerData,\n}: MessageProps) => {\n  switch (message.messageType) {\n    case 'text':\n      return <React.Fragment>{message.content}</React.Fragment>;\n    case 'video':\n    case 'video_conference':\n      return (\n        <Video\n          message={message}\n          apiUrl={apiUrl}\n          isConference={message.messageType === 'video_conference'}\n        />\n      );\n    case 'image':\n      return (\n        <Image\n          message={message}\n          apiUrl={apiUrl}\n          setViewerData={setViewerData}\n        />\n      );\n    case 'file':\n      return <File message={message} />;\n  }\n  return null;\n};\n\nexport default MessageContent;\n","import { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    rootContact: {\n      padding: 1,\n      paddingLeft: theme.spacing(2),\n      \"& span\": {\n        float: \"right\",\n        color: theme.palette.text.secondary,\n        fontSize: \"0.8rem\"\n      },\n      \"& $message\": {\n        backgroundColor: theme.palette.grey[200],\n        color: theme.palette.text.primary,\n        borderTopRightRadius: theme.spacing(3),\n        borderBottomRightRadius: theme.spacing(3)\n      },\n      \"& $firstMessage\": {\n        borderTopLeftRadius: theme.spacing(3),\n        marginTop: 10\n      },\n      \"& $lastMessage\": {\n        borderTopRightRadius: theme.spacing(3),\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: theme.spacing(3),\n        marginBottom: 10\n      }\n    },\n    rootUser: {\n      padding: 1,\n      paddingRight: theme.spacing(2),\n      justifyContent: \"flex-end\",\n      \"& span\": {\n        float: \"right\",\n        color: \"#D9DEEC\",\n        fontSize: \"0.8rem\"\n      },\n      \"& $message\": {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        borderTopLeftRadius: theme.spacing(3),\n        borderBottomLeftRadius: theme.spacing(3)\n      },\n      \"& $firstMessage\": {\n        borderTopRightRadius: theme.spacing(3),\n        marginTop: 10\n      },\n      \"& $lastMessage\": {\n        borderTopLeftRadius: theme.spacing(3),\n        borderBottomRightRadius: 0,\n        marginBottom: 10\n      }\n    },\n    rootNotify: {\n      justifyContent: \"center\",\n      \"& span\": {\n        float: \"right\",\n        color: theme.palette.text.secondary,\n        fontSize: \"0.8rem\"\n      },\n      \"& > *\": {\n        //padding: `0px ${theme.spacing(1)}`,\n        borderRadius: theme.spacing(3),\n        fontWeight: 500\n      }\n    },\n    message: {\n      //maxWidth: \"55%\",\n      //minWidth: \"50%\",\n      maxWidth: \"65%\",\n\n      [theme.breakpoints.down(\"md\")]: {\n        maxWidth: \"95%\"\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        maxWidth: \"85%\"\n      },\n      borderRadius: theme.spacing(0.6),\n      padding: theme.spacing(0.9),\n      paddingLeft: theme.spacing(1.8),\n      paddingRight: theme.spacing(1.8)\n    },\n    firstMessage: {},\n    lastMessage: {},\n\n    file: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      cursor: \"pointer\"\n    },\n    header: {\n      flex: \"0 0 100%\",\n      overflow: \"hidden\",\n      fontWeight: \"bold\"\n    },\n    body: {\n      flex: \"1 1 auto\",\n      wordBreak: \"break-word\",\n      overflow: \"hidden\"\n    },\n    status: {\n      paddingLeft: theme.spacing(1),\n      flex: \"1 1 auto\",\n      alignSelf: \"flex-end\"\n    },\n    statusImage: {\n      fontSize: \"1rem\",\n      marginRight: theme.spacing(0.5),\n      verticalAlign: \"middle\"\n    }\n  })\n);\n","import * as React from 'react';\nimport { Box, Link, ListItem, Typography } from '@mui/material';\n\nimport { DoneAll, Done } from '@mui/icons-material';\nimport { combineURLs, formatTime } from '../utils/common';\nimport MessageContent from './MessageContent';\nimport { Alert } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { ChatMessage, Contact, PrivateMessage, User } from '../types';\n\n/* styles */\nimport useStyles from './styles';\n\ntype MessageProps = {\n  apiUrl: string;\n  user: User;\n  message: ChatMessage;\n  owner: Contact;\n  isGroupMessage: boolean; // сообщение в группу\n  isUserFirst: boolean; // начинает группу сообщений от одного пользователя\n  isUserLast: boolean; // завершает группу сообщений от одного пользователя\n  onContextMenu: (event: React.MouseEvent<HTMLElement>) => void;\n  setViewerData: (value: { visible: boolean; src: string }) => void;\n  //refOnMess: React.RefObject<HTMLDivElement> | null;\n};\n\nconst wrapMessage = (\n  apiUrl: string,\n  message: ChatMessage,\n  classes: ReturnType<typeof useStyles>,\n  isUserFirst: boolean,\n  isUserLast: boolean,\n  onContextMenu:\n    | ((event: React.MouseEvent<HTMLElement>) => void)\n    | undefined,\n  child: JSX.Element,\n) => {\n  const { messageType } = message;\n\n  const className =\n    isUserFirst && isUserLast\n      ? `${classes.message} ${classes.firstMessage} ${classes.lastMessage}`\n      : isUserFirst\n      ? `${classes.message} ${classes.firstMessage}`\n      : isUserLast\n      ? `${classes.message} ${classes.lastMessage}`\n      : classes.message;\n\n  if (messageType === 'file') {\n    return (\n      <Link\n        className={`${className} ${classes.file}`}\n        underline=\"none\"\n        href={combineURLs(apiUrl, `/static/file/${message.content}`)}\n        target=\"_blank\"\n        download\n        onContextMenu={onContextMenu}\n      >\n        {child}\n      </Link>\n    );\n  }\n  const isMedia =\n    messageType === 'image' ||\n    messageType === 'video' ||\n    messageType === 'video_conference';\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection={isMedia ? 'column' : 'row'}\n      flexWrap=\"wrap\"\n      className={className}\n      onContextMenu={onContextMenu}\n    >\n      {child}\n    </Box>\n  );\n};\n\nconst Message: React.FC<MessageProps> = (props: MessageProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const {\n    apiUrl,\n    message,\n    owner,\n\n    user,\n    isGroupMessage,\n    isUserFirst,\n    isUserLast,\n    setViewerData,\n    //refOnMess,\n  } = props;\n  //console.log('message', message);\n\n  if (message.messageType === 'notify') {\n    // Уведомление - особый случай\n    const content =\n      message.content[0] === '{'\n        ? JSON.parse(message.content)\n        : message.content;\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Alert\n          //ref={refOnMess}\n          severity={\n            typeof content === 'string' ? 'info' : content.severity\n          }\n        >\n          {typeof content === 'string' ? content : content.message}\n        </Alert>\n      </ListItem>\n    );\n  }\n\n  if (message.isRevoke) {\n    // Удаленное сообщение\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Typography\n          variant=\"body2\"\n          align=\"center\"\n          //ref={refOnMess}\n        >\n          {message.userId === user.userId\n            ? t('CHAT.MESSAGE.REVOKED.YOU')\n            : `${message.revokeUserName} ${t(\n                'CHAT.MESSAGE.REVOKED.CONTACT',\n              )}`}\n        </Typography>\n      </ListItem>\n    );\n  }\n\n  const isMine = user.userId === message.userId;\n\n  return (\n    <ListItem\n      className={\n        message.messageType === 'video_conference'\n          ? classes.rootNotify\n          : isMine\n          ? classes.rootUser\n          : classes.rootContact\n      }\n    >\n      {wrapMessage(\n        apiUrl,\n        message,\n        classes,\n        isUserFirst,\n        isUserLast,\n        props.onContextMenu,\n        <React.Fragment>\n          {!isMine && isGroupMessage && owner && isUserFirst && (\n            <div className={classes.header}>{owner.username}</div>\n          )}\n          <div\n            className={classes.body}\n            //ref={refOnMess}\n          >\n            <MessageContent\n              message={message}\n              apiUrl={apiUrl}\n              setViewerData={setViewerData}\n            />\n          </div>\n          <div className={classes.status}>\n            <span>\n              {isMine ? (\n                (message as PrivateMessage).status === 0 ? (\n                  <Done className={classes.statusImage} />\n                ) : (\n                  <DoneAll className={classes.statusImage} />\n                )\n              ) : null}\n              {formatTime(message.cdate)}\n            </span>\n          </div>\n        </React.Fragment>,\n      )}\n    </ListItem>\n  );\n};\nexport default Message;\n","import React from 'react';\nimport {\n  Box,\n  CardContent,\n  CircularProgress,\n  List,\n  Backdrop,\n  Fab,\n} from '@mui/material';\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport KeyboardArrowDown from '@mui/icons-material/KeyboardArrowDown';\n\nimport Message from './Message';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { getChatId } from '../utils/common';\nimport { ChatMessage, ChatRoom, User, ContactGather } from '../types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    messageListOuter: {\n      flex: 1,\n      overflowY: 'auto',\n      margin: 0,\n      padding: 0,\n    },\n    messageList: {\n      height: '100%',\n      overflowY: 'auto',\n      scrollbarWidth: 'thin',\n      scrollbarColor: `${theme.palette.primary.light} #fff`,\n    },\n    img: {\n      cursor: 'pointer',\n      borderRadius: theme.spacing(1.2),\n\n      maxWidth: 'auto',\n      maxHeight: '95%',\n      [theme.breakpoints.down('sm')]: {\n        maxWidth: 'auto',\n        maxHeight: '95%',\n      },\n    },\n\n    arrowDown: {\n      position: 'absolute',\n      left: '94.5%',\n      bottom: 105,\n      [theme.breakpoints.down('md')]: {\n        left: '91.5%',\n        bottom: 95,\n      },\n      [theme.breakpoints.down('sm')]: {\n        left: '84%',\n        bottom: 95,\n      },\n    },\n  }),\n);\n\ntype InitialMenuState = {\n  message: ChatMessage | null;\n  mouseX: null | number;\n  mouseY: null | number;\n  canCopy: boolean;\n  canDelete: boolean;\n};\n\ntype RoomMessageListProps = {\n  apiUrl: string;\n  user: User;\n  users: ContactGather;\n  chat: ChatRoom | null;\n  loading: boolean;\n  pageSize: number;\n\n  initialMenuState: InitialMenuState;\n\n  onNeedMoreMessages: (chat: ChatRoom) => Promise<void>;\n  onMeesageDelete?: (chat: ChatRoom, message: ChatMessage) => void;\n  setMenuState: React.Dispatch<\n    React.SetStateAction<InitialMenuState>\n  >;\n};\n\nconst Loading = ({ loading }: { loading: boolean }) => {\n  return (\n    loading && (\n      <Box sx={{ width: '100%', mx: 'auto', textAlign: 'center' }}>\n        <CircularProgress />\n      </Box>\n    )\n  );\n};\n\nconst RoomMessageList: React.FC<RoomMessageListProps> = (\n  props: RoomMessageListProps,\n) => {\n  const {\n    apiUrl,\n    user,\n    users,\n    chat,\n    loading,\n    pageSize,\n    setMenuState,\n    initialMenuState,\n  } = props;\n  const classes = useStyles();\n\n  const [scrollDownButton, setScrollDownButton] = React.useState(\n    false,\n  );\n  const [scrollDo, setScrollDo] = React.useState(true);\n\n  const messages = chat?.messages;\n  const messageCount = messages?.length || 0;\n  const lastMessage =\n    chat?.messages && chat.messages[messageCount - 1];\n\n  // const refOnMess = React.useRef<HTMLDivElement>(null);\n  // const refOnLastMess = React.useRef<HTMLDivElement>(null);\n  const refList = React.useRef<HTMLUListElement>(null);\n\n  const handleMenuPopup = (\n    message: ChatMessage,\n    event: React.MouseEvent<HTMLElement>,\n  ) => {\n    const canCopy = message.messageType === 'text';\n    const canDelete =\n      user.userId === message.userId &&\n      !!props.onMeesageDelete &&\n      new Date().getTime() - new Date(message.cdate).getTime() <=\n        1000 * 60 * 2;\n    if (!canCopy && !canDelete) {\n      setMenuState(initialMenuState);\n      return;\n    }\n    event.preventDefault();\n    setMenuState({\n      message,\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4,\n      canCopy,\n      canDelete,\n    });\n  };\n\n  const [viewerData, setViewerData] = React.useState<{\n    visible: boolean;\n    src: string;\n  }>({\n    visible: false,\n    src: '',\n  });\n  React.useEffect(() => {\n    setTimeout(() => {\n      setScrollDo(true);\n      scrollDown();\n    }, 500);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    setScrollDo(true);\n    scrollDown();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getChatId(chat)]);\n\n  React.useEffect(() => {\n    if (lastMessage && user.userId === lastMessage.userId) {\n      scrollDown();\n      setScrollDo(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messageCount]);\n\n  const scrollDown = () => {\n    if (refList.current && scrollDo) {\n      refList.current.scrollTop = refList.current.scrollHeight;\n    }\n  };\n  //sconsole.log('--user', user, 'lastMessage', lastMessage);\n  const handlerScrollDown = () => {\n    scrollDown();\n  };\n\n  return (\n    <CardContent className={classes.messageListOuter}>\n      <List className={classes.messageList} ref={refList}>\n        <InfiniteScroll\n          pageStart={0}\n          loadMore={() => {\n            if (\n              messageCount >= pageSize &&\n              !loading &&\n              props.onNeedMoreMessages &&\n              chat\n            ) {\n              setScrollDo(false);\n              props.onNeedMoreMessages(chat);\n            }\n          }}\n          hasMore={chat && !chat.noMoreData ? true : false}\n          loader={<Loading loading={loading} />}\n          isReverse\n          useCapture\n          useWindow={false}\n          getScrollParent={() => {\n            if (refList.current) {\n              const gap = 1540;\n              const isShowButton =\n                refList.current.scrollTop <\n                refList.current.scrollHeight - gap;\n              setScrollDownButton(isShowButton);\n\n              //\n            }\n            return refList.current;\n          }}\n        >\n          {messages &&\n            (messages as ChatMessage[]).map((message, inx) => (\n              <Message\n                key={inx}\n                apiUrl={apiUrl}\n                user={user}\n                message={message}\n                owner={users[message.userId]}\n                isGroupMessage={!!chat?.groupId}\n                isUserFirst={\n                  inx === 0 ||\n                  messages[inx - 1].messageType === 'notify' ||\n                  messages[inx - 1].userId !== messages[inx].userId\n                }\n                isUserLast={\n                  inx === messages.length - 1 ||\n                  messages[inx + 1].messageType === 'notify' ||\n                  messages[inx + 1].userId !== messages[inx].userId\n                }\n                onContextMenu={event =>\n                  handleMenuPopup(message, event)\n                }\n                //refOnMess={defineRefOnMess(inx)}\n                setViewerData={setViewerData}\n              />\n            ))}\n        </InfiniteScroll>\n      </List>\n      {scrollDownButton && (\n        <Box className={classes.arrowDown}>\n          <Fab\n            color=\"info\"\n            aria-label=\"add\"\n            size=\"medium\"\n            onClick={handlerScrollDown}\n          >\n            <KeyboardArrowDown />\n          </Fab>\n        </Box>\n      )}\n      {viewerData.visible && (\n        <Backdrop\n          sx={{\n            color: '#fff',\n            zIndex: (theme: Theme) => theme.zIndex.drawer + 1,\n          }}\n          open={viewerData.visible}\n          onClick={() => {\n            setViewerData({ visible: false, src: '' });\n          }}\n        >\n          <img src={viewerData.src} className={classes.img} alt=\"\" />\n        </Backdrop>\n      )}\n    </CardContent>\n  );\n};\n\nexport default RoomMessageList;\n","import React, { useCallback } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  IconButton,\n  useMediaQuery,\n  Tooltip,\n} from '@mui/material';\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Entry from './Entry';\nimport RoomHeader from './RoomHeader';\nimport RoomMessageList from './RoomMessageList';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  SetTyping,\n  User,\n  Contact,\n  ConferenceData,\n  Group,\n  ContactGather,\n} from '../types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      minWidth: 360,\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n\n    roomHeader: {\n      flex: 1,\n    },\n\n    flexAll: {\n      flex: '1 1 auto',\n    },\n    flexEnd: {\n      justifyContent: 'flex-end',\n    },\n  }),\n);\n\nconst initialMenuState = {\n  message: null,\n  mouseX: null,\n  mouseY: null,\n  canCopy: false,\n  canDelete: false,\n};\n\ntype RoomProps = {\n  apiUrl: string;\n  user: User;\n  users: ContactGather;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  conferenceJoined: boolean;\n  loading: boolean;\n  pageSize: number;\n  operators: Contact[];\n  onExitRoom?: (chat: ChatRoom) => void;\n  onEnterRoom?: (chat: ChatRoom) => void;\n  onNeedMoreMessages: (chat: ChatRoom) => Promise<void>;\n  onMeesageDelete?: (chat: ChatRoom, message: ChatMessage) => void;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n  onVideoCall?: (chat: ChatRoom) => void;\n  onVideoEnd?: (chat: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst Room: React.FC<RoomProps> = (props: RoomProps) => {\n  const {\n    apiUrl,\n    user,\n    users,\n    chat,\n    typing,\n    conference,\n    conferenceJoined,\n    loading,\n    pageSize,\n  } = props;\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down('sm'),\n  );\n\n  const [menuState, setMenuState] = React.useState<{\n    message: ChatMessage | null;\n    mouseX: null | number;\n    mouseY: null | number;\n    canCopy: boolean;\n    canDelete: boolean;\n  }>(initialMenuState);\n\n  const handleMenuClose = () => {\n    setMenuState(initialMenuState);\n  };\n\n  const handleCopy = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (!message) return;\n    navigator.clipboard.writeText(message.content);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [menuState.message]);\n\n  const handleDelete = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (props.onMeesageDelete && chat && message)\n      props.onMeesageDelete(chat, message);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [menuState.message]);\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <Box display=\"flex\" flexDirection=\"row\">\n        {chat && isMobile && (\n          <Tooltip title=\"Вернуться в конференцию\">\n            <IconButton\n              aria-label=\"exit room\"\n              onClick={() =>\n                props.onExitRoom && props.onExitRoom(chat)\n              }\n            >\n              <ArrowBackIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {/* {!isMobile && <CheckAudiVideoPerm />} */}\n\n        <RoomHeader\n          apiUrl={apiUrl}\n          user={user}\n          chat={chat}\n          typing={typing}\n          conference={conference}\n          conferenceJoined={conferenceJoined}\n          operators={props.operators}\n          className={classes.roomHeader}\n          onVideoCall={props.onVideoCall}\n          onVideoEnd={props.onVideoEnd}\n          onConferencePause={props.onConferencePause}\n          onOperatorAdd={props.onOperatorAdd}\n          onLeaveGroup={props.onLeaveGroup}\n        />\n      </Box>\n      <Divider />\n      <RoomMessageList\n        apiUrl={apiUrl}\n        user={user}\n        users={users}\n        chat={chat}\n        loading={loading}\n        pageSize={pageSize}\n        initialMenuState={initialMenuState}\n        onNeedMoreMessages={props.onNeedMoreMessages}\n        onMeesageDelete={props.onMeesageDelete}\n        setMenuState={setMenuState}\n      />\n      <Divider />\n      <CardContent>\n        <Entry\n          chat={chat}\n          onTyping={props.onTyping}\n          onSendMessage={props.onSendMessage}\n        />\n      </CardContent>\n      <Menu\n        keepMounted\n        open={menuState.mouseY !== null}\n        onClose={handleMenuClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          menuState.mouseY !== null && menuState.mouseX !== null\n            ? { top: menuState.mouseY, left: menuState.mouseX }\n            : undefined\n        }\n      >\n        <MenuItem onClick={handleCopy} disabled={!menuState.canCopy}>\n          <span className={classes.flexAll}>\n            {t('CHAT.MESSAGE.MENU.COPY')}\n          </span>\n          <ListItemIcon className={classes.flexEnd}>\n            <FileCopyIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n        <MenuItem\n          onClick={handleDelete}\n          disabled={!menuState.canDelete}\n        >\n          <span className={classes.flexAll}>\n            {t('CHAT.MESSAGE.MENU.DELETE')}\n          </span>\n          <ListItemIcon className={classes.flexEnd}>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n      </Menu>\n    </Card>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport {\n  Avatar,\n  Badge,\n  Box,\n  Chip,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles, withStyles } from \"@mui/styles\";\n\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport { combineURLs, formatTime, getChatName } from \"../utils/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatMessage, ChatRoom, Contact, Group, SetTyping } from \"../types\";\n\ntype RoomListItemProps = {\n  apiUrl: string;\n  chat: ChatRoom;\n  active: boolean;\n  typing: SetTyping | null;\n  onClick: React.MouseEventHandler<HTMLDivElement> | undefined;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      flex: \"1 1 auto\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\"\n    },\n    time: {\n      paddingLeft: theme.spacing(1),\n      justifyContent: \"flex-end\",\n      whiteSpace: \"nowrap\"\n    },\n    unread: {\n      justifyContent: \"flex-end\",\n      maxHeight: 20\n    },\n    avatarGroup: {\n      backgroundColor: \"#28B7C6\",\n      color: \"#fff\"\n    }\n  })\n);\n\nconst getMessageText = (\n  message: ChatMessage | null,\n  t: (key: string) => string\n) => {\n  if (!message) return null;\n  switch (message.messageType) {\n    case \"text\":\n      return message.content;\n    case \"image\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.IMAGE\")}]`;\n    case \"video\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.VIDEO\")}]`;\n    case \"file\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.FILE\")}]`;\n    case \"notify\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.NOTIFY\")}]`;\n    default:\n      return null;\n  }\n};\n\nconst TypingBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: \"#44b700\",\n      color: \"#44b700\",\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      \"&::after\": {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"50%\",\n        animation: \"$ripple 1.2s infinite ease-in-out\",\n        border: \"1px solid currentColor\",\n        content: '\"\"'\n      }\n    },\n    \"@keyframes ripple\": {\n      \"0%\": {\n        transform: \"scale(.8)\",\n        opacity: 1\n      },\n      \"100%\": {\n        transform: \"scale(2.4)\",\n        opacity: 0\n      }\n    }\n  })\n)(Badge);\n\nconst OnlineBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: theme.palette.primary.main,\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`\n    }\n  })\n)(Badge);\n\nconst contactAvatar = (\n  apiUrl: string,\n  contact: Contact,\n  typing: SetTyping | null\n): JSX.Element => {\n  const avatar = (\n    <Avatar\n      alt={contact.username}\n      src={contact.avatar ? combineURLs(apiUrl, contact.avatar) : \"\"}\n    />\n  );\n\n  const isTyping = !!typing?.contactId && typing?.userId === contact.userId;\n  if (isTyping)\n    return (\n      <TypingBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </TypingBadge>\n    );\n\n  if (contact?.online)\n    return (\n      <OnlineBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </OnlineBadge>\n    );\n\n  return avatar;\n};\n\nconst RoomListItem: React.FC<RoomListItemProps> = (\n  props: RoomListItemProps\n) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { apiUrl, chat, typing } = props;\n  const roomName = getChatName(chat);\n\n  const avatar = (chat as Group).groupId ? (\n    <Avatar alt={roomName} className={classes.avatarGroup}>\n      <GroupIcon />{\" \"}\n    </Avatar>\n  ) : (\n    contactAvatar(apiUrl, chat as Contact, typing)\n  );\n\n  const lastMessage =\n    chat.messages && chat.messages.length > 0\n      ? chat.messages[chat.messages.length - 1]\n      : null;\n\n  const roomText = getMessageText(lastMessage, t);\n  const roomTime = lastMessage?.cdate;\n\n  return (\n    <ListItem button selected={props.active} onClick={props.onClick}>\n      <ListItemAvatar>{avatar}</ListItemAvatar>\n      <ListItemText\n        secondaryTypographyProps={{ component: \"span\" }}\n        primary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomName}</span>\n            <span className={classes.time}>{formatTime(roomTime)}</span>\n          </Box>\n        }\n        secondary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomText}</span>\n            {chat.unreadCount ? (\n              <Chip\n                className={classes.unread}\n                component=\"span\"\n                size=\"small\"\n                color=\"primary\"\n                label={chat.unreadCount}\n              />\n            ) : null}\n          </Box>\n        }\n      />\n    </ListItem>\n  );\n};\nexport default RoomListItem;\n","import React from \"react\";\nimport List from \"@mui/material/List\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport { Card, CardHeader, Divider, TextField } from \"@mui/material\";\nimport RoomListItem from \"./RoomListItem\";\nimport {\n  chatRoomComparer,\n  getChatId,\n  getChatName,\n  isEmpty\n} from \"../utils/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatRoom, Contact, Group, SetTyping, User } from \"../types\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  searchField: {\n    width: \"100%\"\n  },\n  listStyle: {\n    height: \"89.5%\",\n    overflowY: \"auto\",\n    scrollbarWidth: \"thin\",\n    scrollbarColor: `${theme.palette.primary.light} #fff`\n  }\n}));\n\ntype RoomListProps = {\n  apiUrl: string;\n  user: User;\n  activeRoom: ChatRoom | null;\n  groups: Group[];\n  contacts: Contact[];\n  typing: SetTyping | null;\n  onChangeChat?: (chat: ChatRoom) => void;\n};\n\nconst filterChats = (chats: ChatRoom[], filter: string | null): ChatRoom[] => {\n  if (filter === null) return chats;\n  const lowerFilter = filter.toLowerCase();\n  return chats.filter(\n    chat =>\n      getChatName(chat)\n        .toLowerCase()\n        .indexOf(lowerFilter.toLowerCase()) !== -1\n  );\n};\n\nconst sortChats = (\n  userId: number,\n  groups: ChatRoom[],\n  contacts: ChatRoom[]\n) => {\n  let roomArr = [...groups, ...contacts];\n  //console.log('groups', groups, 'contacts', contacts);\n\n  // Сортировать окно чата (по времени последних сообщений)\n  roomArr = roomArr.sort(chatRoomComparer);\n\n  // Проверяем, есть ли список, который нужно закрепить\n  const topChatId = localStorage.getItem(`${userId}-topChatId`) as string;\n  if (topChatId) {\n    const chat = roomArr.find(c => getChatId(c) === topChatId);\n    if (chat) {\n      // На первое место\n      roomArr = roomArr.filter(k => getChatId(k) !== topChatId);\n      chat.isTop = true;\n      roomArr.unshift(chat);\n    }\n  }\n\n  return roomArr;\n};\n\nconst RoomList: React.FC<RoomListProps> = (props: RoomListProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [chats, setChats] = React.useState<ChatRoom[]>(\n    sortChats(\n      props.user.userId,\n      filterChats(props.groups, null),\n      filterChats(props.contacts, null)\n    )\n  );\n\n  const onSearchChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    //console.log(\"e.target.value\", e.target.value);\n\n    setChats(\n      sortChats(\n        props.user.userId,\n        filterChats(props.groups, e.target.value),\n        filterChats(props.contacts, e.target.value)\n      )\n    );\n  };\n  //const activeItem = (id: number) => id === props.activeRoom?.userId;\n\n  //console.log(\"chats\", chats);\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <CardHeader\n        title={\n          <TextField\n            className={classes.searchField}\n            label={t(\"CHAT.INPUT_SEARCH_CONTACT\")}\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            onChange={onSearchChange}\n          />\n        }\n      />\n      <Divider />\n      <List aria-label=\"rooms\" className={classes.listStyle}>\n        {!isEmpty(chats) &&\n          chats.map(\n            chat =>\n              !isEmpty(chat) && (\n                <RoomListItem\n                  key={getChatId(chat)}\n                  apiUrl={props.apiUrl}\n                  chat={chat}\n                  active={chat === props.activeRoom}\n                  typing={props.typing}\n                  onClick={() =>\n                    props.onChangeChat != null && props.onChangeChat(chat)\n                  }\n                />\n              )\n          )}\n      </List>\n    </Card>\n  );\n};\nexport default RoomList;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { ConferenceData } from \"../types\";\nfunction updateUrlParameter(url: string, param: string, value: string) {\n  const regex = new RegExp(\"(\" + param + \"=)[^&]+\");\n  return url.replace(regex, \"$1\" + value);\n}\nconst transLang = (lang: string) =>\n  lang === \"ru\" ? \"rus\" : lang === \"fr\" ? \"fra\" : lang === \"en\" ? \"eng\" : \"\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 4\n  }\n}));\n\ntype ConferenceProps = {\n  conference: ConferenceData | null;\n  onClose: (conference: ConferenceData | null) => void;\n  langCode?: string | null;\n};\n\nconst Conference: React.FC<ConferenceProps> = ({\n  conference,\n  onClose,\n  langCode = \"en\"\n}: ConferenceProps) => {\n  const classes = useStyles();\n  const ref = React.useRef<HTMLIFrameElement>(null);\n  const confUrl =\n    conference?.url && langCode\n      ? updateUrlParameter(conference?.url, \"lang\", transLang(langCode))\n      : \"\";\n\n  useEffect(() => {\n    const listener = ({ source, data }: MessageEvent) => {\n      if (source === ref.current?.contentWindow) {\n        const { type } = data;\n\n        if (\n          [\n            \"notSupported\",\n            \"connectionFail\",\n            // \"loginFail\",\n            \"callFail\",\n            \"hangUp\",\n            \"remoteHangUp\"\n            // \"onParticipantLeft\"\n          ].includes(type)\n        )\n          onClose(conference);\n      }\n    };\n    window.addEventListener(\"message\", listener);\n    return () => {\n      window.removeEventListener(\"message\", listener);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conference?.id, langCode]);\n\n  return (\n    <iframe\n      title=\"conference\"\n      className={classes.root}\n      src={confUrl}\n      allowFullScreen\n      allow=\"microphone; camera; autoplay; display-capture\"\n      ref={ref}\n    />\n  );\n};\nexport default Conference;\n","import React from \"react\";\nimport { Avatar, Button, Paper } from \"@mui/material\";\nimport { ConferenceData, Contact } from \"../types\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from \"@mui/styles\";\nimport { combineURLs } from \"../utils/common\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  pulse: {\n    height: 100,\n    width: 100,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n    \"&::before\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\"\n    },\n    \"&::after\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\",\n      animationDelay: \"0.3s\"\n    }\n  },\n  avatar: {\n    width: \"80%\",\n    height: \"80%\"\n  },\n  footer: {\n    width: \"100%\",\n    alignSelf: \"flex-end\",\n    paddingTop: 64,\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  \"@keyframes pulse\": {\n    \"0%\": {\n      transform: \"scale(0.5)\",\n      opacity: 0\n    },\n    \"50%\": {\n      transform: \"scale(1)\",\n      opacity: 1\n    },\n    \"100%\": {\n      transform: \"scale(1.3)\",\n      opacity: 0\n    }\n  }\n}));\n\ntype ConferenceCallProps = {\n  conference: ConferenceData;\n  contact: Contact;\n  apiUrl: string;\n  onAccept: (conference: ConferenceData) => void;\n};\n\nconst ConferenceCall: React.FC<ConferenceCallProps> = ({\n  conference,\n  contact,\n  apiUrl,\n  onAccept\n}: ConferenceCallProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.pulse}>\n        {contact ? (\n          <Avatar\n            className={classes.avatar}\n            alt={contact.username}\n            src={contact.avatar ? combineURLs(apiUrl, contact.avatar) : \"\"}\n          />\n        ) : (\n          <Avatar className={classes.avatar} />\n        )}\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => onAccept(conference)}\n        >\n          {t(\"CHAT.CONFERENCE.JOIN\")}\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n\nexport default ConferenceCall;\n","import React from 'react';\nimport {\n  AddGroupMessages,\n  AddPrivateMessages,\n  ChatRoom,\n  Contact,\n  ContactGather,\n  Group,\n  GroupGather,\n  GroupMember,\n  GroupMessage,\n  MessageOperation,\n  PrivateMessage,\n  SetActiveRoom,\n  //SetUser,\n  SetTyping,\n  User,\n  ConferenceData,\n  GroupMap,\n} from '../types';\nimport { chatRoomComparer } from '../utils/common';\n\nexport interface ChatState {\n  user: User;\n  token: string;\n  activeRoom: ChatRoom | null;\n  chatOld: ChatRoom | null;\n\n  groupGather: GroupGather;\n  userGather: ContactGather;\n  contactGather: ContactGather;\n  operators: Contact[];\n  initialContactId: number | null;\n  conference: {\n    data: ConferenceData | null;\n    joined: boolean;\n    ringPlayed: boolean;\n  };\n  typing: SetTyping | null;\n  loading: boolean;\n  error?: string;\n  success?: string;\n}\n\nconst emptyUser: User = {\n  userId: 0,\n  username: '',\n  password: '',\n  avatar: '',\n  langCode: '',\n};\n\nconst emptyChatState: ChatState = {\n  user: emptyUser, // пользователь\n  token: '', // токен\n  activeRoom: null, // активная комната\n  chatOld: null, // активная комната\n\n  groupGather: {}, // список групп\n  userGather: {}, // список онлайн\n  contactGather: {}, // контакты\n  operators: [], // операторы\n  initialContactId: null, // начальный контакт\n  conference: {\n    data: null, // данные конференции\n    joined: false,\n    ringPlayed: false,\n  },\n  typing: null, // кто печатает текст\n  loading: false, // загрузка данных\n  error: undefined, // ошибка\n  success: undefined, // НЕ ошибка\n};\n\ntype ChatActionType =\n  | 'ADD_GROUP_MEMBER'\n  | 'ADD_GROUP_MESSAGE'\n  | 'ADD_GROUP_MESSAGES'\n  | 'SET_GROUP_MESSAGES'\n  | 'ADD_PRIVATE_MESSAGE'\n  | 'ADD_PRIVATE_MESSAGES'\n  | 'SET_PRIVATE_MESSAGES'\n  | 'SET_ACTIVE_ROOM'\n  | 'UPDATE_ACTIVE_ROOM'\n  | 'SET_GROUP_GATHER'\n  | 'SET_CONTACT_GATHER'\n  | 'SET_USER_GATHER'\n  | 'DEL_GROUP'\n  | 'DEL_GROUP_MEMBER'\n  | 'DEL_CONTACT'\n  | 'ADD_CONTACT_UNREAD_GATHER'\n  | 'LOSE_CONTACT_UNREAD_GATHER'\n  | 'ADD_GROUP_UNREAD_GATHER'\n  | 'LOSE_GROUP_UNREAD_GATHER'\n  | 'REVOKE_MESSAGE'\n  | 'USER_ONLINE'\n  | 'USER_OFFLINE'\n  | 'UPDATE_USER_INFO'\n  | 'SET_INITIAL_CONTACT_ID'\n  | 'SET_CONFERENCE'\n  | 'JOIN_CONFERENCE'\n  | 'PAUSE_CONFERENCE'\n  | 'STOP_CONFERENCE'\n  | 'SET_TYPING'\n  | 'MARK_AS_READ'\n  | 'UPDATE_GROUP_INFO'\n  | 'MARK_PRIVATE_MESSAGES_READ'\n  | 'SET_LOADING'\n  | 'SET_ERROR'\n  | 'SET_SUCCES'\n  | 'SET_USER'\n  | 'SET_TOKEN'\n  | 'CLEAR_USER'\n  | 'CLEAR_CHAT_DATA'\n  | 'SET_OPERATORS';\n\ntype Action = {\n  type: ChatActionType;\n  payload?:\n    | null\n    | boolean\n    | number\n    | string\n    | Group\n    | Contact\n    | User\n    | PrivateMessage\n    | GroupMessage\n    | SetTyping\n    | MessageOperation\n    | GroupMember\n    | AddPrivateMessages\n    | AddGroupMessages\n    | SetActiveRoom\n    | ConferenceData\n    | Contact[]\n    | GroupMap;\n};\n\nconst getFreshActiveRoom = (state: ChatState) => {\n  if (state.activeRoom)\n    return (\n      state.groupGather[(state.activeRoom as Group).groupId] ||\n      state.contactGather[state.activeRoom.userId]\n    );\n  return null;\n};\n\nconst getActiveRoom = (state: ChatState) => {\n  const { activeRoom, initialContactId, contactGather } = state;\n  let newActiveRoom: ChatRoom | null = null;\n  if (initialContactId) {\n    newActiveRoom = contactGather[initialContactId];\n  } else if (activeRoom) {\n    newActiveRoom = getFreshActiveRoom(state);\n  } else {\n    // ищем комнату с самым свежим сообщением\n    const rooms = [\n      ...Object.values(state.contactGather),\n      ...Object.values(state.groupGather),\n    ].sort(chatRoomComparer);\n    if (rooms.length > 0) newActiveRoom = rooms[0];\n  }\n  return newActiveRoom;\n};\n\nconst setUserOnline = (\n  state: ChatState,\n  userId: number,\n  online: 0 | 1,\n): ChatState => {\n  const newState = { ...state };\n  // Обновить статусы приватных чатов\n  if (state.contactGather[userId])\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      online,\n    };\n\n  // Обновить статус участника в группах\n  for (const group of Object.values(state.groupGather) as Group[]) {\n    if (!group.members) continue;\n    const member = group.members.find(m => m.userId === userId);\n    if (member) {\n      const index = group.members.indexOf(member);\n      group.members[index] = { ...member, online };\n    }\n  }\n  // Обновить статус операторов\n  const idx = newState.operators.findIndex(\n    it => it.userId === userId,\n  );\n  if (idx !== -1)\n    newState.operators[idx] = { ...newState.operators[idx], online };\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addGroupMessage = (state: ChatState, payload: GroupMessage) => {\n  const newState = { ...state };\n  const { groupId } = payload;\n  if (newState.groupGather[groupId]) {\n    if (newState.groupGather[groupId].messages) {\n      newState.groupGather[groupId].messages = [\n        ...(newState.groupGather[groupId].messages as GroupMessage[]),\n        payload,\n      ];\n    } else {\n      newState.groupGather[groupId] = {\n        ...state.groupGather[groupId],\n        messages: [payload],\n      };\n    }\n  }\n\n  // увеличиваем счетчик новых сообщений, если это не активная комната и сообщение не от нас\n  const { activeRoom } = newState;\n  if (\n    activeRoom &&\n    (activeRoom as Group).groupId !== groupId &&\n    payload.userId !== state.user.userId\n  ) {\n    return groupUnreadGather(\n      newState,\n      groupId,\n      (x?: number) => (x || 0) + 1,\n    );\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addPrivateMessage = (\n  state: ChatState,\n  payload: PrivateMessage,\n) => {\n  const newState = { ...state };\n  const contactId =\n    payload.contactId === state.user.userId\n      ? payload.userId\n      : payload.contactId;\n\n  // 1 добавляем сообщение\n  if (newState.contactGather[contactId].messages) {\n    newState.contactGather[contactId].messages = [\n      ...(newState.contactGather[contactId]\n        .messages as PrivateMessage[]),\n      payload,\n    ];\n  } else {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [payload],\n    };\n  }\n\n  // 2 если это сообщение в неактивной комнате и источник не мы (в соседней вкладке), то увеличиваем счетчик непрочитанных\n  if (\n    newState.activeRoom?.userId !== contactId &&\n    payload.userId !== state.user.userId\n  ) {\n    return contactUnreadGather(\n      newState,\n      contactId,\n      (x?: number) => (x || 0) + 1,\n    );\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst contactUnreadGather = (\n  state: ChatState,\n  userId: number,\n  predicate: (x?: number) => number,\n) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      unreadCount: predicate(\n        newState.contactGather[userId].unreadCount,\n      ),\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst groupUnreadGather = (\n  state: ChatState,\n  groupId: number,\n  predicate: (x?: number) => number,\n) => {\n  const newState = { ...state };\n\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      unreadCount: predicate(\n        newState.groupGather[groupId].unreadCount,\n      ),\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst revokeMessage = (\n  state: ChatState,\n  payload: MessageOperation,\n) => {\n  const { userId } = state.user;\n  const newState = { ...state };\n  const userName =\n    payload.username ||\n    newState.userGather[payload.userId as number].username;\n  if (payload.groupId) {\n    const { messages } = newState.groupGather[payload.groupId];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find(\n        message => message._id === payload._id,\n      );\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName,\n        };\n      }\n    }\n  } else {\n    const { messages } = newState.contactGather[\n      payload.contactId === userId\n        ? (payload.userId as number)\n        : (payload.contactId as number)\n    ];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find(\n        message => message._id === payload._id,\n      );\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName,\n        };\n      }\n    }\n  }\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst delContact = (state: ChatState, userId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.contactGather[userId];\n  delete newState.contactGather[userId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroup = (state: ChatState, groupId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.groupGather[groupId];\n  delete newState.groupGather[groupId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroupMember = (state: ChatState, data: GroupMap) => {\n  const newState = { ...state };\n\n  const group = newState.groupGather[data.groupId];\n  if (group) {\n    group.members = group.members?.filter(\n      it => it.userId !== data.userId,\n    );\n  }\n\n  return newState;\n};\n\nconst updateGroupInfo = (state: ChatState, group: Group) => {\n  const newState = { ...state };\n\n  const { groupId, name, notice } = group;\n  const info = newState.groupGather[groupId];\n  if (info) {\n    newState.groupGather[groupId] = { ...info, name, notice };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst updateUserInfo = (state: ChatState, user: User) => {\n  const newState = { ...state };\n\n  const { userId, username, avatar } = user;\n\n  if (newState.userGather[userId]) {\n    newState.userGather[userId] = {\n      ...newState.userGather[userId],\n      username,\n      avatar,\n    };\n  }\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      username,\n      avatar,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMember = (state: ChatState, payload: GroupMember) => {\n  const members: Contact[] = payload.members.map(member => ({\n    ...member,\n    isManager: 0,\n  }));\n\n  const newState = { ...state };\n\n  if (newState.groupGather[payload.groupId].members && members) {\n    newState.groupGather[payload.groupId].members = [\n      ...(state.groupGather[payload.groupId].members as Contact[]),\n      ...members,\n    ];\n  } else {\n    newState.groupGather[payload.groupId] = {\n      ...newState.groupGather[payload.groupId],\n      members,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst markPrivateMessagesRead = (\n  state: ChatState,\n  userId: number,\n) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    const updatedValue = { ...newState.contactGather[userId] };\n\n    if (updatedValue.messages) {\n      for (let i = 0; i < updatedValue.messages.length; i++)\n        updatedValue.messages[i] = {\n          ...updatedValue.messages[i],\n          status: 1,\n        };\n    }\n    newState.contactGather[userId] = updatedValue;\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addPrivateMessages = (\n  state: ChatState,\n  data: AddPrivateMessages,\n) => {\n  const newState = { ...state };\n\n  const { messages, contactId } = data;\n\n  if (newState.contactGather[contactId]) {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [\n        ...(messages || []),\n        ...(newState.contactGather[contactId].messages || []),\n      ],\n      noMoreData: messages?.length\n        ? messages?.length < data.pageSize\n        : false,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMessages = (\n  state: ChatState,\n  data: AddGroupMessages,\n) => {\n  const newState = { ...state };\n\n  const { groupId, messages, userArr: users } = data;\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      messages: [\n        ...(messages || []),\n        ...(newState.groupGather[groupId].messages || []),\n      ],\n      noMoreData: messages?.length\n        ? messages?.length < data.pageSize\n        : false,\n    };\n  }\n\n  newState.userGather = { ...newState.userGather };\n  for (const user of users) {\n    if (!newState.userGather[user.userId]) {\n      newState.userGather[user.userId] = user;\n    }\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst setActiveRoom = (state: ChatState, data: SetActiveRoom) => {\n  //if (state.activeRoom && data.ifNotExists) return state;\n  return {\n    ...state,\n    chatOld:\n      state.activeRoom != null ? { ...state.activeRoom } : null,\n    activeRoom: data.groupId\n      ? state.groupGather[data.groupId]\n      : data.contactId\n      ? state.contactGather[data.contactId]\n      : null,\n  };\n};\n\nconst setToken = (state: ChatState, token: string): ChatState => {\n  return {\n    ...state,\n    token,\n  };\n};\n\nconst clearUser = (state: ChatState): ChatState => {\n  return {\n    ...state,\n    token: '',\n    user: emptyUser,\n  };\n};\n\nconst setConference = (\n  state: ChatState,\n  conference: ConferenceData,\n): ChatState => {\n  return {\n    ...state,\n    conference: {\n      data: { ...conference },\n      joined: conference?.userId === state.user.userId,\n      ringPlayed: conference?.userId !== state.user.userId,\n    },\n  };\n};\n\nconst pauseConference = (\n  state: ChatState,\n  conference: ConferenceData,\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: {\n      data: { ...state.conference.data },\n      joined: false,\n      ringPlayed: false,\n    },\n  };\n};\n\nconst stopConference = (\n  state: ChatState,\n  conference: ConferenceData,\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: { data: null, joined: false, ringPlayed: false },\n  };\n};\n\nfunction chatReducer(state: ChatState, action: Action): ChatState {\n  switch (action.type) {\n    case 'SET_GROUP_GATHER':\n      return {\n        ...state,\n        groupGather: {\n          ...state.groupGather,\n          [(action.payload as Group)\n            .groupId]: action.payload as Group,\n        },\n      };\n    case 'SET_CONTACT_GATHER':\n      return {\n        ...state,\n        contactGather: {\n          ...state.contactGather,\n          [(action.payload as Contact)\n            .userId]: action.payload as Contact,\n        },\n      };\n    case 'DEL_GROUP':\n      return delGroup(state, action.payload as number);\n    case 'DEL_GROUP_MEMBER':\n      return delGroupMember(state, action.payload as GroupMap);\n    case 'DEL_CONTACT':\n      return delContact(state, (action.payload as Contact).userId);\n    case 'SET_USER_GATHER':\n      return {\n        ...state,\n        userGather: {\n          ...state.userGather,\n          [(action.payload as User).userId]: action.payload as User,\n        },\n      };\n    case 'UPDATE_ACTIVE_ROOM':\n      return { ...state, activeRoom: getActiveRoom(state) };\n    case 'SET_ACTIVE_ROOM':\n      return setActiveRoom(state, action.payload as SetActiveRoom);\n    case 'USER_ONLINE':\n      return setUserOnline(state, action.payload as number, 1);\n    case 'USER_OFFLINE':\n      return setUserOnline(state, action.payload as number, 0);\n    case 'ADD_GROUP_MESSAGE':\n      return addGroupMessage(state, action.payload as GroupMessage);\n    case 'ADD_PRIVATE_MESSAGE':\n      return addPrivateMessage(\n        state,\n        action.payload as PrivateMessage,\n      );\n    case 'ADD_GROUP_UNREAD_GATHER':\n      return groupUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1,\n      );\n    case 'ADD_CONTACT_UNREAD_GATHER':\n      return contactUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1,\n      );\n    case 'SET_TYPING':\n      return { ...state, typing: action.payload as SetTyping };\n    case 'LOSE_GROUP_UNREAD_GATHER':\n      return groupUnreadGather(\n        state,\n        action.payload as number,\n        () => 0,\n      );\n    case 'LOSE_CONTACT_UNREAD_GATHER':\n      return contactUnreadGather(\n        state,\n        action.payload as number,\n        () => 0,\n      );\n    case 'REVOKE_MESSAGE':\n      return revokeMessage(state, action.payload as MessageOperation);\n    case 'UPDATE_GROUP_INFO':\n      return updateGroupInfo(state, action.payload as Group);\n    case 'UPDATE_USER_INFO':\n      return updateUserInfo(state, action.payload as User);\n    case 'ADD_GROUP_MEMBER':\n      return addGroupMember(state, action.payload as GroupMember);\n    case 'SET_CONFERENCE':\n      return setConference(state, action.payload as ConferenceData);\n    case 'JOIN_CONFERENCE':\n      return {\n        ...state,\n        conference: {\n          data: { ...(action.payload as ConferenceData) },\n          joined: true,\n          ringPlayed: false,\n        },\n      };\n    case 'PAUSE_CONFERENCE':\n      return pauseConference(state, action.payload as ConferenceData);\n    case 'STOP_CONFERENCE':\n      return stopConference(state, action.payload as ConferenceData);\n    case 'MARK_PRIVATE_MESSAGES_READ':\n      return markPrivateMessagesRead(state, action.payload as number);\n    case 'ADD_PRIVATE_MESSAGES':\n      return addPrivateMessages(\n        state,\n        action.payload as AddPrivateMessages,\n      );\n    case 'ADD_GROUP_MESSAGES':\n      return addGroupMessages(\n        state,\n        action.payload as AddGroupMessages,\n      );\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload as boolean,\n        error: '',\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload as string,\n        success: undefined,\n      };\n    case 'SET_SUCCES':\n      return {\n        ...state,\n        success: action.payload as string,\n        error: undefined,\n      };\n    case 'SET_TOKEN':\n      return setToken(state, action.payload as string);\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload as User,\n      };\n    case 'CLEAR_USER':\n      return clearUser(state);\n    case 'CLEAR_CHAT_DATA':\n      return {\n        ...state,\n        activeRoom: null,\n        groupGather: {},\n        userGather: {},\n        contactGather: {},\n        conference: {\n          data: null,\n          joined: false,\n          ringPlayed: false,\n        },\n        typing: null,\n      };\n    case 'SET_OPERATORS':\n      return {\n        ...state,\n        operators: action.payload as Contact[],\n      };\n  }\n\n  return state;\n}\n\nexport type ChatDispatch = React.Dispatch<Action>;\nconst emptyDispatch: ChatDispatch = () => null;\n\ntype ChatProviderProps = {\n  defLang: string | undefined;\n  token: string;\n  children: JSX.Element | JSX.Element[];\n};\n\nexport const ChatContext = React.createContext({\n  state: emptyChatState,\n  dispatch: emptyDispatch,\n});\n\nexport const ChatProvider: React.FC<ChatProviderProps> = (\n  props: ChatProviderProps,\n) => {\n  emptyUser.langCode = props.defLang;\n\n  const token = props.token;\n  const chatState: ChatState = {\n    ...emptyChatState,\n    token,\n  };\n\n  const [state, dispatch] = React.useReducer(chatReducer, chatState);\n\n  return (\n    <ChatContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </ChatContext.Provider>\n  );\n};\n","import React, { createContext, useCallback, useContext } from 'react';\nimport { ChatContext } from './ChatContext';\nimport axios, { AxiosError, AxiosInstance } from 'axios';\nimport {\n  Contact,\n  Group,\n  PagingResponse,\n  PrivateMessage,\n} from '../types';\n\nexport interface IRestContext {\n  apiUrl: string;\n  pageSize: number;\n  fetch: AxiosInstance | null;\n  getPrivateMessages: (chat: Contact) => Promise<void>;\n  getGroupMessages: (chat: Group) => Promise<void>;\n  getUserByMmk: (\n    mmkId: string | null,\n    guid: string | null,\n  ) => Promise<number | undefined>;\n}\nconst initialContext = {} as IRestContext;\n\nexport const RestContext: React.Context<IRestContext> = createContext(\n  initialContext,\n);\n\ntype RestProviderProps = {\n  baseURLApi: string;\n  pageSize: number;\n  children: JSX.Element;\n};\n\nexport const RestProvider: React.FC<RestProviderProps> = ({\n  baseURLApi,\n  pageSize,\n  children,\n}: RestProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n\n  const fetch: AxiosInstance = axios.create({\n    timeout: 60000, // Таймаут минута\n    baseURL: baseURLApi,\n    headers: {\n      'Cache-Control': 'no-cache',\n      Pragma: 'no-cache',\n      Authorization: `Bearer ${state.token}`,\n    },\n    withCredentials: false,\n  });\n\n  const getPrivateMessages = useCallback(\n    async (chat: Contact, callback?: () => void) => {\n      const contactId = chat.userId;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        const { data } = await fetch.get('/contact/messages', {\n          params: {\n            contactId,\n            current,\n            pageSize,\n          },\n        });\n\n        if (data) {\n          dispatch({\n            type: 'ADD_PRIVATE_MESSAGES',\n            payload: {\n              pageSize,\n              contactId,\n              messages: data as PrivateMessage[],\n            },\n          });\n          if (callback) {\n            callback();\n          }\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: 'SET_ERROR', payload: err.message });\n      } finally {\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    },\n    [dispatch],\n  );\n\n  const getGroupMessages = useCallback(\n    async (chat: Group) => {\n      const { groupId } = chat;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        const { data }: { data: PagingResponse } = await fetch.get(\n          '/group/messages',\n          {\n            params: {\n              groupId,\n              current,\n              pageSize,\n            },\n          },\n        );\n        if (data) {\n          dispatch({\n            type: 'ADD_GROUP_MESSAGES',\n            payload: {\n              pageSize,\n              groupId,\n              ...data,\n            },\n          });\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: 'SET_ERROR', payload: err.message });\n      } finally {\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    },\n    [dispatch],\n  );\n\n  const getUserByMmk = async (\n    mmkId: string | null,\n    guid: string | null,\n  ) => {\n    try {\n      const { data }: { data: number } = await fetch.get(\n        '/contact/find',\n        {\n          params: {\n            mmkId,\n            guid,\n          },\n        },\n      );\n      if (data != null) {\n        return data;\n      }\n    } catch (error) {\n      console.log('err getUserByMmk', error);\n    }\n  };\n  return (\n    <RestContext.Provider\n      value={{\n        apiUrl: baseURLApi,\n        pageSize,\n        fetch,\n        getPrivateMessages,\n        getGroupMessages,\n        getUserByMmk,\n      }}\n    >\n      {children}\n    </RestContext.Provider>\n  );\n};\n","import React, { createContext, useContext, useEffect } from 'react';\nimport { Socket } from 'socket.io-client';\nimport { useSocket } from '../hooks/useSocket';\nimport {\n  ChatData,\n  Contact,\n  Group,\n  GroupMessage,\n  JoinGroup,\n  MessageOperation,\n  PrivateMessage,\n  SetTyping,\n  User,\n  ConferenceData,\n  SetActiveRoom,\n  GroupMap,\n} from '../types';\nimport { ChatContext } from './ChatContext';\n\n// Формат ответа сервера\ninterface ServerRes {\n  code: number;\n  msg: string;\n  data: unknown;\n}\n\nexport interface ISocketContext {\n  socket: Socket | null;\n  online: boolean;\n}\nconst initialContext = {\n  online: false,\n} as ISocketContext;\n\nexport const SocketContext: React.Context<ISocketContext> = createContext(\n  initialContext,\n);\n\ntype SocketProviderProps = {\n  wsUrl: string;\n  wsPath: string;\n  children: JSX.Element;\n};\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({\n  wsUrl,\n  wsPath,\n  children,\n}: SocketProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n  const {\n    socket,\n    online,\n    disconnectSocket,\n    connectSocket,\n  } = useSocket(wsUrl, wsPath, state.token);\n\n  useEffect(() => {\n    if (state.token) {\n      connectSocket();\n    }\n    return () => {\n      disconnectSocket();\n    };\n  }, [state.token, connectSocket]);\n\n  useEffect(() => {\n    if (!state.token) disconnectSocket();\n  }, [state.token, disconnectSocket]);\n\n  // listen unauthorized event\n  useEffect(() => {\n    const listener = (msg: string) => {\n      console.log('unauthorized msg', msg);\n      dispatch({ type: 'CLEAR_USER' });\n    };\n\n    // attach\n    socket?.on('unauthorized', listener);\n    // detatch\n    return () => {\n      socket?.off('unauthorized', listener);\n    };\n  }, [socket?.id]);\n\n  // listen chatData event\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const payload = res.data as ChatData;\n      const groupArr = payload.groupData;\n      const contactArr = payload.contactData;\n      const userArr = payload.userData;\n      dispatch({ type: 'CLEAR_CHAT_DATA' });\n      dispatch({ type: 'SET_USER', payload: payload.user });\n      if (groupArr.length) {\n        for (const group of groupArr) {\n          socket?.emit('joinGroupSocket', {\n            groupId: group.groupId,\n          });\n          dispatch({ type: 'SET_GROUP_GATHER', payload: group });\n        }\n      }\n      if (contactArr.length) {\n        for (const contact of contactArr) {\n          socket?.emit('joinPrivateSocket', {\n            contactId: contact.userId,\n          });\n          dispatch({ type: 'SET_CONTACT_GATHER', payload: contact });\n        }\n      }\n      dispatch({\n        type: 'SET_OPERATORS',\n        payload: payload.operatorData,\n      });\n      if (userArr.length) {\n        for (const user_ of userArr) {\n          dispatch({ type: 'SET_USER_GATHER', payload: user_ });\n        }\n      }\n      dispatch({ type: 'UPDATE_ACTIVE_ROOM' });\n      dispatch({\n        type: 'SET_CONFERENCE',\n        payload: payload.conferenceData,\n      });\n    };\n    socket?.on('chatData', listener);\n    return () => {\n      socket?.off('chatData', listener);\n    };\n  }, [socket?.id]);\n\n  // listen user online\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: 'USER_ONLINE', payload: res.data as number });\n    };\n    socket?.on('userOnline', listener);\n    return () => {\n      socket?.off('userOnline', listener);\n    };\n  }, [socket?.id]);\n\n  // listen user offline\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: 'USER_OFFLINE', payload: res.data as number });\n    };\n    socket?.on('userOffline', listener);\n    return () => {\n      socket?.off('userOffline', listener);\n    };\n  }, [socket?.id]);\n\n  // listen private socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      console.log('Успешно вошел в приватный чат');\n    };\n    socket?.on('joinPrivateSocket', listener);\n    return () => {\n      socket?.off('joinPrivateSocket', listener);\n    };\n  }, [socket?.id]);\n\n  // listen group socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as JoinGroup;\n      const newUser: Contact = data.user;\n      newUser.online = 1;\n      const { group } = data;\n      const groupObj = state.groupGather[group.groupId];\n      // Информация о присоединении к группе новых пользователей\n      if (\n        groupObj &&\n        !groupObj.members?.find(\n          member => member.userId === newUser.userId,\n        )\n      ) {\n        newUser.isManager = 0;\n        groupObj.members?.push(newUser);\n        // Vue.prototype.$message.info(res.msg);\n      }\n      dispatch({ type: 'SET_USER_GATHER', payload: newUser });\n    };\n    socket?.on('joinGroupSocket', listener);\n    return () => {\n      socket?.off('joinGroupSocket', listener);\n    };\n  }, [socket?.id, state.groupGather]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMessage;\n      dispatch({ type: 'ADD_GROUP_MESSAGE', payload: data });\n      const { activeRoom } = state;\n      if (\n        activeRoom &&\n        (activeRoom as Group).groupId === data.groupId &&\n        data.userId !== state.user.userId\n      ) {\n        socket?.emit('markAsRead', {\n          groupId: data.groupId,\n          _id: data._id,\n        });\n      }\n    };\n\n    socket?.on('groupMessage', listener);\n    return () => {\n      socket?.off('groupMessage', listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as PrivateMessage;\n      if (\n        data.contactId === state.user.userId ||\n        data.userId === state.user.userId\n      ) {\n        dispatch({\n          type: 'ADD_PRIVATE_MESSAGE',\n          payload: data,\n        });\n\n        // если есть активная комната и это приватная комната (!groupId && userId) с отправителем сообщения (userId)\n        if (\n          state.activeRoom &&\n          !(state.activeRoom as Group).groupId &&\n          state.activeRoom?.userId === data.userId\n        ) {\n          socket?.emit('markAsRead', {\n            contactId: data.userId,\n            _id: data._id,\n          });\n        }\n      }\n    };\n\n    socket?.on('privateMessage', listener);\n    return () => {\n      socket?.off('privateMessage', listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      if (timer) clearTimeout(timer);\n      dispatch({\n        type: 'SET_TYPING',\n        payload: res.data as SetTyping,\n      });\n      timer = setTimeout(() => {\n        dispatch({ type: 'SET_TYPING', payload: null });\n      }, 1000);\n    };\n    socket?.on('typing', listener);\n    return () => {\n      if (timer) clearTimeout(timer);\n      socket?.off('typing', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      if (data.userId === state.user.userId) {\n        if (data.groupId) {\n          dispatch({\n            type: 'LOSE_GROUP_UNREAD_GATHER',\n            payload: data.groupId,\n          });\n        } else {\n          dispatch({\n            type: 'LOSE_CONTACT_UNREAD_GATHER',\n            payload: data.contactId,\n          });\n        }\n      } else {\n        if (data.contactId)\n          dispatch({\n            type: 'MARK_PRIVATE_MESSAGES_READ',\n            payload: data.userId,\n          });\n      }\n    };\n    socket?.on('markAsRead', listener);\n    return () => {\n      socket?.off('markAsRead', listener);\n    };\n  }, [socket?.id, state.user.userId]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      dispatch({ type: 'REVOKE_MESSAGE', payload: data });\n    };\n    socket?.on('revokeMessage', listener);\n    return () => {\n      socket?.off('revokeMessage', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: 'SET_GROUP_GATHER',\n        payload: res.data as Group,\n      });\n    };\n    socket?.on('addGroup', listener);\n    return () => {\n      socket?.off('addGroup', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: 'SET_CONTACT_GATHER', payload: data });\n      dispatch({ type: 'SET_USER_GATHER', payload: data });\n      socket?.emit('joinPrivateSocket', {\n        contactId: data.userId,\n      });\n    };\n    socket?.on('addContact', listener);\n    return () => {\n      socket?.off('addContact', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMap;\n      if (data.userId === state.user.userId) {\n        // если удаляем себя из группы\n        dispatch({ type: 'DEL_GROUP', payload: data.groupId });\n      } else {\n        dispatch({ type: 'DEL_GROUP_MEMBER', payload: data });\n      }\n    };\n    socket?.on('deleteGroup', listener);\n    return () => {\n      socket?.off('deleteGroup', listener);\n    };\n  }, [socket?.id, state.user]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: 'DEL_CONTACT', payload: data });\n    };\n    socket?.on('deleteContact', listener);\n    return () => {\n      socket?.off('deleteContact', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as Group;\n      dispatch({ type: 'UPDATE_GROUP_INFO', payload: data });\n    };\n    socket?.on('updateGroupInfo', listener);\n    return () => {\n      socket?.off('updateGroupInfo', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as User;\n      dispatch({ type: 'UPDATE_USER_INFO', payload: data });\n    };\n    socket?.on('updateUserInfo', listener);\n    return () => {\n      socket?.off('updateUserInfo', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const { group, user: newUser } = res.data as JoinGroup;\n\n      if (!state.groupGather[group.groupId]) {\n        console.log('joined to a new group');\n        // Если группы еще у нас нет, то получаем информацию о пользователях в группе\n        socket?.emit('chatData');\n      } else if (newUser.userId !== state.user.userId) {\n        // Новые пользователи присоединяются к группе\n        dispatch({\n          type: 'ADD_GROUP_MEMBER',\n          payload: {\n            groupId: group.groupId,\n            members: [newUser],\n          },\n        });\n      }\n    };\n    socket?.on('joinGroup', listener);\n    return () => {\n      socket?.off('joinGroup', listener);\n    };\n  }, [socket?.id, state.user, state.groupGather]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: 'SET_CONFERENCE',\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on('startConference', listener);\n    return () => {\n      socket?.off('startConference', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: 'PAUSE_CONFERENCE',\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on('pauseConference', listener);\n    return () => {\n      socket?.off('pauseConference', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: 'STOP_CONFERENCE',\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on('stopConference', listener);\n    return () => {\n      socket?.off('stopConference', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n    };\n    socket?.on('addOperator', listener);\n    return () => {\n      socket?.off('addOperator', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: 'SET_ACTIVE_ROOM',\n        payload: res.data as SetActiveRoom,\n      });\n    };\n    socket?.on('setActiveRoom', listener);\n    return () => {\n      socket?.off('setActiveRoom', listener);\n    };\n  }, [socket?.id]);\n\n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport io, { Socket } from \"socket.io-client\";\n\nexport const useSocket = (\n  url: string,\n  path: string,\n  accessToken: string\n): {\n  socket: Socket | null;\n  online: boolean;\n  connectSocket: () => void;\n  disconnectSocket: () => void;\n} => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n\n  const connectSocket = useCallback(() => {\n    // console.log(\"do connect\");\n    const socketTemp = io(url, {\n      path,\n      reconnection: true,\n      extraHeaders: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    setSocket(socketTemp);\n  }, [url, path, accessToken]);\n\n  const disconnectSocket = useCallback(() => {\n    // console.log(\"do disconnect\");\n    socket?.disconnect();\n    setSocket(null);\n  }, [socket]);\n\n  const [online, setOnline] = useState<boolean>(false);\n\n  useEffect(() => {\n    setOnline(socket?.connected ? true : false);\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"connect\", () => {\n      // console.log(\"connected\");\n      setOnline(true);\n      socket.emit(\"chatData\");\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"disconnect\", () => {\n      // console.log(\"disconnected\");\n      setOnline(false);\n    });\n  }, [socket]);\n\n  return {\n    socket,\n    online,\n    disconnectSocket,\n    connectSocket,\n  };\n};\n","import React from 'react';\nimport { IconButton, Tooltip } from '@mui/material';\nimport SettingsSuggestIcon from '@mui/icons-material/SettingsSuggest';\nimport SettingsVoiceIcon from '@mui/icons-material/SettingsVoice';\nimport VideoSettingsIcon from '@mui/icons-material/VideoSettings';\nimport { ChatContext } from '../context/ChatContext';\nimport { useTranslation } from 'react-i18next';\ntype CheckAudiVideoPermProps = {\n  audio: boolean;\n  video: boolean;\n};\n\nconst CheckAudiVideoPerm: React.FC<CheckAudiVideoPermProps> = ({\n  audio,\n  video,\n}: CheckAudiVideoPermProps) => {\n  const { t } = useTranslation();\n  //const [havePermissions, setHavePermissions] = useState(false);\n  const { dispatch } = React.useContext(ChatContext);\n  const checkPermissions = () => {\n    const permissions = navigator.mediaDevices.getUserMedia({\n      audio,\n      video,\n    });\n    permissions\n      .then(data => {\n        console.log('permissions', data);\n        dispatch({\n          type: 'SET_SUCCES',\n          payload: t('CHAT.CONFERENCE.ALLOK'),\n        });\n      })\n      .catch(err => {\n        let payload = t('CHAT.CONFERENCE.ErrorAny');\n        if (err.name === 'NotFoundError') {\n          payload = t('CHAT.CONFERENCE.NotFoundError');\n        }\n        if (err.name === 'NotAllowedError') {\n          payload = t('CHAT.CONFERENCE.NotAllowedError');\n        }\n\n        dispatch({\n          type: 'SET_ERROR',\n          payload,\n        });\n        //setHavePermissions(false);\n        console.log('err', `${err.name} : ${err.message}`);\n      });\n  };\n\n  const title =\n    audio && video\n      ? t('CHAT.CONFERENCE.CheckCamMic')\n      : audio\n      ? t('CHAT.CONFERENCE.CheckMic')\n      : t('CHAT.CONFERENCE.CheckCam');\n  return (\n    <Tooltip title={title}>\n      <IconButton\n        aria-label=\"check\"\n        onClick={() => checkPermissions()}\n        size=\"large\"\n      >\n        {audio && video ? (\n          <SettingsSuggestIcon />\n        ) : audio ? (\n          <SettingsVoiceIcon />\n        ) : (\n          <VideoSettingsIcon />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default CheckAudiVideoPerm;\n","import React from \"react\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { Alert, Snackbar } from \"@mui/material\";\n\nconst ChatAlert: React.FC = () => {\n  // const { t } = useTranslation();\n  //const [havePermissions, setHavePermissions] = useState(false);\n  const {\n    state: { error, success },\n    dispatch\n  } = React.useContext(ChatContext);\n\n  const handleClose = () => {\n    dispatch({ type: \"SET_ERROR\", payload: undefined });\n    dispatch({ type: \"SET_SUCCES\", payload: undefined });\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={!!error || !!success}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <Alert onClose={handleClose} severity={error ? \"error\" : \"success\"}>\n        {error ? error : success}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default ChatAlert;\n","import * as React from 'react';\nimport {\n  Container,\n  Box,\n  Grid,\n  useMediaQuery,\n  Paper,\n  IconButton,\n  Tooltip,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material/styles';\nimport { Room, RoomList, Conference } from '../components';\nimport { ChatContext } from '../context/ChatContext';\nimport { RestContext } from '../context/RestContext';\nimport { SocketContext } from '../context/SocketContext';\nimport {\n  ChatPageProps,\n  Group,\n  Contact,\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  ConferenceData,\n} from '../types';\nimport { getParam, isEmpty, allMessCount } from '../utils/common';\nimport ConferenceCall from '../components/ConferenceCall';\nimport { ArrowForward } from '@mui/icons-material';\nimport { useTranslation } from 'react-i18next';\nimport CheckAudiVideoPerm from '../components/CheckAudiVideoPerm';\nimport ChatAlert from '../components/Alert';\n\n// Отключили проигрыш звука\n// const getRingAudio = (): HTMLAudioElement => {\n//   const audio = new Audio(\n//     process.env.PUBLIC_URL + '/audio/ring-in.ogg',\n//   );\n//   audio.loop = true;\n//   return audio;\n// };\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    height: '100%',\n    overflow: 'hidden',\n    padding: 0,\n  },\n  innerGrid: {\n    height: '100%',\n    width: '100%',\n  },\n  conAbsOnConf: {\n    position: 'absolute',\n    top: 42,\n    left: 25,\n    zIndex: 1000,\n\n    margin: theme.spacing(3),\n  },\n}));\n\nexport const ChatPage: React.FC<ChatPageProps> = ({\n  activeGroupId,\n  activeChatUserId,\n  inModale = true,\n}: ChatPageProps) => {\n  const classes = useStyles();\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down('sm'),\n  );\n  const { t } = useTranslation();\n  const { state, dispatch } = React.useContext(ChatContext);\n  const { socket } = React.useContext(SocketContext);\n\n  const {\n    apiUrl,\n    pageSize,\n    getPrivateMessages,\n    getGroupMessages,\n    getUserByMmk,\n  } = React.useContext(RestContext);\n\n  // const [ringAudio] = React.useState(getRingAudio());\n\n  const onExitActiveRoom = React.useCallback(() => {\n    dispatch({\n      type: 'SET_ACTIVE_ROOM',\n      payload: {},\n    });\n  }, [dispatch]);\n\n  const onNeedMoreMessages = React.useCallback(\n    async (chat: ChatRoom) => {\n      if ((chat as Group).groupId)\n        await getGroupMessages(chat as Group);\n      else await getPrivateMessages(chat as Contact);\n    },\n    [getPrivateMessages, getGroupMessages],\n  );\n\n  const onMessageDelete = React.useCallback(\n    (chat: ChatRoom, message: ChatMessage) => {\n      socket?.emit('revokeMessage', {\n        groupId: (chat as Group).groupId, // Идентификатор группы\n        contactId: chat.userId, // Идентификатор контакта\n        _id: message._id, // Идентификатор удаленного сообщения\n      });\n    },\n    [socket?.id],\n  );\n\n  const onTyping = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit('typing', {\n        groupId: (chat as Group)?.groupId,\n        contactId: chat?.userId,\n      });\n    },\n    [socket?.id],\n  );\n\n  const onSendMessage = React.useCallback(\n    (chat: ChatRoom, data: SendMessage) => {\n      if ((chat as Group).groupId) {\n        socket?.emit('groupMessage', {\n          groupId: (chat as Group)?.groupId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size,\n        });\n      } else {\n        socket?.emit('privateMessage', {\n          contactId: chat?.userId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size,\n        });\n      }\n    },\n    [socket?.id],\n  );\n\n  const onChangeChat = React.useCallback(\n    (chat: ChatRoom) => {\n      dispatch({\n        type: 'SET_ACTIVE_ROOM',\n        payload: {\n          groupId: (chat as Group)?.groupId,\n          contactId: chat?.userId,\n        },\n      });\n      onEnterRoom(chat);\n    },\n    [socket?.id, dispatch],\n  );\n\n  const onEnterRoom = React.useCallback(\n    (chat: ChatRoom) => {\n      if (!chat.messages || chat.messages.length === 0) return;\n      if ((chat as Group).groupId) {\n        socket?.emit('markAsRead', {\n          groupId: (chat as Group).groupId,\n          _id: chat.messages[chat.messages.length - 1]._id,\n        });\n      } else {\n        socket?.emit('markAsRead', {\n          contactId: chat.userId,\n          _id: chat.messages[chat.messages.length - 1]._id,\n        });\n      }\n    },\n    [socket?.id],\n  );\n\n  const onVideoCall = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit('startConference', {\n        groupId: (chat as Group).groupId,\n        contactId: chat.userId,\n      });\n    },\n    [socket?.id],\n  );\n\n  const onVideoEnd = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit('stopConference', {\n          id: conference?.id,\n        });\n    },\n    [socket?.id],\n  );\n\n  const onConferencePause = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit('pauseConference', {\n          id: conference.id,\n        });\n    },\n    [socket?.id],\n  );\n\n  const onConferenceCallAccept = React.useCallback(\n    (conference: ConferenceData) => {\n      // отправляем resumeConference чтобы возобновить запись\n      if (conference?.id != null)\n        socket?.emit('resumeConference', {\n          id: conference.id,\n        });\n      dispatch({ type: 'JOIN_CONFERENCE', payload: conference });\n    },\n    [socket?.id, dispatch],\n  );\n\n  const onOperatorAdd = React.useCallback(\n    (group: Group, operator: Contact) => {\n      socket?.emit('addOperator', {\n        groupId: group.groupId,\n        operatorId: operator.userId,\n      });\n    },\n    [socket?.id],\n  );\n\n  const onLeaveGroup = React.useCallback(\n    (group: Group) => {\n      socket?.emit('deleteGroup', {\n        groupId: group.groupId,\n      });\n    },\n    [socket?.id],\n  );\n\n  React.useEffect(() => {\n    if (activeChatUserId != null && !isEmpty(state.contactGather)) {\n      const Chat = Object.values(state.contactGather).find(\n        item => item.userId === activeChatUserId,\n      );\n      onChangeChat(Chat);\n    }\n\n    const mmkId = getParam('mmk');\n    const guid = getParam('guid');\n    if (\n      (mmkId != null || guid != null) &&\n      !isEmpty(state.contactGather)\n    ) {\n      //console.log(\"mmkId\", mmkId);\n      const changeChatByMmkId = async () => {\n        const userId = await getUserByMmk(mmkId, guid);\n        if (userId != null) {\n          const Chat = Object.values(state.contactGather).find(\n            item => item.userId === userId,\n          );\n          onChangeChat(Chat);\n        }\n      };\n      changeChatByMmkId();\n    }\n  }, [state.contactGather]);\n\n  React.useEffect(() => {\n    if (activeGroupId != null && !isEmpty(state.groupGather)) {\n      const onlyChat = Object.values(state.groupGather).find(\n        item => item.groupId === activeGroupId,\n      );\n\n      if (!isEmpty(onlyChat)) {\n        onChangeChat(onlyChat);\n      }\n    }\n  }, [state.groupGather]);\n\n  // Отключили проигрыш звука\n  // React.useEffect(() => {\n  //   if (\n  //     state.conference.data?.id &&\n  //     state.conference.ringPlayed &&\n  //     !state.conference.joined\n  //   )\n  //     ringAudio.play();\n  //   else ringAudio.pause();\n  // }, [state.conference.data?.id, state.conference.ringPlayed]);\n\n  // console.log('state--', state);\n  const renderRoom = state.activeRoom != null && (\n    <Room\n      apiUrl={apiUrl}\n      user={state.user}\n      users={state.userGather}\n      operators={state.operators}\n      chat={state.activeRoom}\n      typing={state.typing}\n      conference={state.conference.data}\n      conferenceJoined={state.conference.joined}\n      loading={state.loading}\n      pageSize={pageSize}\n      onExitRoom={onExitActiveRoom}\n      onEnterRoom={onEnterRoom}\n      onNeedMoreMessages={onNeedMoreMessages}\n      onMeesageDelete={onMessageDelete}\n      onTyping={onTyping}\n      onSendMessage={onSendMessage}\n      onVideoCall={onVideoCall}\n      onVideoEnd={onVideoEnd}\n      onConferencePause={onConferencePause}\n      onOperatorAdd={onOperatorAdd}\n      onLeaveGroup={onLeaveGroup}\n    />\n  );\n\n  const GetRoomList = () => (\n    <RoomList\n      apiUrl={apiUrl}\n      user={state.user}\n      activeRoom={state.activeRoom}\n      groups={Object.values(state.groupGather)}\n      contacts={Object.values(state.contactGather)}\n      typing={state.typing}\n      onChangeChat={onChangeChat}\n    />\n  );\n\n  const GetConferenceCall = () =>\n    state.conference.data && (\n      <ConferenceCall\n        apiUrl={apiUrl}\n        contact={\n          state.contactGather[\n            state.user.userId === state.conference.data.userId\n              ? state.conference.data.contactId\n              : state.conference.data.userId\n          ]\n        }\n        conference={state.conference.data}\n        onAccept={onConferenceCallAccept}\n      />\n    );\n\n  const GetConference = () => (\n    <Conference\n      conference={state.conference.data}\n      onClose={onConferencePause}\n      langCode={state.user.langCode}\n    />\n  );\n\n  // const getMessCount = (data: GroupGather) => {\n  //   const messages = ;\n  //   return messages.reduce((a: number, b: number) => a + b, 0);\n  // };\n\n  const depsContats = state.conference.data?.id\n    ? [\n        state.conference.joined,\n        state.conference.data?.id,\n        state.conference.data?.contactId,\n        state.activeRoom?.groupId,\n        state.activeRoom?.userId,\n      ]\n    : [\n        state.activeRoom,\n        allMessCount(state.groupGather),\n        allMessCount(state.contactGather),\n      ];\n\n  const Contacts = React.useMemo(\n    () =>\n      state.conference.data?.id != null ? (\n        <>\n          {state.conference.joined ? (\n            <GetConference />\n          ) : (\n            <GetConferenceCall />\n          )}\n          <Box className={classes.conAbsOnConf}>\n            <Paper style={{ borderRadius: 8 }}>\n              <Box display=\"flex\" flexDirection=\"row\" my={3}>\n                {((isEmpty(state.activeRoom) && isMobile) ||\n                  (!isEmpty(state.activeRoom) && !isMobile)) && (\n                  <>\n                    <CheckAudiVideoPerm audio={true} video={false} />\n                    <CheckAudiVideoPerm audio={false} video={true} />\n                  </>\n                )}\n\n                {isEmpty(state.activeRoom) &&\n                  state.chatOld != null &&\n                  isMobile && (\n                    <Tooltip title={t('CHAT.CONFERENCE.BACK')}>\n                      <IconButton\n                        aria-label=\"check\"\n                        onClick={() =>\n                          state.chatOld != null &&\n                          onChangeChat(state.chatOld)\n                        }\n                        size=\"large\"\n                      >\n                        <ArrowForward />\n                      </IconButton>\n                    </Tooltip>\n                  )}\n              </Box>\n            </Paper>\n          </Box>\n        </>\n      ) : (\n        <GetRoomList />\n      ),\n\n    depsContats,\n  );\n\n  //console.log('inModale -- ', inModale);\n\n  return (\n    <Container\n      maxWidth=\"lg\"\n      className={classes.root}\n      sx={theme => ({\n        width: inModale\n          ? `calc(100vw - ${theme.spacing(8)})`\n          : '100%',\n      })}\n    >\n      {isMobile ? (\n        <>\n          {Contacts}\n          {renderRoom}\n        </>\n      ) : (\n        <Grid container spacing={1} className={classes.innerGrid}>\n          <Grid\n            item\n            sm={state.conference.data?.id != null ? 6 : 4}\n            className={classes.innerGrid}\n          >\n            {Contacts}\n          </Grid>\n\n          <Grid\n            item\n            sm={state.conference.data?.id != null ? 6 : 8}\n            className={classes.innerGrid}\n          >\n            {renderRoom}\n          </Grid>\n        </Grid>\n      )}\n\n      <ChatAlert />\n    </Container>\n  );\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport en from './en.json';\nimport fr from './fr.json';\nimport ru from './ru.json';\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\nconst getLang = () => {\n  const str = localStorage.getItem('user');\n  if (str) {\n    const user = JSON.parse(str);\n    return user?.lang;\n  }\n  return 'ru';\n};\n\nconst lang = getLang();\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      ru: { translations: ru },\n      en: { translations: en },\n      fr: { translations: fr },\n    },\n    lng: lang,\n    load: 'languageOnly',\n    fallbackLng: lang,\n    debug: true,\n\n    // have a common namespace used around the full app\n    ns: ['translations'],\n    defaultNS: 'translations',\n    lowerCaseLng: true,\n  });\n\nexport default i18n;\n","import React, {\n  useContext,\n  useReducer,\n  Dispatch,\n  createContext,\n} from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from '../translations';\n\ninterface LanguageState {\n  language: Language;\n}\n\ntype Language = 'ru' | 'fr' | 'en';\n\ntype Action = {\n  type: 'RU' | 'FR' | 'EN';\n  payload: Language;\n};\ninterface LanguageContextI {\n  languageState: LanguageState;\n  dispatchLanguage: Dispatch<Action>;\n}\n\nconst languageWithoutCountry = (): Language => {\n  return i18n.language.substring(0, 2) as Language;\n};\n\nexport const LANGUAGES: Record<string, Language> = {\n  RU: 'ru',\n  FR: 'fr',\n  EN: 'en',\n};\n\nexport const LANGUAGES_ACTIONS = {\n  SET_RUSSIAN: 'SET_RUSSIAN',\n  SET_ENGLISH: 'SET_ENGLISH',\n  SET_FRENCH: 'SET_FRENCH',\n};\n\nconst reducer = (\n  state: LanguageState,\n  action: Action,\n): LanguageState => {\n  switch (action.type) {\n    case LANGUAGES_ACTIONS.SET_ENGLISH:\n      i18n.changeLanguage('en');\n      return { language: LANGUAGES.EN };\n    case LANGUAGES_ACTIONS.SET_FRENCH:\n      i18n.changeLanguage('fr');\n      return { language: LANGUAGES.FR };\n    case LANGUAGES_ACTIONS.SET_RUSSIAN:\n      i18n.changeLanguage('ru');\n      return { language: LANGUAGES.RU };\n    default:\n      return state;\n  }\n};\n\nexport const LanguageContext = createContext({} as LanguageContextI);\ninterface AppLanguageProviderProps {\n  children: React.ReactNode;\n}\nexport const AppLanguageProvider: React.FC<AppLanguageProviderProps> = props => {\n  const [languageState, dispatchLanguage] = useReducer(reducer, {\n    language: languageWithoutCountry(),\n  });\n\n  return (\n    <LanguageContext.Provider\n      value={{\n        languageState,\n        dispatchLanguage,\n      }}\n    >\n      <I18nextProvider i18n={i18n}>{props.children}</I18nextProvider>\n    </LanguageContext.Provider>\n  );\n};\n\nexport const useLanguageValue = () => useContext(LanguageContext);\n","import React from 'react';\nimport { ChatProps } from '../../types'; // TODO: upgrade to latest eslint tooling\n\nimport { AppLanguageProvider } from '../../context/LanguageContext';\nimport { ChatProvider } from '../../context/ChatContext';\nimport { RestProvider } from '../../context/RestContext';\nimport { SocketProvider } from '../../context/SocketContext';\nimport { ChatPage } from '../../pages/chat';\n\nexport const ChatIndex: React.FC<ChatProps> = ({\n  activeGroupId,\n  activeChatUserId,\n  lang,\n  chatBaseURLApi,\n  chatWsUrl,\n  chatWsPath,\n  token,\n  inModale = false,\n}: ChatProps) => {\n  return (\n    <AppLanguageProvider>\n      <ChatProvider defLang={lang} token={token}>\n        <RestProvider baseURLApi={chatBaseURLApi} pageSize={25}>\n          <SocketProvider wsUrl={chatWsUrl} wsPath={chatWsPath}>\n            <ChatPage\n              activeGroupId={activeGroupId}\n              activeChatUserId={activeChatUserId}\n              inModale={inModale}\n            />\n          </SocketProvider>\n        </RestProvider>\n      </ChatProvider>\n    </AppLanguageProvider>\n  );\n};\n"],"names":["MessageStatus","Role","ContextMenuType","useStyles","makeStyles","createStyles","item","cursor","Emoji","props","classes","emojiClick","e","onSelect","target","innerText","Item","itemProps","React","Box","m","component","onClick","className","emoji","display","flexDirection","theme","typingText","paddingLeft","spacing","typingDot","verticalAlign","width","height","margin","background","palette","primary","main","borderRadius","opacity","animation","&:nth-child(1)","animationDelay","&:nth-child(2)","&:nth-child(3)","@keyframes loadingFade","0%","50%","100%","Typing","createElement","Typography","color","variant","message","input","flex","inputUpload","attachmentIcon","fill","stroke","Entry","chat","t","useTranslation","empjiEl","setEmojiEl","useState","text","setText","lastTyping","setLastTyping","time","handleEmojiClose","sendMessage","data","onSendMessage","submit","trim","length","messageType","emojiOpen","Boolean","enojiId","undefined","TextField","placeholder","autoFocus","InputProps","disableUnderline","startAdornment","InputAdornment","position","accept","id","type","onChange","event","currentTarget","files","file","includes","image","Image","url","window","URL","webkitURL","src","createObjectURL","onload","imageSize","getImageSize","fileName","name","size","htmlFor","IconButton","aria-label","SvgIcon","d","strokeWidth","strokeLinecap","strokeLinejoin","aria-describedby","InsertEmoticon","endAdornment","edge","preventDefault","Send","value","_ref","onTyping","Date","now","onKeyPress","key","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","ContactStatus","isTyping","contact","online","isEmpty","Object","keys","formatTime","dayjs","add","startOf","isAfter","format","getChatId","groupId","userId","getChatName","username","allMessCount","chats","values","map","it","messages","reduce","a","b","chatRoomComparer","hasMessagesA","Array","isArray","hasMessagesB","cdate","getTime","getParam","param","QueryString","location","search","URLSearchParams","get","combineURLs","baseURL","relativeURL","queryParams","replace","toString","star","fontSize","ContactList","apiUrl","contacts","owner","List","ListItem","button","ListItemAvatar","Avatar","alt","avatar","ListItemText","StarIcon","secondary","AddContact","Dialog","handleClose","aria-labelledby","DialogTitle","Transition","forwardRef","ref","Slide","_extends","direction","AlertDialog","children","setOpen","severity","TransitionComponent","keepMounted","DialogContent","Alert","DialogActions","Button","AlertModale","modaleInfo","setModaleInfo","strTime","useMemo","textAlign","ConferenceTime","_ref2","finishDate","currTime","finTime","diffTimeSec","Math","round","counter","max","setCounter","counterRef","useRef","useEffect","current","setInterval","prev","clearInterval","handlerRefresh","useCounter","minutes","seconds","totalSeconds","hours","floor","strHours","hhMmSs","popover","pointerEvents","paper","padding","avatarGroup","backgroundColor","getGroupStatus","group","status","_group$members","members","onlineCount","sum","push","join","RoomHeader","user","typing","conference","conferenceJoined","operators","onVideoCall","onVideoEnd","onConferencePause","onOperatorAdd","onLeaveGroup","setAnchorEl","addOperatorOpen","setAddOperatorOpen","CardHeader","title","subheader","handlePopoverClose","_group$members2","GroupIcon","Fragment","aria-owns","aria-haspopup","onMouseEnter","onMouseLeave","disableRestoreFocus","action","role","handleAddOperatorOpen","PersonAddIcon","operator","find","DeleteIcon","contactId","startIcon","CallEndIcon","style","marginLeft","VideoCallIcon","fileIcon","fileBody","File","meta","content","split","date","getFileMeta","ext","idx","lastIndexOf","slice","splitFileName","toUpperCase","mediaContent","maxWidth","maxHeight","[object Object]","breakpoints","down","Video","isConference","JSON","parse","visitId","controls","muted","preload","img","aspect","setViewerData","AspectRatio","ratio","visible","MessageContent","rootContact","& span","float","& $message","grey","borderTopRightRadius","borderBottomRightRadius","& $firstMessage","borderTopLeftRadius","marginTop","& $lastMessage","borderBottomLeftRadius","marginBottom","rootUser","paddingRight","justifyContent","contrastText","rootNotify","& > *","fontWeight","firstMessage","lastMessage","flexWrap","header","overflow","body","wordBreak","alignSelf","statusImage","marginRight","Message","isGroupMessage","isUserFirst","isUserLast","isRevoke","align","revokeUserName","isMine","wrapMessage","onContextMenu","child","Link","underline","href","download","Done","DoneAll","messageListOuter","overflowY","messageList","scrollbarWidth","scrollbarColor","light","arrowDown","left","bottom","Loading","loading","sx","mx","CircularProgress","RoomMessageList","users","pageSize","setMenuState","initialMenuState","scrollDownButton","setScrollDownButton","scrollDo","setScrollDo","messageCount","refList","viewerData","setTimeout","scrollDown","scrollTop","scrollHeight","CardContent","InfiniteScroll","pageStart","loadMore","onNeedMoreMessages","hasMore","noMoreData","loader","isReverse","useCapture","useWindow","getScrollParent","inx","handleMenuPopup","canCopy","canDelete","onMeesageDelete","mouseX","clientX","mouseY","clientY","Fab","handlerScrollDown","KeyboardArrowDown","Backdrop","zIndex","drawer","root","minWidth","roomHeader","flexAll","flexEnd","Room","isMobile","useMediaQuery","menuState","handleCopy","useCallback","navigator","clipboard","writeText","handleDelete","Card","elevation","Tooltip","onExitRoom","ArrowBackIcon","Divider","Menu","handleMenuClose","anchorReference","anchorPosition","top","MenuItem","disabled","ListItemIcon","FileCopyIcon","whiteSpace","textOverflow","unread","TypingBadge","withStyles","badge","boxShadow","&::after","border","@keyframes ripple","transform","Badge","OnlineBadge","RoomListItem","roomName","contactAvatar","overlap","roomText","getMessageText","roomTime","selected","active","secondaryTypographyProps","unreadCount","Chip","label","searchField","listStyle","filterChats","filter","lowerFilter","toLowerCase","indexOf","sortChats","groups","roomArr","sort","topChatId","localStorage","getItem","c","k","isTop","unshift","RoomList","setChats","fullWidth","activeRoom","onChangeChat","Conference","langCode","confUrl","regex","RegExp","updateUrlParameter","lang","transLang","listener","source","_ref$current","contentWindow","addEventListener","removeEventListener","allowFullScreen","allow","alignItems","pulse","&::before","footer","paddingTop","@keyframes pulse","ConferenceCall","onAccept","Paper","emptyUser","password","emptyChatState","token","chatOld","groupGather","userGather","contactGather","initialContactId","joined","ringPlayed","error","success","getFreshActiveRoom","state","getActiveRoom","newActiveRoom","rooms","setUserOnline","newState","member","index","findIndex","contactUnreadGather","predicate","groupUnreadGather","chatReducer","payload","delGroup","updateActiveRoom","delGroupMember","delContact","setActiveRoom","addGroupMessage","x","addPrivateMessage","_newState$activeRoom","revokeMessage","userName","msg","_id","updateGroupInfo","notice","info","updateUserInfo","addGroupMember","isManager","setConference","pauseConference","_state$conference$dat","stopConference","_state$conference$dat2","markPrivateMessagesRead","updatedValue","i","addPrivateMessages","addGroupMessages","userArr","setToken","clearUser","ChatContext","createContext","dispatch","emptyDispatch","ChatProvider","defLang","chatState","useReducer","Provider","RestContext","RestProvider","baseURLApi","useContext","fetch","axios","create","timeout","headers","Cache-Control","Pragma","Authorization","withCredentials","getPrivateMessages","async","callback","_chat$messages","params","getGroupMessages","_chat$messages2","getUserByMmk","mmkId","guid","console","log","SocketContext","SocketProvider","wsUrl","wsPath","socket","disconnectSocket","connectSocket","useSocket","path","accessToken","setSocket","socketTemp","io","reconnection","extraHeaders","disconnect","setOnline","connected","on","emit","off","res","code","groupArr","groupData","contactArr","contactData","userData","operatorData","user_","conferenceData","newUser","groupObj","_groupObj$members2","_groupObj$members","_state$activeRoom","timer","clearTimeout","CheckAudiVideoPerm","audio","video","mediaDevices","getUserMedia","then","catch","err","SettingsSuggestIcon","SettingsVoiceIcon","VideoSettingsIcon","ChatAlert","Snackbar","autoHideDuration","innerGrid","conAbsOnConf","ChatPage","activeGroupId","activeChatUserId","inModale","onExitActiveRoom","onMessageDelete","onEnterRoom","onConferenceCallAccept","operatorId","Chat","changeChatByMmkId","onlyChat","renderRoom","GetRoomList","GetConferenceCall","GetConference","depsContats","_state$conference$dat3","_state$activeRoom2","Contacts","_state$conference$dat4","my","ArrowForward","Container","Grid","container","sm","_state$conference$dat5","_state$conference$dat6","getLang","str","i18n","use","LanguageDetector","initReactI18next","init","resources","ru","translations","en","fr","lng","load","fallbackLng","debug","ns","defaultNS","lowerCaseLng","reducer","changeLanguage","language","LanguageContext","AppLanguageProvider","languageState","dispatchLanguage","substring","I18nextProvider","chatBaseURLApi","chatWsUrl","chatWsPath"],"mappings":"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"}