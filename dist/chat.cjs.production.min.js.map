{"version":3,"file":"chat.cjs.production.min.js","sources":["../src/types/index.ts","../src/components/Emoji.tsx","../src/components/Typing.tsx","../src/components/Entry.tsx","../src/utils/common.ts","../src/components/MessageContent/File.tsx","../src/components/MessageContent/Video.tsx","../src/components/MessageContent/Image.tsx","../src/components/MessageContent/index.tsx","../src/components/Message.tsx","../src/components/ContactStatus.tsx","../src/components/ContactList.tsx","../src/components/AddContact.tsx","../src/components/RoomHeader.tsx","../src/components/Room.tsx","../src/components/RoomListItem.tsx","../src/components/RoomList.tsx","../src/components/Conference.tsx","../src/components/ConferenceCall.tsx","../src/context/ChatContext.tsx","../src/context/RestContext.tsx","../src/context/SocketContext.tsx","../src/pages/chat.tsx","../src/hooks/useSocket.ts","../src/translations/index.ts"],"sourcesContent":["export interface ChatPa {  \n  activeGroupId?: number;\n  activeChatUserId?: number;\n}\n\n// Тип сообщения\nexport type MessageType =\n  | \"text\"\n  | \"image\"\n  | \"file\"\n  | \"video\"\n  | \"notify\"\n  | \"video_conference\";\n\nexport enum MessageStatus {\n  sent = 0,\n  read = 1\n}\n\nexport enum Role {\n  Unknown = 0,\n  Client = 1,\n  Agent = 2,\n  Specialist = 3,\n  Operator = 4\n}\n\nexport interface User {\n  userId: number;\n  username: string;\n  password: string;\n  avatar: string;\n  role?: Role;\n  online?: 1 | 0; // В сети\n  langCode?: string;\n}\n\n// Приватные сообщения\nexport interface PrivateMessage {\n  _id?: number;\n  userId: number;\n  contactId: number;\n  content: string;\n  messageType: MessageType;\n  status: MessageStatus;\n  cdate: string;\n  type?: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Контакт\nexport interface Contact {\n  userId: number;\n  groupId?: number;\n  username: string;\n  avatar?: string;\n  role?: Role;\n  messages?: PrivateMessage[];\n  unreadCount?: number;\n  isTop?: boolean;\n  online?: 1 | 0;\n  isManager?: 1 | 0;\n  noMoreData?: boolean;\n}\n\n// Информация о друзьях\nexport interface ContactGather {\n  [userId: number]: Contact;\n}\n\n// Групповое сообщение\nexport interface GroupMessage {\n  _id?: number;\n  userId: number;\n  groupId: number;\n  content: string;\n  messageType: MessageType;\n  cdate: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Группа\nexport interface Group {\n  groupId: number;\n  userId: number; // владелец\n  name: string;\n  notice: string;\n  messages?: GroupMessage[];\n  unreadCount?: number;\n  cdate: string;\n  isTop?: boolean;\n  members?: Contact[];\n  noMoreData?: boolean;\n}\n\n// Группы\nexport interface GroupGather {\n  [groupId: number]: Group;\n}\n\n// Ассоциации групп и пользователей\nexport interface GroupMap {\n  groupId: number;\n  userId: number;\n}\n\n// Ассоциации пользователей и друзей\nexport interface ContactMap {\n  contactId: number;\n  userId: number;\n}\n\nexport interface SendMessage {\n  message: string | File;\n  width?: number;\n  height?: number;\n  fileName?: string;\n  messageType: MessageType[0] | MessageType[1];\n  size?: number;\n}\n\n// Размер изображения\nexport interface ImageSize {\n  width: number;\n  height: number;\n}\n\n// Непрочитанные сообщения\nexport interface UnReadGather {\n  [key: string]: number;\n}\n\n// Получить сообщения постранично\nexport interface PagingParams {\n  groupId?: number;\n  userId?: number;\n  contactId?: number;\n  current: number;\n  pageSize: number;\n}\n\n// Постраничный ответ для групповых сообщений\nexport interface PagingResponse {\n  // messageArr: GroupMessage[]; - fix on messages\n  messages:GroupMessage[];\n  userArr: User[];\n}\n\nexport interface ContactUserMap {\n  contactId: number;\n  contactUserName: string;\n}\n\n// информация о том, что контакт печатает текст\nexport interface SetTyping {\n  userId?: number;\n  groupId?: number;\n  contactId?: number;\n}\n\n// Операция с сообщением\nexport interface MessageOperation {\n  userId?: number;\n  username: string;\n  groupId?: number;\n  contactId?: number;\n  _id: number;\n}\n\n// Данные конференции\nexport interface ConferenceData {\n  userId: number;\n  contactId: number;\n  id: string;\n  url?: string;\n  serverAddress?: string;\n  user?: string;\n  password?: string;\n}\n\n// Данные чата\nexport interface ChatData {\n  user: User;\n  groupData: Group[];\n  contactData: Contact[];\n  userData: User[];\n  operatorData: Contact[];\n  conferenceData: ConferenceData;\n}\n\nexport interface GroupMember {\n  groupId: number;\n  members: Contact[];\n}\n\nexport interface AddPrivateMessages {\n  pageSize: number;\n  contactId: number;\n  messages: PrivateMessage[];\n}\n\nexport interface AddGroupMessages extends PagingResponse {\n  pageSize: number;\n  groupId: number;\n  \n}\n\nexport interface SetActiveRoom {\n  groupId?: number;\n  contactId?: number;\n  ifNotExists: boolean;\n}\n\nexport interface JoinGroup {\n  group: Group;\n  user: Contact;\n}\n\nexport interface SetUser {\n  user: User;\n  token: string;\n}\n\nexport type ChatRoom = Group | Contact;\nexport type ChatMessage = GroupMessage | PrivateMessage;\n\n// Операции контекстного меню\nexport enum ContextMenuType {\n  COPY = \"COPY\", // Скопировать\n  REVOKE = \"REVOKE\", // Удалить сообщение\n  TOP_REVERT = \"TOP_REVERT\", // Открепить\n  TOP = \"TOP\", // Закрепить\n  READ = \"READ\", // Прочесть всё\n  DELETE = \"DELETE\" // Удалить\n}\n","import * as React from \"react\";\nimport { Box,  } from \"@mui/material\";\nimport { makeStyles,createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    item: {\n      cursor: \"pointer\",\n    },\n  })\n);\n\ntype EmojiProps = {\n  onSelect?: (emoji: string) => void;\n};\n\ntype EmojiItemProps = {\n  emoji: string;\n};\n\nconst Emoji: React.FC<EmojiProps> = (props: EmojiProps) => {\n  const classes = useStyles();\n  const emojiClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (props.onSelect) {\n      props.onSelect((e.target as HTMLDivElement).innerText);\n    }\n  };\n\n  const Item = (itemProps: EmojiItemProps) => {\n    return (\n      <Box\n        m={0.5}\n        component=\"span\"\n        onClick={emojiClick}\n        className={classes.item}\n      >\n        {itemProps.emoji}\n      </Box>\n    );\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😃\" />\n        <Item emoji=\"😁\" />\n        <Item emoji=\"😂\" />\n        <Item emoji=\"😄\" />\n        <Item emoji=\"😅\" />\n        <Item emoji=\"😆\" />\n        <Item emoji=\"😇\" />\n        <Item emoji=\"😈\" />\n        <Item emoji=\"😉\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😊\" />\n        <Item emoji=\"😋\" />\n        <Item emoji=\"😌\" />\n        <Item emoji=\"😍\" />\n        <Item emoji=\"😎\" />\n        <Item emoji=\"😏\" />\n        <Item emoji=\"😐\" />\n        <Item emoji=\"😒\" />\n        <Item emoji=\"😓\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"❓\" />\n        <Item emoji=\"😕\" />\n        <Item emoji=\"😖\" />\n        <Item emoji=\"😗\" />\n        <Item emoji=\"😘\" />\n        <Item emoji=\"😙\" />\n        <Item emoji=\"😚\" />\n        <Item emoji=\"😜\" />\n        <Item emoji=\"😝\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😞\" />\n        <Item emoji=\"😟\" />\n        <Item emoji=\"😠\" />\n        <Item emoji=\"😡\" />\n        <Item emoji=\"😢\" />\n        <Item emoji=\"😣\" />\n        <Item emoji=\"😤\" />\n        <Item emoji=\"😥\" />\n        <Item emoji=\"😦\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😨\" />\n        <Item emoji=\"😩\" />\n        <Item emoji=\"😪\" />\n        <Item emoji=\"😫\" />\n        <Item emoji=\"😬\" />\n        <Item emoji=\"😭\" />\n        <Item emoji=\"😮\" />\n        <Item emoji=\"😯\" />\n        <Item emoji=\"😰\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😲\" />\n        <Item emoji=\"😳\" />\n        <Item emoji=\"😴\" />\n        <Item emoji=\"😵\" />\n        <Item emoji=\"🧐\" />\n        <Item emoji=\"😷\" />\n        <Item emoji=\"🙁\" />\n        <Item emoji=\"🙂\" />\n        <Item emoji=\"🙃\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤐\" />\n        <Item emoji=\"🤑\" />\n        <Item emoji=\"🤒\" />\n        <Item emoji=\"🤓\" />\n        <Item emoji=\"🤔\" />\n        <Item emoji=\"🤕\" />\n        <Item emoji=\"🤠\" />\n        <Item emoji=\"🤡\" />\n        <Item emoji=\"🤢\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤤\" />\n        <Item emoji=\"🤥\" />\n        <Item emoji=\"🤧\" />\n        <Item emoji=\"🤨\" />\n        <Item emoji=\"🤩\" />\n        <Item emoji=\"🤪\" />\n        <Item emoji=\"🤫\" />\n        <Item emoji=\"🤬\" />\n        <Item emoji=\"🤭\" />\n      </Box>\n    </Box>\n  );\n};\nexport default Emoji;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typingText: {\n      paddingLeft: theme.spacing(0.5),\n    },\n    typingDot: {\n      display: \"inline-block\",\n      verticalAlign: \"middle\",\n      width: 4,\n      height: 4,\n      margin: \"0px 2px\",\n      background: theme.palette.primary.main,\n      borderRadius: \"50%\",\n      opacity: \"0\",\n      animation: \"$loadingFade 1s infinite\",\n      \"&:nth-child(1)\": {\n        animationDelay: \"0s\",\n      },\n      \"&:nth-child(2)\": {\n        animationDelay: \"0.2s\",\n      },\n      \"&:nth-child(3)\": {\n        animationDelay: \"0.4s\",\n      },\n    },\n    \"@keyframes loadingFade\": {\n      \"0%\": {\n        opacity: 0,\n      },\n      \"50%\": {\n        opacity: 0.8,\n      },\n      \"100%\": {\n        opacity: 0,\n      },\n    },\n  })\n);\n\ntype TypingProps = {\n  message: string;\n};\n\nconst Typing: React.FC<TypingProps> = (props: TypingProps) => {\n  const classes = useStyles();\n  return (\n    <Typography color=\"primary\" variant=\"body2\" component=\"span\">\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingText}>{props.message}</span>\n    </Typography>\n  );\n};\nexport default Typing;\n","import React, { ChangeEvent, KeyboardEvent } from \"react\";\nimport {\n  Box,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Popover,\n  SvgIcon,\n} from \"@mui/material\";\n\nimport { makeStyles } from '@mui/styles';\nimport { Send, InsertEmoticon } from \"@mui/icons-material\";\nimport Emoji from \"./Emoji\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatRoom, ImageSize, SendMessage } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    flex: \"auto\",\n  },\n  inputUpload: {\n    display: \"none\",\n  },\n  attachmentIcon: {\n    fill: \"none\",\n    stroke: \"currentColor\",\n  },\n}));\n\ntype EntryProps = {\n  chat: ChatRoom | null;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n};\n\n/**\n * Рассчитать пропорции изображения\n */\nconst getImageSize = (data: ImageSize) => {\n  let { width, height } = data;\n  if (width > 335 || height > 335) {\n    if (width > height) {\n      height = 335 * (height / width);\n      width = 335;\n    } else {\n      width = 335 * (width / height);\n      height = 335;\n    }\n  }\n  return {\n    width,\n    height,\n  };\n};\n\nconst Entry: React.FC<EntryProps> = (props: EntryProps) => {\n  const classes = useStyles();\n  const { chat } = props;\n\n  const { t } = useTranslation();\n\n  const [empjiEl, setEmojiEl] = React.useState<HTMLButtonElement | null>(null);\n  const [text, setText] = React.useState(\"\");\n  const [lastTyping, setLastTyping] = React.useState({\n    chat,\n    time: 0,\n  });\n\n  const handleEmojiClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setEmojiEl(event.currentTarget);\n  };\n\n  const handleEmojiClose = () => {\n    setEmojiEl(null);\n  };\n\n  const emojiSelect = (emoji: string) => {\n    setText(`${text}${emoji}`);\n    handleEmojiClose();\n  };\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setText(target.value);\n    if (\n      chat &&\n      props.onTyping &&\n      (lastTyping.chat !== chat || Date.now() - lastTyping.time >= 500)\n    ) {\n      setLastTyping({\n        chat,\n        time: Date.now(),\n      });\n      props.onTyping(chat);\n    }\n  };\n\n  const sendMessage = (data: SendMessage) => {\n    if (chat && props.onSendMessage) props.onSendMessage(chat, data);\n  };\n\n  const submit = () => {\n    if (text.trim().length === 0) {\n      return;\n    }\n\n    sendMessage({ message: text, messageType: \"text\" });\n    setText(\"\");\n  };\n\n  const onSubmitClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    submit();\n  };\n\n  const onKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      submit();\n    }\n  };\n\n  const onSubmitFile = (event: React.FormEvent<HTMLInputElement>) => {\n    if (!event.currentTarget.files) return;\n    const file = event.currentTarget.files[0];\n    let messageType: string;\n    if (file.type.includes(\"image\")) {\n      messageType = \"image\";\n    } else if (file.type.includes(\"video\")) {\n      messageType = \"video\";\n    } else {\n      messageType = \"file\";\n    }\n    if (messageType === \"image\") {\n      const image = new Image();\n      const url = window.URL || window.webkitURL;\n      image.src = url.createObjectURL(file);\n      image.onload = () => {\n        const imageSize: ImageSize = getImageSize({\n          width: image.width,\n          height: image.height,\n        });\n        sendMessage({\n          message: file,\n          width: imageSize.width,\n          height: imageSize.height,\n          messageType,\n        });\n      };\n    } else {\n      sendMessage({\n        message: file,\n        messageType,\n        fileName: file.name,\n        size: file.size,\n      });\n    }\n  };\n\n  const emojiOpen = Boolean(empjiEl);\n  const enojiId = emojiOpen ? \"simple-popover\" : undefined;\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <TextField\n        className={classes.input}\n        placeholder={t(\"CHAT.INPUT_MESSAGE\")}\n        autoFocus={true}\n        variant=\"standard\"\n        InputProps={{\n          disableUnderline: true,\n          startAdornment: (\n            <InputAdornment position={\"start\"}>\n              <input\n                accept=\"*\"\n                className={classes.inputUpload}\n                id=\"icon-button-file\"\n                type=\"file\"\n                onChange={onSubmitFile}\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload\"\n                  component=\"span\"\n                  size=\"small\"\n                >\n                  <SvgIcon fill=\"none\" className={classes.attachmentIcon}>\n                    <path\n                      d=\"M16.768 13.5767L11.6961 18.6486C9.35886 20.9859 5.56937 20.9859 3.23208 18.6486V18.6486C0.894789 16.3114 0.894789 12.5219 3.23208 10.1846L10.4479 2.96872C12.0875 1.32914 14.7458 1.32914 16.3854 2.96873V2.96873C18.025 4.60831 18.025 7.26659 16.3854 8.90617L9.16515 16.1264C8.23032 17.0612 6.71466 17.0612 5.77982 16.1264V16.1264C4.84499 15.1916 4.84499 13.6759 5.77982 12.7411L10.8896 7.63131\"\n                      strokeWidth=\"1.6\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </SvgIcon>\n                </IconButton>\n              </label>{\" \"}\n              <IconButton\n                aria-describedby={enojiId}\n                onClick={handleEmojiClick}\n                color=\"primary\"\n                size=\"small\"\n              >\n                <InsertEmoticon />\n              </IconButton>\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={onSubmitClick}\n            >\n              <Send />\n            </IconButton>\n          ),\n        }}\n        value={text}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n      />\n      <Popover\n        id={enojiId}\n        open={emojiOpen}\n        anchorEl={empjiEl}\n        onClose={handleEmojiClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n      >\n        <Emoji onSelect={emojiSelect} />\n      </Popover>\n    </Box>\n  );\n};\nexport default Entry;\n","import moment from \"moment\";\nimport { ChatRoom, Contact, ContactGather, Group, GroupGather } from \"../types\";\n\nexport function isEmpty(value: unknown): boolean {\n  return (\n    value == null ||\n    (typeof value === \"object\" && Object.keys(value).length === 0) ||\n    (typeof value === \"string\" && value.trim().length === 0)\n  );\n}\n\n// string contains string\nexport function isContainStr(str1: string, str2: string): boolean {\n  return str2.indexOf(str1) >= 0;\n}\n\n/**\n * check URL\n * @param text\n */\nexport function isUrl(text: string): boolean {\n  // parse url\n  const UrlReg = new RegExp(/http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?/);\n  return UrlReg.test(text);\n}\n\n/**\n * Формитирование времени сообщения\n * @param time\n */\nexport function formatTime(time: Date | string | undefined) {\n  if (typeof time === \"undefined\") return null;\n  if (typeof time === \"string\") time = new Date(time);\n  // больше чем вчера\n  if (\n    moment()\n      .add(-1, \"days\")\n      .startOf(\"day\")\n      .isAfter(time)\n  ) {\n    return moment(time).format(\"DD.MM.YYYY HH:mm\");\n  }\n  // вчера\n  if (\n    moment()\n      .startOf(\"day\")\n      .isAfter(time)\n  ) {\n    return `Вчера в ${moment(time).format(\"HH:mm\")}`;\n  }\n\n  return moment(time).format(\"HH:mm\");\n}\n\n/**\n * Раскрыть содержимое\n * @param content - данные в строке\n */\nexport function getFileMeta(\n  content: string\n): {\n  date: string;\n  userId: string;\n  size: string;\n  name: string;\n} {\n  // Формат  [date]$[userId]$[size]$[fileName]\n  // Например fileName = 1606980397047$1a01e20f-3780-4227-84b5-5c69ca766ee5$15.41KB$123.docx\n  const meta = content.split(\"$\");\n  const [date, userId, size, name] = meta;\n  return {\n    date,\n    userId,\n    size,\n    name\n  };\n}\n\nexport function getImageMeta(\n  content: string\n): {\n  date: string;\n  userId: string;\n  width: string;\n  height: string;\n} {\n  // Формат [date]$[userId]$[width]$[height]$...\n  const meta = content.split(\"$\");\n  const [date, userId, width, height] = meta;\n  return {\n    date,\n    userId,\n    width,\n    height\n  };\n}\n\nexport function splitFileName(name: string): { name: string; ext: string } {\n  const idx = name.lastIndexOf(\".\");\n  if (idx === -1)\n    return {\n      name,\n      ext: \"\"\n    };\n  return {\n    name: name.slice(0, idx),\n    ext: name.slice(idx + 1)\n  };\n}\n\nexport const getChatId = (chat: ChatRoom | null): string | null => {\n  if (!chat) return null;\n  return (chat as Group).groupId\n    ? `group:${(chat as Group).groupId}`\n    : `user:${chat.userId}`;\n};\n\nexport const getChatName = (chat: ChatRoom): string => {\n  return (chat as Group).groupId\n    ? (chat as Group).name\n    : (chat as Contact).username;\n};\n\nexport const allMessCount = (chats: GroupGather | ContactGather) => {\n  return Object.values(chats)\n    .map(it => (it?.messages != null ? it?.messages.length : 0))\n    .reduce((a: number, b: number) => a + b, 0);\n};\n\nexport const chatRoomComparer = (a: ChatRoom, b: ChatRoom): number => {\n  const hasMessagesA = Array.isArray(a.messages) && a.messages.length > 0;\n  const hasMessagesB = Array.isArray(b.messages) && b.messages.length > 0;\n  if (\n    hasMessagesA &&\n    hasMessagesB &&\n    b.messages != null &&\n    a.messages != null\n  ) {\n    // !!! if cdate === undefined !!!\n    const bb =\n      b.messages[b.messages.length - 1].cdate != null\n        ? new Date(b.messages[b.messages.length - 1].cdate).getTime()\n        : new Date().getTime();\n\n    const aa =\n      a.messages[a.messages.length - 1].cdate != null\n        ? new Date(a.messages[a.messages.length - 1].cdate).getTime()\n        : new Date().getTime() - 1;\n    const res = bb - aa;\n\n    //console.log('res', res);\n    return res;\n  }\n  if (hasMessagesA) {\n    return -1;\n  }\n  return 1;\n};\n\nexport const getParam = (param: string) => {\n  const QueryString = window.location.search;\n  const urlParams = new URLSearchParams(QueryString);\n  return urlParams.get(param);\n};\n","import React from \"react\";\nimport {\n  Avatar,\n  Box,\n} from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport { getFileMeta, splitFileName } from \"../../utils/common\";\nimport { ChatMessage } from \"../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fileIcon: {\n      fontSize: \"0.75rem\",\n    },\n    fileBody: {\n      paddingLeft: theme.spacing(1),\n    },\n  })\n);\ntype FileProps = {\n  message: ChatMessage;\n};\n\nconst File: React.FC<FileProps> = ({ message }: FileProps) => {\n  const classes = useStyles();\n  const meta = getFileMeta(message.content);\n  const { name, ext } = splitFileName(meta.name);\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <Avatar className={classes.fileIcon}>{ext.toUpperCase()}</Avatar>\n      <Box display=\"flex\" flexDirection=\"column\" className={classes.fileBody}>\n        {name}\n        <span>{`${ext} ${meta.size}`}</span>\n      </Box>\n    </Box>\n  );\n};\n\nexport default File;\n","import React from \"react\";\nimport { makeStyles } from '@mui/styles';\nimport { ChatMessage } from \"../../types\";\n\nconst useStyles = makeStyles(() => ({\n  mediaContent: {\n    maxWidth: 350,\n    maxHeight: 350,\n  },\n}));\n\ntype VideoProps = {\n  apiUrl: string;\n  message: ChatMessage;\n  isConference: boolean;\n};\n\nconst Video: React.FC<VideoProps> = ({\n  apiUrl,\n  message,\n  isConference,\n}: VideoProps) => {\n  const classes = useStyles();\n  let src = \"\";\n  if (isConference) {\n    const meta = JSON.parse(message.content);\n    src = `${apiUrl}/static/conf/${meta.visitId}/${meta.name}`;\n  } else src = `${apiUrl}/static/file/${message.content}`;\n  return (\n    <video src={src} className={classes.mediaContent} controls muted>\n      Ваш браузер не поддерживает тег video.\n    </video>\n  );\n};\n\nexport default Video;\n","import React from \"react\";\nimport Viewer from \"react-viewer\";\nimport { Theme } from '@mui/material/styles';\nimport { getImageMeta } from \"../../utils/common\";\nimport { ChatMessage } from \"../../types\";\nimport { makeStyles, createStyles } from '@mui/styles';\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mediaContent: {\n      maxWidth: 350,\n      maxHeight: 350,\n      cursor: \"pointer\",\n      [theme.breakpoints.down(\"sm\")]: {\n        maxWidth: 250,\n        maxHeight: 250,\n      },\n    },\n  })\n);\ntype ImageProrps = {\n  apiUrl: string;\n  message: ChatMessage;\n};\n\nconst Image: React.FC<ImageProrps> = ({ apiUrl, message }: ImageProrps) => {\n  const classes = useStyles();\n  const [viewerVisible, setViewerVisible] = React.useState(false);\n  const meta = getImageMeta(message.content);\n  return (\n    <React.Fragment>\n      <Viewer\n        zIndex={2000}\n        visible={viewerVisible}\n        changeable={false}\n        onClose={() => {\n          setViewerVisible(false);\n        }}\n        images={[\n          {\n            src: `${apiUrl}/static/image/${message.content}`,\n          },\n        ]}\n      />\n      <img\n        src={`${apiUrl}/static/image/${message.content}`}\n        width={meta.width}\n        height={meta.height}\n        className={classes.mediaContent}\n        onClick={() => {\n          setViewerVisible(true);\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\nimport File from \"./File\";\nimport Video from \"./Video\";\nimport Image from \"./Image\";\nimport { ChatMessage } from \"../../types\";\n\ntype MessageProps = {\n  apiUrl: string;\n  message: ChatMessage;\n};\nconst MessageContent: React.FC<MessageProps> = ({\n  apiUrl,\n  message,\n}: MessageProps) => {\n  switch (message.messageType) {\n    case \"text\":\n      return <React.Fragment>{message.content}</React.Fragment>;\n    case \"video\":\n    case \"video_conference\":\n      return (\n        <Video\n          message={message}\n          apiUrl={apiUrl}\n          isConference={message.messageType === \"video_conference\"}\n        />\n      );\n    case \"image\":\n      return <Image message={message} apiUrl={apiUrl} />;\n    case \"file\":\n      return <File message={message} />;\n  }\n  return null;\n};\n\nexport default MessageContent;\n","import * as React from \"react\";\nimport {\n  Box,\n  Link,\n  ListItem,\n  Typography,\n} from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport { DoneAll, Done } from \"@mui/icons-material\";\nimport { formatTime } from \"../utils/common\";\nimport MessageContent from \"./MessageContent\";\nimport { Alert } from \"@mui/lab\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatMessage, Contact, PrivateMessage, User } from \"../types\";\n\ntype MessageProps = {\n  apiUrl: string;\n  user: User;\n  message: ChatMessage;\n  owner: Contact;\n  isGroupMessage: boolean; // сообщение в группу\n  isUserFirst: boolean; // начинает группу сообщений от одного пользователя\n  isUserLast: boolean; // завершает группу сообщений от одного пользователя\n  refOnLastMess: React.RefObject<HTMLDivElement> | null;\n  onContextMenu: (event: React.MouseEvent<HTMLElement>) => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    rootContact: {\n      \"& span\": {\n        float: \"right\",\n        color: \"#B2B6C2\",\n      },\n      \"& $message\": {\n        backgroundColor: \"#F1F4FC\",\n        color: \"black\",\n      },\n      \"& $lastMessage\": {\n        borderBottomLeftRadius: 0,\n      },\n    },\n    rootUser: {\n      justifyContent: \"flex-end\",\n      \"& span\": {\n        float: \"right\",\n        color: \"#D9DEEC\",\n      },\n      \"& $message\": {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n      },\n      \"& $lastMessage\": {\n        borderBottomRightRadius: 0,\n      },\n    },\n    rootNotify: {\n      justifyContent: \"center\",\n      \"& > *\": {\n        padding: `0px ${theme.spacing(1)}`,\n        borderRadius: 16,\n        fontWeight: 500,\n      },\n    },\n    message: {\n      maxWidth: \"85%\",\n      borderRadius: 16,\n      padding: theme.spacing(1),\n    },\n    lastMessage: {},\n    file: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      cursor: \"pointer\",\n    },\n    header: {\n      flex: \"0 0 100%\",\n      overflow: \"hidden\",\n      fontWeight: \"bold\",\n    },\n    body: {\n      flex: \"1 1 auto\",\n      wordBreak: \"break-word\",\n      overflow: \"hidden\",\n    },\n    status: {\n      paddingLeft: theme.spacing(1),\n      flex: \"1 1 auto\",\n      alignSelf: \"flex-end\",\n    },\n    statusImage: {\n      fontSize: \"1rem\",\n      marginRight: theme.spacing(0.5),\n      verticalAlign: \"middle\",\n    },\n  })\n);\n\nconst wrapMessage = (\n  apiUrl: string,\n  message: ChatMessage,\n  classes: ReturnType<typeof useStyles>,\n  isUserLast: boolean,\n  onContextMenu: ((event: React.MouseEvent<HTMLElement>) => void) | undefined,\n  child: JSX.Element\n) => {\n  const { messageType } = message;\n\n  const className = isUserLast\n    ? `${classes.message} ${classes.lastMessage}`\n    : classes.message;\n\n  if (messageType === \"file\") {\n    return (\n      <Link\n        className={`${className} ${classes.file}`}\n        underline=\"none\"\n        href={`${apiUrl}/static/file/${message.content}`}\n        target=\"_blank\"\n        download\n        onContextMenu={onContextMenu}\n      >\n        {child}\n      </Link>\n    );\n  }\n  const isMedia =\n    messageType === \"image\" ||\n    messageType === \"video\" ||\n    messageType === \"video_conference\";\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection={isMedia ? \"column\" : \"row\"}\n      flexWrap=\"wrap\"\n      className={className}\n      onContextMenu={onContextMenu}\n    >\n      {child}\n    </Box>\n  );\n};\n\nconst Message: React.FC<MessageProps> = (props: MessageProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const {\n    apiUrl,\n    message,\n    owner,\n    refOnLastMess,\n    user,\n    isGroupMessage,\n    isUserFirst,\n    isUserLast,\n  } = props;\n\n  if (message.messageType === \"notify\") {\n    // Уведомление - особый случай\n    const content =\n      message.content[0] === \"{\"\n        ? JSON.parse(message.content)\n        : message.content;\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Alert\n          severity={typeof content === \"string\" ? \"info\" : content.severity}\n          ref={refOnLastMess}\n        >\n          {typeof content === \"string\" ? content : content.message}\n        </Alert>\n      </ListItem>\n    );\n  }\n\n  if (message.isRevoke) {\n    // Удаленное сообщение\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Typography variant=\"body2\" ref={refOnLastMess} align=\"center\">\n          {message.userId === user.userId\n            ? t(\"CHAT.MESSAGE.REVOKED.YOU\")\n            : `${message.revokeUserName} ${t(\"CHAT.MESSAGE.REVOKED.CONTACT\")}`}\n        </Typography>\n      </ListItem>\n    );\n  }\n\n  const isMine = user.userId === message.userId;\n\n  return (\n    <ListItem className={isMine ? classes.rootUser : classes.rootContact}>\n      {wrapMessage(\n        apiUrl,\n        message,\n        classes,\n        isUserLast,\n        props.onContextMenu,\n        <React.Fragment>\n          {!isMine && isGroupMessage && owner && isUserFirst && (\n            <div className={classes.header}>{owner.username}</div>\n          )}\n          <div className={classes.body}>\n            <MessageContent message={message} apiUrl={apiUrl} />\n          </div>\n          <div className={classes.status} ref={refOnLastMess}>\n            <span>\n              {isMine ? (\n                (message as PrivateMessage).status === 0 ? (\n                  <Done className={classes.statusImage} />\n                ) : (\n                  <DoneAll className={classes.statusImage} />\n                )\n              ) : null}\n              {formatTime(message.cdate)}\n            </span>\n          </div>\n        </React.Fragment>\n      )}\n    </ListItem>\n  );\n};\nexport default Message;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport Typing from \"./Typing\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"../types\";\n\ntype ContactStatusProps = {\n  contact: Contact;\n  isTyping: boolean;\n};\n\nconst ContactStatus: React.FC<ContactStatusProps> = (\n  props: ContactStatusProps\n) => {\n  const { t } = useTranslation();\n\n  if (props.isTyping) return <Typing message={t(\"CHAT.STATUS.TYPING\")} />;\n  if (props.contact.online === 1)\n    return (\n      <Typography variant=\"body2\" color=\"primary\" component=\"span\">\n        {t(\"CHAT.STATUS.ONLINE\")}\n      </Typography>\n    );\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n      {t(\"CHAT.STATUS.OFFLINE\")}\n    </Typography>\n  );\n};\n\nexport default ContactStatus;\n","import React from \"react\";\nimport {\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from \"@mui/material\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport ContactStatus from \"./ContactStatus\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Contact } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  star: {\n    fontSize: \"0.85rem\",\n    verticalAlign: \"middle\"\n  }\n}));\n\ntype ContactListProps = {\n  apiUrl: string;\n  contacts: Contact[];\n  owner?: number;\n  onClick?: (contact: Contact) => void;\n};\n\nconst ContactList: React.FC<ContactListProps> = (props: ContactListProps) => {\n  const classes = useStyles();\n  const { apiUrl, contacts, owner } = props;\n\n  return (\n    <List aria-label=\"contacts\">\n      {contacts.map(contact => (\n        <ListItem\n          button\n          key={contact.userId}\n          onClick={() => props.onClick && props.onClick(contact)}\n        >\n          <ListItemAvatar>\n            <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={\n              <span>\n                {contact.username}{\" \"}\n                {owner === contact.userId && (\n                  <StarIcon className={classes.star} color=\"primary\" />\n                )}\n              </span>\n            }\n            secondary={<ContactStatus contact={contact} isTyping={false} />}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\nexport default ContactList;\n","import { Dialog, DialogTitle } from \"@mui/material\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"../types\";\nimport ContactList from \"./ContactList\";\n\ninterface AddContactProps {\n  open: boolean;\n  apiUrl: string;\n  contacts: Contact[];\n  onClose: (value?: Contact) => void;\n}\n\nconst AddContact: React.FC<AddContactProps> = (\n  props: AddContactProps\n) => {\n  const { onClose, open, apiUrl, contacts } = props;\n  const { t } = useTranslation();\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleListItemClick = (contact: Contact) => {\n    onClose(contact);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"add-contact-title\"\n      open={open}\n    >\n      <DialogTitle id=\"switch-operator-title\">\n        {t(\"CHAT.ADD_CONTACT\")}\n      </DialogTitle>\n      <ContactList\n        apiUrl={apiUrl}\n        contacts={contacts}\n        onClick={handleListItemClick}\n      />\n    </Dialog>\n  );\n};\n\nexport default AddContact;","import React from 'react';\nimport {\n  Avatar,\n  CardHeader,\n  Button,\n  Popover,\n  IconButton,\n} from '@mui/material';\nimport { Theme } from '@mui/material/styles';\nimport GroupIcon from '@mui/icons-material/Group';\nimport { useTranslation } from 'react-i18next';\nimport VideoCallIcon from '@mui/icons-material/VideoCall';\nimport CallEndIcon from '@mui/icons-material/CallEnd';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactStatus from './ContactStatus';\nimport ContactList from './ContactList';\nimport AddContact from './AddContact';\nimport {\n  ChatRoom,\n  Contact,\n  Group,\n  SetTyping,\n  User,\n  ConferenceData,\n} from '../types';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport { isEmpty } from '../utils/common';\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popover: {\n      pointerEvents: 'none',\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n    avatarGroup: {\n      backgroundColor: '#28B7C6',\n      color: '#fff',\n    },\n  }),\n);\n\ntype RoomHeaderProps = {\n  apiUrl: string;\n  user: User;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  conferenceJoined: boolean;\n  className: string;\n  operators: Contact[];\n  onVideoCall?: (chat: ChatRoom) => void;\n  onVideoEnd?: (conference: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst getGroupStatus = (group: Group, t: (key: string) => string) => {\n  const status = [`${group.members?.length} ${t('CHAT.MEMBERS')}`];\n  const onlineCount = (group.members || []).reduce(\n    (sum: number, contact) => (contact.online ? sum + 1 : sum),\n    0,\n  );\n  if (onlineCount)\n    status.push(`${onlineCount} ${t('CHAT.STATUS.ONLINE')}`);\n  return status.join(', ');\n};\n\nconst RoomHeader: React.FC<RoomHeaderProps> = ({\n  apiUrl,\n  user,\n  chat,\n  typing,\n  conference,\n  conferenceJoined,\n  className,\n  operators,\n  onVideoCall,\n  onVideoEnd,\n  onConferencePause,\n  onOperatorAdd,\n  onLeaveGroup,\n}: RoomHeaderProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(\n    null,\n  );\n  const [addOperatorOpen, setAddOperatorOpen] = React.useState(false);\n\n  if (!chat)\n    return (\n      <CardHeader\n        avatar={<Avatar />}\n        title=\"\"\n        subheader=\"\"\n        className={className}\n      />\n    );\n\n  const handlePopoverOpen = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleAddOperatorOpen = () => {\n    setAddOperatorOpen(true);\n  };\n\n  const handleAddOperatorClose = (operator?: Contact) => {\n    setAddOperatorOpen(false);\n    if (onOperatorAdd && operator && chat)\n      onOperatorAdd(chat as Group, operator);\n  };\n\n  const group = chat as Group;\n  if (group.groupId) {\n    // группа\n    return (\n      <CardHeader\n        avatar={\n          <Avatar alt={group.name} className={classes.avatarGroup}>\n            <GroupIcon />{' '}\n          </Avatar>\n        }\n        title={group.name}\n        subheader={\n          <React.Fragment>\n            <span\n              aria-owns={anchorEl ? 'mouse-over-popover' : undefined}\n              aria-haspopup=\"true\"\n              onMouseEnter={handlePopoverOpen}\n              onMouseLeave={handlePopoverClose}\n            >\n              {getGroupStatus(group, t)}\n            </span>\n            <Popover\n              id=\"mouse-over-popover\"\n              className={classes.popover}\n              classes={{\n                paper: classes.paper,\n              }}\n              open={!!anchorEl}\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              onClose={handlePopoverClose}\n              disableRestoreFocus\n            >\n              <ContactList\n                apiUrl={apiUrl}\n                contacts={group.members as Contact[]}\n                owner={group.userId}\n              />\n            </Popover>\n          </React.Fragment>\n        }\n        className={className}\n        action={\n          <React.Fragment>\n            {user.role === 4 && (\n              <React.Fragment>\n                <IconButton\n                  aria-label=\"add user\"\n                  onClick={handleAddOperatorOpen}\n                >\n                  <PersonAddIcon />\n                </IconButton>\n                <AddContact\n                  apiUrl={apiUrl}\n                  open={addOperatorOpen}\n                  contacts={operators}\n                  onClose={handleAddOperatorClose}\n                />\n              </React.Fragment>\n            )}\n            {user.role === 4 &&\n              group.members?.find(\n                (it) => it.userId !== user.userId && it.role === 4,\n              ) &&\n              onLeaveGroup && (\n                <IconButton\n                  aria-label=\"leave group\"\n                  onClick={() => onLeaveGroup(group)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              )}\n          </React.Fragment>\n        }\n      />\n    );\n  }\n  const contact = chat as Contact;\n  const isTyping =\n    !!typing?.contactId && typing?.userId === contact.userId;\n/*\n  console.log(\n    'conference',\n    conference,\n    'user',\n    user,\n    'contact',\n    contact,\n  );\n*/\n  return (\n    <CardHeader\n      avatar={\n        <Avatar\n          alt={contact.username}\n          src={`${apiUrl}${contact.avatar}`}\n        />\n      }\n      title={contact.username}\n      subheader={\n        <ContactStatus contact={contact} isTyping={isTyping} />\n      }\n      className={className}\n      action={\n        <React.Fragment>\n          {conferenceJoined &&\n            conference &&\n            !isEmpty(conference) &&\n            onConferencePause != null && (\n              <Button\n                aria-label=\"cancel call\"\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                startIcon={<CallEndIcon color=\"error\" />}\n                onClick={() => onConferencePause(conference)}\n              >\n                {t('CHAT.CONFERENCE.PAUSE')}\n              </Button>\n            )}\n\n          {conference &&\n            !isEmpty(conference) &&\n            onVideoEnd != null &&\n            user.role != null &&\n            [3, 4].includes(user.role) && (\n              <Button\n                aria-label=\"cancel call\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<CallEndIcon color=\"error\" />}\n                onClick={() => onVideoEnd(conference)}\n                style={{ marginLeft: 8 }}\n              >\n                {t('CHAT.CONFERENCE.FINISH')}\n              </Button>\n            )}\n\n          {isEmpty(conference) &&\n            onVideoCall != null &&\n            user.role &&\n            [3, 4].includes(user.role) && (\n              <Button\n                aria-label=\"video call\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<VideoCallIcon />}\n                onClick={() => onVideoCall(contact)}\n              >\n                {t('CHAT.CONFERENCE.START')}\n              </Button>\n            )}\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default RoomHeader;\n","import React, { useCallback } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CircularProgress,\n  Divider,\n  List,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  IconButton\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport Entry from \"./Entry\";\nimport Message from \"./Message\";\nimport RoomHeader from \"./RoomHeader\";\nimport { useTranslation } from \"react-i18next\";\nimport { getChatId, isEmpty } from \"../utils/common\";\nimport {\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  SetTyping,\n  User,\n  Contact,\n  ConferenceData,\n  Group,\n  ContactGather\n} from \"../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      minWidth: 360,\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    inline: {\n      display: \"inline\"\n    },\n    messageListOuter: {\n      flex: 1,\n      overflowY: \"auto\",\n      margin: 0,\n      padding: 0,\n      scrollbarWidth: \"thin\",\n      scrollbarColor: \"#6b6b6b #fff\",\n      \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n        backgroundColor: \"#fff\"\n      },\n      \"&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb\": {\n        borderRadius: 8,\n        backgroundColor: \"#d5d9ef\",\n        border: \"5px solid #fff\"\n      },\n      \"&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus\": {\n        backgroundColor: \"#fff\"\n      },\n      \"&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active\": {\n        backgroundColor: \"#73d7f5\",\n        border: \"3px solid #fff\"\n      },\n      \"&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover\": {\n        backgroundColor: \"#73d7f5\",\n        border: \"3px solid #fff\"\n      },\n      \"&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner\": {\n        backgroundColor: \"#fff\"\n      }\n    },\n    messageList: {\n      height: \"100%\",\n      overflow: \"auto\"\n    },\n    roomHeader: {\n      flex: 1\n    },\n    roomProgress: {\n      padding: theme.spacing(2)\n    },\n    flexAll: {\n      flex: \"1 1 auto\"\n    },\n    flexEnd: {\n      justifyContent: \"flex-end\"\n    }\n  })\n);\n\nconst initialMenuState = {\n  message: null,\n  mouseX: null,\n  mouseY: null,\n  canCopy: false,\n  canDelete: false\n};\n\nconst initialScrollState = {\n  autoScroll: true,\n  height: 0\n};\n\ntype RoomProps = {\n  apiUrl: string;\n  user: User;\n  users: ContactGather;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  conferenceJoined: boolean;\n  loading: boolean;\n  pageSize: number;\n  operators: Contact[];\n  onExitRoom?: (chat: ChatRoom) => void;\n  onEnterRoom?: (chat: ChatRoom) => void;\n  onNeedMoreMessages: (chat: ChatRoom) => Promise<void>;\n  onMeesageDelete?: (chat: ChatRoom, message: ChatMessage) => void;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n  onVideoCall?: (chat: ChatRoom) => void;\n  onVideoEnd?: (chat: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst Room: React.FC<RoomProps> = (props: RoomProps) => {\n  const {\n    apiUrl,\n    user,\n    users,\n    chat,\n    typing,\n    conference,\n    conferenceJoined,\n    loading,\n    pageSize\n  } = props;\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [scrollState, setScrollState] = React.useState(initialScrollState);\n\n  const messages = chat?.messages;\n  const messageCount = messages?.length || 0;\n\n  const refOnLastMess = React.useRef<HTMLDivElement>(null);\n  const refList = React.useRef<HTMLUListElement>(null);\n\n  const [menuState, setMenuState] = React.useState<{\n    message: ChatMessage | null;\n    mouseX: null | number;\n    mouseY: null | number;\n    canCopy: boolean;\n    canDelete: boolean;\n  }>(initialMenuState);\n\n  React.useEffect(() => {\n    if (props.onEnterRoom && chat) props.onEnterRoom(chat);\n  }, [getChatId(chat)]);\n\n  React.useLayoutEffect(() => {\n    if (scrollState.autoScroll && refOnLastMess.current) {\n      refOnLastMess.current.scrollIntoView();\n    }\n  }, [getChatId(chat), messageCount]);\n\n  React.useLayoutEffect(() => {\n    if (!loading && refList.current && scrollState.height > 0) {\n      refList.current.scrollTop =\n        refList.current.scrollHeight - scrollState.height;\n      setScrollState(initialScrollState);\n    }\n  }, [getChatId(chat), loading, scrollState.height]);\n\n  const onScroll = React.useCallback(\n    async (event: React.UIEvent<HTMLUListElement>) => {\n      const { currentTarget } = event;\n      if (!currentTarget || !chat || !!chat.noMoreData) return;\n      if (currentTarget.scrollTop === 0) {\n        if (messageCount >= pageSize && !loading && props.onNeedMoreMessages) {\n          setScrollState({\n            autoScroll: false,\n            height: currentTarget.scrollHeight\n          });\n          props.onNeedMoreMessages(chat);\n        }\n      }\n    },\n    [chat, loading]\n  );\n\n  const handleMenuPopup = (\n    message: ChatMessage,\n    event: React.MouseEvent<HTMLElement>\n  ) => {\n    const canCopy = message.messageType === \"text\";\n    const canDelete =\n      user.userId === message.userId &&\n      !!props.onMeesageDelete &&\n      new Date().getTime() - new Date(message.cdate).getTime() <= 1000 * 60 * 2;\n    if (!canCopy && !canDelete) {\n      setMenuState(initialMenuState);\n      return;\n    }\n    event.preventDefault();\n    setMenuState({\n      message,\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4,\n      canCopy,\n      canDelete\n    });\n  };\n\n  const handleMenuClose = () => {\n    setMenuState(initialMenuState);\n  };\n\n  const handleCopy = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (!message) return;\n    navigator.clipboard.writeText(message.content);\n  }, [menuState.message]);\n\n  const handleDelete = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (props.onMeesageDelete && chat && message)\n      props.onMeesageDelete(chat, message);\n  }, [menuState.message]);\n\n  //console.log(\"messages\", messages)\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <Box display=\"flex\" flexDirection=\"row\">\n        {props.onExitRoom && chat && (\n          <IconButton\n            aria-label=\"exit room\"\n            onClick={() => props.onExitRoom && props.onExitRoom(chat)}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n        )}\n        <RoomHeader\n          apiUrl={apiUrl}\n          user={user}\n          chat={chat}\n          typing={typing}\n          conference={conference}\n          conferenceJoined={conferenceJoined}\n          operators={props.operators}\n          className={classes.roomHeader}\n          onVideoCall={props.onVideoCall}\n          onVideoEnd={props.onVideoEnd}\n          onConferencePause={props.onConferencePause}\n          onOperatorAdd={props.onOperatorAdd}\n          onLeaveGroup={props.onLeaveGroup}\n        />\n        {loading && (\n          <div className={classes.roomProgress}>\n            <CircularProgress size={20} />\n          </div>\n        )}\n      </Box>\n      <Divider />\n      <CardContent className={classes.messageListOuter}>\n        {!isEmpty(messages) ? (\n          <List className={classes.messageList} onScroll={onScroll}>\n            {messages != null &&\n              (messages as ChatMessage[]).map((message, inx) => (\n                <Message\n                  key={inx}\n                  apiUrl={apiUrl}\n                  user={user}\n                  message={message}\n                  owner={users[message.userId]}\n                  isGroupMessage={!!chat?.groupId}\n                  isUserFirst={\n                    inx === 0 ||\n                    messages[inx - 1].messageType === \"notify\" ||\n                    messages[inx - 1].userId !== messages[inx].userId\n                  }\n                  isUserLast={\n                    inx === messages.length - 1 ||\n                    messages[inx + 1].messageType === \"notify\" ||\n                    messages[inx + 1].userId !== messages[inx].userId\n                  }\n                  onContextMenu={event => handleMenuPopup(message, event)}\n                  refOnLastMess={\n                    inx === messages.length - 1 ? refOnLastMess : null\n                  }\n                />\n              ))}\n          </List>\n        ) : null}\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Entry\n          chat={chat}\n          onTyping={props.onTyping}\n          onSendMessage={props.onSendMessage}\n        />\n      </CardContent>\n      <Menu\n        keepMounted\n        open={menuState.mouseY !== null}\n        onClose={handleMenuClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          menuState.mouseY !== null && menuState.mouseX !== null\n            ? { top: menuState.mouseY, left: menuState.mouseX }\n            : undefined\n        }\n      >\n        <MenuItem onClick={handleCopy} disabled={!menuState.canCopy}>\n          <span className={classes.flexAll}>{t(\"CHAT.MESSAGE.MENU.COPY\")}</span>\n          <ListItemIcon className={classes.flexEnd}>\n            <FileCopyIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n        <MenuItem onClick={handleDelete} disabled={!menuState.canDelete}>\n          <span className={classes.flexAll}>\n            {t(\"CHAT.MESSAGE.MENU.DELETE\")}\n          </span>\n          <ListItemIcon className={classes.flexEnd}>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n      </Menu>\n    </Card>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport {\n  Avatar,\n  Badge,\n  Box,\n  Chip,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles, withStyles } from \"@mui/styles\";\n\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport { formatTime, getChatName } from \"../utils/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatMessage, ChatRoom, Contact, Group, SetTyping } from \"../types\";\n\ntype RoomListItemProps = {\n  apiUrl: string;\n  chat: ChatRoom;\n  active: boolean;\n  typing: SetTyping | null;\n  onClick: React.MouseEventHandler<HTMLDivElement> | undefined;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      flex: \"1 1 auto\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n    time: {\n      paddingLeft: theme.spacing(1),\n      justifyContent: \"flex-end\",\n      whiteSpace: \"nowrap\",\n    },\n    unread: {\n      justifyContent: \"flex-end\",\n      maxHeight: 20,\n    },\n    avatarGroup: {\n      backgroundColor: \"#28B7C6\",\n      color: \"#fff\",\n    },\n  })\n);\n\nconst getMessageText = (\n  message: ChatMessage | null,\n  t: (key: string) => string\n) => {\n  if (!message) return null;\n  switch (message.messageType) {\n    case \"text\":\n      return message.content;\n    case \"image\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.IMAGE\")}]`;\n    case \"video\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.VIDEO\")}]`;\n    case \"file\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.FILE\")}]`;\n    case \"notify\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.NOTIFY\")}]`;\n    default:\n      return null;\n  }\n};\n\nconst TypingBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: \"#44b700\",\n      color: \"#44b700\",\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      \"&::after\": {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"50%\",\n        animation: \"$ripple 1.2s infinite ease-in-out\",\n        border: \"1px solid currentColor\",\n        content: '\"\"',\n      },\n    },\n    \"@keyframes ripple\": {\n      \"0%\": {\n        transform: \"scale(.8)\",\n        opacity: 1,\n      },\n      \"100%\": {\n        transform: \"scale(2.4)\",\n        opacity: 0,\n      },\n    },\n  })\n)(Badge);\n\nconst OnlineBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: theme.palette.primary.main,\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    },\n  })\n)(Badge);\n\nconst contactAvatar = (\n  apiUrl: string,\n  contact: Contact,\n  typing: SetTyping | null\n): JSX.Element => {\n  const avatar = (\n    <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n  );\n\n  const isTyping = !!typing?.contactId && typing?.userId === contact.userId;\n  if (isTyping)\n    return (\n      <TypingBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </TypingBadge>\n    );\n\n  if (contact?.online)\n    return (\n      <OnlineBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </OnlineBadge>\n    );\n\n  return avatar;\n};\n\nconst RoomListItem: React.FC<RoomListItemProps> = (\n  props: RoomListItemProps\n) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { apiUrl, chat, typing } = props;\n  const roomName = getChatName(chat);\n\n  const avatar = (chat as Group).groupId ? (\n    <Avatar alt={roomName} className={classes.avatarGroup}>\n      <GroupIcon />{\" \"}\n    </Avatar>\n  ) : (\n    contactAvatar(apiUrl, chat as Contact, typing)\n  );\n\n  const lastMessage =\n    chat.messages && chat.messages.length > 0\n      ? chat.messages[chat.messages.length - 1]\n      : null;\n\n  const roomText = getMessageText(lastMessage, t);\n  const roomTime = lastMessage?.cdate;\n\n  return (\n    <ListItem button selected={props.active} onClick={props.onClick}>\n      <ListItemAvatar>{avatar}</ListItemAvatar>\n      <ListItemText\n        secondaryTypographyProps={{ component: \"span\" }}\n        primary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomName}</span>\n            <span className={classes.time}>{formatTime(roomTime)}</span>\n          </Box>\n        }\n        secondary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomText}</span>\n            {chat.unreadCount ? (\n              <Chip\n                className={classes.unread}\n                component=\"span\"\n                size=\"small\"\n                color=\"primary\"\n                label={chat.unreadCount}\n              />\n            ) : null}\n          </Box>\n        }\n      />\n    </ListItem>\n  );\n};\nexport default RoomListItem;\n","import React from 'react';\nimport List from '@mui/material/List';\nimport { Card, CardHeader, Divider, TextField } from '@mui/material';\nimport RoomListItem from './RoomListItem';\nimport {\n  chatRoomComparer,\n  getChatId,\n  getChatName,\n  isEmpty,\n} from '../utils/common';\nimport { useTranslation } from 'react-i18next';\nimport { ChatRoom, Contact, Group, SetTyping, User } from '../types';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    height: '100%',\n  },\n  searchField: {\n    width: '100%',\n  },\n  listStyle: {\n    maxHeight: '100%',\n    overflowY: 'auto',\n    scrollbarColor: '#6b6b6b #fff',\n    '&::-webkit-scrollbar, & *::-webkit-scrollbar': {\n      backgroundColor: '#fff',\n    },\n    '&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb': {\n      borderRadius: 8,\n      backgroundColor: '#d5d9ef',\n      border: '5px solid #fff',\n    },\n    '&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus': {\n      backgroundColor: '#fff',\n    },\n    '&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active': {\n      backgroundColor: '#73d7f5',\n      border: '3px solid #fff',\n    },\n    '&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover': {\n      backgroundColor: '#73d7f5',\n      border: '3px solid #fff',\n    },\n    '&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner': {\n      backgroundColor: '#fff',\n    },\n  },\n}));\n\ntype RoomListProps = {\n  apiUrl: string;\n  user: User;\n  activeRoom: ChatRoom | null;\n  groups: Group[];\n  contacts: Contact[];\n  typing: SetTyping | null;\n  onChangeChat?: (chat: ChatRoom) => void;\n};\n\nconst filterChats = (\n  chats: ChatRoom[],\n  filter: string | null,\n): ChatRoom[] => {\n  if (filter === null) return chats;\n  const lowerFilter = filter.toLowerCase();\n  return chats.filter(\n    chat =>\n      getChatName(chat)\n        .toLowerCase()\n        .indexOf(lowerFilter.toLowerCase()) !== -1,\n  );\n};\n\nconst sortChats = (\n  userId: number,\n  groups: ChatRoom[],\n  contacts: ChatRoom[],\n) => {\n  let roomArr = [...groups, ...contacts];\n  //console.log('groups', groups, 'contacts', contacts);\n\n  // Сортировать окно чата (по времени последних сообщений)\n  roomArr = roomArr.sort(chatRoomComparer);\n\n  // Проверяем, есть ли список, который нужно закрепить\n  const topChatId = localStorage.getItem(\n    `${userId}-topChatId`,\n  ) as string;\n  if (topChatId) {\n    const chat = roomArr.find(c => getChatId(c) === topChatId);\n    if (chat) {\n      // На первое место\n      roomArr = roomArr.filter(k => getChatId(k) !== topChatId);\n      chat.isTop = true;\n      roomArr.unshift(chat);\n    }\n  }\n\n  return roomArr;\n};\n\nconst RoomList: React.FC<RoomListProps> = (props: RoomListProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [chats, setChats] = React.useState<ChatRoom[]>(\n    sortChats(\n      props.user.userId,\n      filterChats(props.groups, null),\n      filterChats(props.contacts, null),\n    ),\n  );\n\n  const onSearchChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ): void => {\n    //console.log(\"e.target.value\", e.target.value);\n\n    setChats(\n      sortChats(\n        props.user.userId,\n        filterChats(props.groups, e.target.value),\n        filterChats(props.contacts, e.target.value),\n      ),\n    );\n  };\n  //const activeItem = (id: number) => id === props.activeRoom?.userId;\n\n  //console.log(\"chats\", chats);\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <CardHeader\n        title={\n          <TextField\n            className={classes.searchField}\n            label={t('CHAT.INPUT_SEARCH_CONTACT')}\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            onChange={onSearchChange}\n          />\n        }\n      />\n      <Divider />\n      <List aria-label=\"rooms\" className={classes.listStyle}>\n        {!isEmpty(chats) &&\n          chats.map(\n            chat =>\n              !isEmpty(chat) && (\n                <RoomListItem\n                  key={getChatId(chat)}\n                  apiUrl={props.apiUrl}\n                  chat={chat}\n                  active={chat === props.activeRoom}\n                  typing={props.typing}\n                  onClick={() =>\n                    props.onChangeChat != null &&\n                    props.onChangeChat(chat)\n                  }\n                />\n              ),\n          )}\n      </List>\n    </Card>\n  );\n};\nexport default RoomList;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from '@mui/styles';\nimport { ConferenceData } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n  },\n}));\n\ntype ConferenceProps = {\n  conference: ConferenceData | null;\n  onClose: (conference: ConferenceData | null) => void;\n};\n\nconst Conference: React.FC<ConferenceProps> = ({\n  conference,\n  onClose,\n}: ConferenceProps) => {\n  const classes = useStyles();\n  const ref = React.useRef<HTMLIFrameElement>(null);\n\n  useEffect(() => {\n\n    const listener = ({ source, data }: MessageEvent) => {\n      if (source === ref.current?.contentWindow) {\n        const { type } = data;\n        if (\n          [\n            \"notSupported\",\n            \"connectionFail\",\n            // \"loginFail\",\n            \"callFail\",\n            \"hangUp\",\n            \"remoteHangUp\",\n            // \"onParticipantLeft\"\n          ].includes(type)\n        )\n          onClose(conference);\n      }\n    };\n    window.addEventListener(\"message\", listener);\n    return () => {\n      window.removeEventListener(\"message\", listener);\n    };\n  }, [conference?.id]);\n\n  return (\n    <iframe\n      title=\"conference\"\n      className={classes.root}\n      src={conference?.url}\n      allowFullScreen\n      allow=\"microphone; camera; autoplay; display-capture\"\n      ref={ref}\n    />\n  );\n};\nexport default Conference;\n","import React from \"react\";\nimport { Avatar, Button,  Paper } from \"@mui/material\";\nimport { ConferenceData, Contact } from \"../types\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  pulse: {\n    height: 100,\n    width: 100,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n    \"&::before\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\",\n    },\n    \"&::after\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\",\n      animationDelay: \"0.3s\",\n    },\n  },\n  avatar: {\n    width: \"80%\",\n    height: \"80%\",\n  },\n  footer: {\n    width: \"100%\",\n    alignSelf: \"flex-end\",\n    paddingTop: 64,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  \"@keyframes pulse\": {\n    \"0%\": {\n      transform: \"scale(0.5)\",\n      opacity: 0,\n    },\n    \"50%\": {\n      transform: \"scale(1)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(1.3)\",\n      opacity: 0,\n    },\n  },\n}));\n\ntype ConferenceCallProps = {\n  conference: ConferenceData;\n  contact: Contact;\n  apiUrl: string;\n  onAccept: (conference: ConferenceData) => void;\n};\n\nconst ConferenceCall: React.FC<ConferenceCallProps> = ({\n  conference,\n  contact,\n  apiUrl,\n  onAccept,\n}: ConferenceCallProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.pulse}>\n        {contact ? (\n          <Avatar\n            className={classes.avatar}\n            alt={contact.username}\n            src={`${apiUrl}${contact.avatar}`}\n          />\n        ) : (\n          <Avatar className={classes.avatar} />\n        )}\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => onAccept(conference)}\n        >\n          {t(\"CHAT.CONFERENCE.JOIN\")}\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n\nexport default ConferenceCall;\n","import React from 'react';\nimport {\n  AddGroupMessages,\n  AddPrivateMessages,\n  ChatRoom,\n  Contact,\n  ContactGather,\n  Group,\n  GroupGather,\n  GroupMember,\n  GroupMessage,\n  MessageOperation,\n  PrivateMessage,\n  SetActiveRoom,\n  //SetUser,\n  SetTyping,\n  User,\n  ConferenceData,\n  GroupMap,\n} from '../types';\nimport { chatRoomComparer } from '../utils/common';\n\nexport interface ChatState {\n  tokenKey: string;\n  user: User;\n  token: string;\n  activeRoom: ChatRoom | null;\n  groupGather: GroupGather;\n  userGather: ContactGather;\n  contactGather: ContactGather;\n  operators: Contact[];\n  initialContactId: number | null;\n  conference: {\n    data: ConferenceData | null;\n    joined: boolean;\n    ringPlayed: boolean;\n  };\n  typing: SetTyping | null;\n  loading: boolean;\n  error?: string;\n}\n\nconst emptyUser: User = {\n  userId: 0,\n  username: '',\n  password: '',\n  avatar: '',\n  langCode: '',\n};\n\nconst emptyChatState: ChatState = {\n  tokenKey: '', // ключ, где хранить токен\n  user: emptyUser, // пользователь\n  token: '', // токен\n  activeRoom: null, // активная комната\n  groupGather: {}, // список групп\n  userGather: {}, // список онлайн\n  contactGather: {}, // контакты\n  operators: [], // операторы\n  initialContactId: null, // начальный контакт\n  conference: {\n    data: null, // данные конференции\n    joined: false,\n    ringPlayed: false,\n  },\n  typing: null, // кто печатает текст\n  loading: false, // загрузка данных\n  error: undefined, // ошибка\n};\n\ntype ChatActionType =\n  | 'ADD_GROUP_MEMBER'\n  | 'ADD_GROUP_MESSAGE'\n  | 'ADD_GROUP_MESSAGES'\n  | 'SET_GROUP_MESSAGES'\n  | 'ADD_PRIVATE_MESSAGE'\n  | 'ADD_PRIVATE_MESSAGES'\n  | 'SET_PRIVATE_MESSAGES'\n  | 'SET_ACTIVE_ROOM'\n  | 'UPDATE_ACTIVE_ROOM'\n  | 'SET_GROUP_GATHER'\n  | 'SET_CONTACT_GATHER'\n  | 'SET_USER_GATHER'\n  | 'DEL_GROUP'\n  | 'DEL_GROUP_MEMBER'\n  | 'DEL_CONTACT'\n  | 'ADD_CONTACT_UNREAD_GATHER'\n  | 'LOSE_CONTACT_UNREAD_GATHER'\n  | 'ADD_GROUP_UNREAD_GATHER'\n  | 'LOSE_GROUP_UNREAD_GATHER'\n  | 'REVOKE_MESSAGE'\n  | 'USER_ONLINE'\n  | 'USER_OFFLINE'\n  | 'UPDATE_USER_INFO'\n  | 'SET_INITIAL_CONTACT_ID'\n  | 'SET_CONFERENCE'\n  | 'JOIN_CONFERENCE'\n  | 'PAUSE_CONFERENCE'\n  | 'STOP_CONFERENCE'\n  | 'SET_TYPING'\n  | 'MARK_AS_READ'\n  | 'UPDATE_GROUP_INFO'\n  | 'MARK_PRIVATE_MESSAGES_READ'\n  | 'SET_LOADING'\n  | 'SET_ERROR'\n  | 'SET_USER'\n  | 'SET_TOKEN'\n  | 'CLEAR_USER'\n  | 'CLEAR_CHAT_DATA'\n  | 'SET_OPERATORS';\n\ntype Action = {\n  type: ChatActionType;\n  payload?:\n    | null\n    | boolean\n    | number\n    | string\n    | Group\n    | Contact\n    | User\n    | PrivateMessage\n    | GroupMessage\n    | SetTyping\n    | MessageOperation\n    | GroupMember\n    | AddPrivateMessages\n    | AddGroupMessages\n    | SetActiveRoom\n    | ConferenceData\n    | Contact[]\n    | GroupMap;\n};\n\nconst getFreshActiveRoom = (state: ChatState) => {\n  if (state.activeRoom)\n    return (\n      state.groupGather[(state.activeRoom as Group).groupId] ||\n      state.contactGather[state.activeRoom.userId]\n    );\n  return null;\n};\n\nconst getActiveRoom = (state: ChatState) => {\n  const { activeRoom, initialContactId, contactGather } = state;\n  let newActiveRoom: ChatRoom | null = null;\n  if (initialContactId) {\n    newActiveRoom = contactGather[initialContactId];\n  } else if (activeRoom) {\n    newActiveRoom = getFreshActiveRoom(state);\n  } else {\n    // ищем комнату с самым свежим сообщением\n    const rooms = [\n      ...Object.values(state.contactGather),\n      ...Object.values(state.groupGather),\n    ].sort(chatRoomComparer);\n    if (rooms.length > 0) newActiveRoom = rooms[0];\n  }\n  return newActiveRoom;\n};\n\nconst setUserOnline = (\n  state: ChatState,\n  userId: number,\n  online: 0 | 1,\n): ChatState => {\n  const newState = { ...state };\n  // Обновить статусы приватных чатов\n  if (state.contactGather[userId])\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      online,\n    };\n\n  // Обновить статус участника в группах\n  for (const group of Object.values(state.groupGather) as Group[]) {\n    if (!group.members) continue;\n    const member = group.members.find((m) => m.userId === userId);\n    if (member) {\n      const index = group.members.indexOf(member);\n      group.members[index] = { ...member, online };\n    }\n  }\n  // Обновить статус операторов\n  const idx = newState.operators.findIndex(\n    (it) => it.userId === userId,\n  );\n  if (idx !== -1)\n    newState.operators[idx] = { ...newState.operators[idx], online };\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addGroupMessage = (state: ChatState, payload: GroupMessage) => {\n  const newState = { ...state };\n  const { groupId } = payload;\n  if (newState.groupGather[groupId]) {\n    if (newState.groupGather[groupId].messages) {\n      newState.groupGather[groupId].messages = [\n        ...(newState.groupGather[groupId].messages as GroupMessage[]),\n        payload,\n      ];\n    } else {\n      newState.groupGather[groupId] = {\n        ...state.groupGather[groupId],\n        messages: [payload],\n      };\n    }\n  }\n\n  // увеличиваем счетчик новых сообщений, если это не активная комната и сообщение не от нас\n  const { activeRoom } = newState;\n  if (\n    activeRoom &&\n    (activeRoom as Group).groupId !== groupId &&\n    payload.userId !== state.user.userId\n  ) {\n    return groupUnreadGather(\n      newState,\n      groupId,\n      (x?: number) => (x || 0) + 1,\n    );\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addPrivateMessage = (\n  state: ChatState,\n  payload: PrivateMessage,\n) => {\n  const newState = { ...state };\n  const contactId =\n    payload.contactId === state.user.userId\n      ? payload.userId\n      : payload.contactId;\n\n  // 1 добавляем сообщение\n  if (newState.contactGather[contactId].messages) {\n    newState.contactGather[contactId].messages = [\n      ...(newState.contactGather[contactId]\n        .messages as PrivateMessage[]),\n      payload,\n    ];\n  } else {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [payload],\n    };\n  }\n\n  // 2 если это сообщение в неактивной комнате и источник не мы (в соседней вкладке), то увеличиваем счетчик непрочитанных\n  if (\n    newState.activeRoom?.userId !== contactId &&\n    payload.userId !== state.user.userId\n  ) {\n    return contactUnreadGather(\n      newState,\n      contactId,\n      (x?: number) => (x || 0) + 1,\n    );\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst contactUnreadGather = (\n  state: ChatState,\n  userId: number,\n  predicate: (x?: number) => number,\n) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      unreadCount: predicate(\n        newState.contactGather[userId].unreadCount,\n      ),\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst groupUnreadGather = (\n  state: ChatState,\n  groupId: number,\n  predicate: (x?: number) => number,\n) => {\n  const newState = { ...state };\n\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      unreadCount: predicate(\n        newState.groupGather[groupId].unreadCount,\n      ),\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst revokeMessage = (\n  state: ChatState,\n  payload: MessageOperation,\n) => {\n  const { userId } = state.user;\n  const newState = { ...state };\n  const userName =\n    payload.username ||\n    newState.userGather[payload.userId as number].username;\n  if (payload.groupId) {\n    const { messages } = newState.groupGather[payload.groupId];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find(\n        (message) => message._id === payload._id,\n      );\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName,\n        };\n      }\n    }\n  } else {\n    const { messages } =\n      newState.contactGather[\n        payload.contactId === userId\n          ? (payload.userId as number)\n          : (payload.contactId as number)\n      ];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find(\n        (message) => message._id === payload._id,\n      );\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName,\n        };\n      }\n    }\n  }\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst delContact = (state: ChatState, userId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.contactGather[userId];\n  delete newState.contactGather[userId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroup = (state: ChatState, groupId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.groupGather[groupId];\n  delete newState.groupGather[groupId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroupMember = (state: ChatState, data: GroupMap) => {\n  const newState = { ...state };\n\n  const group = newState.groupGather[data.groupId];\n  if (group) {\n    group.members = group.members?.filter(\n      (it) => it.userId !== data.userId,\n    );\n  }\n\n  return newState;\n};\n\nconst updateGroupInfo = (state: ChatState, group: Group) => {\n  const newState = { ...state };\n\n  const { groupId, name, notice } = group;\n  const info = newState.groupGather[groupId];\n  if (info) {\n    newState.groupGather[groupId] = { ...info, name, notice };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst updateUserInfo = (state: ChatState, user: User) => {\n  const newState = { ...state };\n\n  const { userId, username, avatar } = user;\n\n  if (newState.userGather[userId]) {\n    newState.userGather[userId] = {\n      ...newState.userGather[userId],\n      username,\n      avatar,\n    };\n  }\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      username,\n      avatar,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMember = (state: ChatState, payload: GroupMember) => {\n  const members: Contact[] = payload.members.map((member) => ({\n    ...member,\n    isManager: 0,\n  }));\n\n  const newState = { ...state };\n\n  if (newState.groupGather[payload.groupId].members && members) {\n    newState.groupGather[payload.groupId].members = [\n      ...(state.groupGather[payload.groupId].members as Contact[]),\n      ...members,\n    ];\n  } else {\n    newState.groupGather[payload.groupId] = {\n      ...newState.groupGather[payload.groupId],\n      members,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst markPrivateMessagesRead = (\n  state: ChatState,\n  userId: number,\n) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    const updatedValue = { ...newState.contactGather[userId] };\n\n    if (updatedValue.messages) {\n      for (let i = 0; i < updatedValue.messages.length; i++)\n        updatedValue.messages[i] = {\n          ...updatedValue.messages[i],\n          status: 1,\n        };\n    }\n    newState.contactGather[userId] = updatedValue;\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addPrivateMessages = (\n  state: ChatState,\n  data: AddPrivateMessages,\n) => {\n  const newState = { ...state };\n\n  const { messages, contactId } = data;\n\n  if (newState.contactGather[contactId]) {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [\n        ...(messages || []),\n        ...(newState.contactGather[contactId].messages || []),\n      ],\n      noMoreData: messages?.length\n        ? messages?.length < data.pageSize\n        : false,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMessages = (\n  state: ChatState,\n  data: AddGroupMessages,\n) => {\n  const newState = { ...state };\n\n  const { groupId, messages, userArr: users } = data;\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      messages: [\n        ...(messages || []),\n        ...(newState.groupGather[groupId].messages || []),\n      ],\n      noMoreData: messages?.length\n        ? messages?.length < data.pageSize\n        : false,\n    };\n  }\n\n  newState.userGather = { ...newState.userGather };\n  for (const user of users) {\n    if (!newState.userGather[user.userId]) {\n      newState.userGather[user.userId] = user;\n    }\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst setActiveRoom = (state: ChatState, data: SetActiveRoom) => {\n  if (state.activeRoom && data.ifNotExists) return state;\n  return {\n    ...state,\n    activeRoom: data.groupId\n      ? state.groupGather[data.groupId]\n      : data.contactId\n      ? state.contactGather[data.contactId]\n      : null,\n  };\n};\n\nconst setToken = (state: ChatState, token: string): ChatState => {\n  localStorage.setItem(state.tokenKey, token);\n  return {\n    ...state,\n    token,\n  };\n};\n\nconst clearUser = (state: ChatState): ChatState => {\n  localStorage.removeItem(state.tokenKey);\n  return {\n    ...state,\n    token: '',\n    user: emptyUser,\n  };\n};\n\nconst setConference = (\n  state: ChatState,\n  conference: ConferenceData,\n): ChatState => {\n  return {\n    ...state,\n    conference: {\n      data: { ...conference },\n      joined: conference?.userId === state.user.userId,\n      ringPlayed: conference?.userId !== state.user.userId,\n    },\n  };\n};\n\nconst pauseConference = (\n  state: ChatState,\n  conference: ConferenceData,\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: {\n      data: { ...state.conference.data },\n      joined: false,\n      ringPlayed: false,\n    },\n  };\n};\n\nconst stopConference = (\n  state: ChatState,\n  conference: ConferenceData,\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: { data: null, joined: false, ringPlayed: false },\n  };\n};\n\nfunction chatReducer(state: ChatState, action: Action): ChatState {\n  switch (action.type) {\n    case 'SET_GROUP_GATHER':\n      return {\n        ...state,\n        groupGather: {\n          ...state.groupGather,\n          [(action.payload as Group).groupId]:\n            action.payload as Group,\n        },\n      };\n    case 'SET_CONTACT_GATHER':\n      return {\n        ...state,\n        contactGather: {\n          ...state.contactGather,\n          [(action.payload as Contact).userId]:\n            action.payload as Contact,\n        },\n      };\n    case 'DEL_GROUP':\n      return delGroup(state, action.payload as number);\n    case 'DEL_GROUP_MEMBER':\n      return delGroupMember(state, action.payload as GroupMap);\n    case 'DEL_CONTACT':\n      return delContact(state, (action.payload as Contact).userId);\n    case 'SET_USER_GATHER':\n      return {\n        ...state,\n        userGather: {\n          ...state.userGather,\n          [(action.payload as User).userId]: action.payload as User,\n        },\n      };\n    case 'UPDATE_ACTIVE_ROOM':\n      return { ...state, activeRoom: getActiveRoom(state) };\n    case 'SET_ACTIVE_ROOM':\n      return setActiveRoom(state, action.payload as SetActiveRoom);\n    case 'USER_ONLINE':\n      return setUserOnline(state, action.payload as number, 1);\n    case 'USER_OFFLINE':\n      return setUserOnline(state, action.payload as number, 0);\n    case 'ADD_GROUP_MESSAGE':\n      return addGroupMessage(state, action.payload as GroupMessage);\n    case 'ADD_PRIVATE_MESSAGE':\n      return addPrivateMessage(\n        state,\n        action.payload as PrivateMessage,\n      );\n    case 'ADD_GROUP_UNREAD_GATHER':\n      return groupUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1,\n      );\n    case 'ADD_CONTACT_UNREAD_GATHER':\n      return contactUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1,\n      );\n    case 'SET_TYPING':\n      return { ...state, typing: action.payload as SetTyping };\n    case 'LOSE_GROUP_UNREAD_GATHER':\n      return groupUnreadGather(\n        state,\n        action.payload as number,\n        () => 0,\n      );\n    case 'LOSE_CONTACT_UNREAD_GATHER':\n      return contactUnreadGather(\n        state,\n        action.payload as number,\n        () => 0,\n      );\n    case 'REVOKE_MESSAGE':\n      return revokeMessage(state, action.payload as MessageOperation);\n    case 'UPDATE_GROUP_INFO':\n      return updateGroupInfo(state, action.payload as Group);\n    case 'UPDATE_USER_INFO':\n      return updateUserInfo(state, action.payload as User);\n    case 'ADD_GROUP_MEMBER':\n      return addGroupMember(state, action.payload as GroupMember);\n    case 'SET_CONFERENCE':\n      return setConference(state, action.payload as ConferenceData);\n    case 'JOIN_CONFERENCE':\n      return {\n        ...state,\n        conference: {\n          data: { ...(action.payload as ConferenceData) },\n          joined: true,\n          ringPlayed: false,\n        },\n      };\n    case 'PAUSE_CONFERENCE':\n      return pauseConference(state, action.payload as ConferenceData);\n    case 'STOP_CONFERENCE':\n      return stopConference(state, action.payload as ConferenceData);\n    case 'MARK_PRIVATE_MESSAGES_READ':\n      return markPrivateMessagesRead(state, action.payload as number);\n    case 'ADD_PRIVATE_MESSAGES':\n      return addPrivateMessages(\n        state,\n        action.payload as AddPrivateMessages,\n      );\n    case 'ADD_GROUP_MESSAGES':\n      return addGroupMessages(\n        state,\n        action.payload as AddGroupMessages,\n      );\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload as boolean,\n        error: '',\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload as string,\n      };\n    case 'SET_TOKEN':\n      return setToken(state, action.payload as string);\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload as User,\n      };\n    case 'CLEAR_USER':\n      return clearUser(state);\n    case 'CLEAR_CHAT_DATA':\n      return {\n        ...state,\n        activeRoom: null,\n        groupGather: {},\n        userGather: {},\n        contactGather: {},\n        conference: {\n          data: null,\n          joined: false,\n          ringPlayed: false,\n        },\n        typing: null,\n      };\n    case 'SET_OPERATORS':\n      return {\n        ...state,\n        operators: action.payload as Contact[],\n      };\n  }\n\n  return state;\n}\n\nexport type ChatDispatch = React.Dispatch<Action>;\nconst emptyDispatch: ChatDispatch = () => null;\n\ntype ChatProviderProps = {\n  defLang: string | undefined;\n  tokenKey: string;\n  children: JSX.Element | JSX.Element[];\n};\n\nexport const ChatContext = React.createContext({\n  state: emptyChatState,\n  dispatch: emptyDispatch,\n});\n\nexport const ChatProvider: React.FC<ChatProviderProps> = (\n  props: ChatProviderProps,\n) => {\n  emptyUser.langCode = props.defLang;\n  const token = localStorage.getItem(props.tokenKey) as string;\n  const chatState: ChatState = {\n    ...emptyChatState,\n    tokenKey: props.tokenKey,\n    token,\n  };\n\n  const [state, dispatch] = React.useReducer(chatReducer, chatState);\n\n  return (\n    <ChatContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </ChatContext.Provider>\n  );\n};\n","import React, { createContext, useCallback, useContext } from \"react\";\nimport { ChatContext } from \"./ChatContext\";\nimport axios, { AxiosError, AxiosInstance } from \"axios\";\nimport { Contact, Group, PagingResponse, PrivateMessage } from \"../types\";\n\nexport interface IRestContext {\n  apiUrl: string;\n  pageSize: number;\n  fetch: AxiosInstance | null;\n  getPrivateMessages: (chat: Contact) => Promise<void>;\n  getGroupMessages: (chat: Group) => Promise<void>;\n  getUserByMmk: (\n    mmkId: string | null,\n    guid: string | null\n  ) => Promise<number | undefined>;\n}\nconst initialContext = {} as IRestContext;\n\nexport const RestContext: React.Context<IRestContext> =\n  createContext(initialContext);\n\ntype RestProviderProps = {\n  baseURLApi: string;\n  pageSize: number;\n  children: JSX.Element;\n};\n\nexport const RestProvider: React.FC<RestProviderProps> = ({\n  baseURLApi,\n  pageSize,\n  children,\n}: RestProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n\n  const fetch: AxiosInstance = axios.create({\n    timeout: 60000, // Таймаут минута\n    baseURL: baseURLApi,\n    headers: {\n      \"Cache-Control\": \"no-cache\",\n      Pragma: \"no-cache\",\n      Authorization: `Bearer ${state.token}`,\n    },\n    withCredentials: false,\n  });\n\n  const getPrivateMessages = useCallback(\n    async (chat: Contact) => {\n      const contactId = chat.userId;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: \"SET_LOADING\", payload: true });\n        const { data } = await fetch.get(\"/contact/messages\", {\n          params: {\n            contactId,\n            current,\n            pageSize,\n          },\n        });\n        if (data) {\n          dispatch({\n            type: \"ADD_PRIVATE_MESSAGES\",\n            payload: {\n              pageSize,\n              contactId,\n              messages: data as PrivateMessage[],\n            },\n          });\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: \"SET_ERROR\", payload: err.message });\n      } finally {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      }\n    },\n    [dispatch]\n  );\n\n  const getGroupMessages = useCallback(\n    async (chat: Group) => {\n      const { groupId } = chat;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: \"SET_LOADING\", payload: true });\n        const { data }: { data: PagingResponse } = await fetch.get(\n          \"/group/messages\",\n          {\n            params: {\n              groupId,\n              current,\n              pageSize,\n            },\n          }\n        );\n        if (data) {\n          dispatch({\n            type: \"ADD_GROUP_MESSAGES\",\n            payload: {\n              pageSize,\n              groupId,\n              ...data,\n            },\n          });\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: \"SET_ERROR\", payload: err.message });\n      } finally {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      }\n    },\n    [dispatch]\n  );\n\n  const getUserByMmk = async (mmkId: string | null, guid: string | null) => {\n    try {\n      const { data }: { data: number } = await fetch.get(\"/contact/find\", {\n        params: {\n          mmkId,\n          guid,\n        },\n      });\n      if (data != null) {\n        return data;\n      }\n    } catch (error) {\n      console.log(\"err getUserByMmk\", error);\n    }\n  };\n  return (\n    <RestContext.Provider\n      value={{\n        apiUrl: baseURLApi,\n        pageSize,\n        fetch,\n        getPrivateMessages,\n        getGroupMessages,\n        getUserByMmk,\n      }}\n    >\n      {children}\n    </RestContext.Provider>\n  );\n};\n","import React, { createContext, useContext, useEffect } from \"react\";\nimport { Socket } from \"socket.io-client\";\nimport { useSocket } from \"../hooks/useSocket\";\nimport {\n  ChatData,\n  Contact,\n  Group,\n  GroupMessage,\n  JoinGroup,\n  MessageOperation,\n  PrivateMessage,\n  SetTyping,\n  User,\n  ConferenceData,\n  SetActiveRoom,\n  GroupMap,\n} from \"../types\";\nimport { ChatContext } from \"./ChatContext\";\n\n// Формат ответа сервера\ninterface ServerRes {\n  code: number;\n  msg: string;\n  data: unknown;\n}\n\nexport interface ISocketContext {\n  socket: Socket | null;\n  online: boolean;\n}\nconst initialContext = {\n  online: false,\n} as ISocketContext;\n\nexport const SocketContext: React.Context<ISocketContext> =\n  createContext(initialContext);\n\ntype SocketProviderProps = {\n  wsUrl: string;\n  wsPath: string;\n  children: JSX.Element;\n};\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({\n  wsUrl,\n  wsPath,\n  children,\n}: SocketProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n  const { socket, online, disconnectSocket, connectSocket } = useSocket(\n    wsUrl,\n    wsPath,\n    state.token\n  );\n\n  useEffect(() => {\n    if (state.token) {\n      connectSocket();\n    }\n    return () => {\n      disconnectSocket();\n    };\n  }, [state.token, connectSocket]);\n\n  useEffect(() => {\n    if (!state.token) disconnectSocket();\n  }, [state.token, disconnectSocket]);\n\n  // listen unauthorized event\n  useEffect(() => {\n    const listener = (msg: string) => {\n      console.log(\"unauthorized msg\", msg);\n      dispatch({ type: \"CLEAR_USER\" });\n    };\n\n    // attach\n    socket?.on(\"unauthorized\", listener);\n    // detatch\n    return () => {\n      socket?.off(\"unauthorized\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen chatData event\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const payload = res.data as ChatData;\n      const groupArr = payload.groupData;\n      const contactArr = payload.contactData;\n      const userArr = payload.userData;\n      dispatch({ type: \"CLEAR_CHAT_DATA\" });\n      dispatch({ type: \"SET_USER\", payload: payload.user });\n      if (groupArr.length) {\n        for (const group of groupArr) {\n          socket?.emit(\"joinGroupSocket\", {\n            groupId: group.groupId,\n          });\n          dispatch({ type: \"SET_GROUP_GATHER\", payload: group });\n        }\n      }\n      if (contactArr.length) {\n        for (const contact of contactArr) {\n          socket?.emit(\"joinPrivateSocket\", {\n            contactId: contact.userId,\n          });\n          dispatch({ type: \"SET_CONTACT_GATHER\", payload: contact });\n        }\n      }\n      dispatch({ type: \"SET_OPERATORS\", payload: payload.operatorData });\n      if (userArr.length) {\n        for (const user_ of userArr) {\n          dispatch({ type: \"SET_USER_GATHER\", payload: user_ });\n        }\n      }\n      dispatch({ type: \"UPDATE_ACTIVE_ROOM\" });\n      dispatch({type: \"SET_CONFERENCE\", payload: payload.conferenceData})\n    };\n    socket?.on(\"chatData\", listener);\n    return () => {\n      socket?.off(\"chatData\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen user online\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: \"USER_ONLINE\", payload: res.data as number });\n    };\n    socket?.on(\"userOnline\", listener);\n    return () => {\n      socket?.off(\"userOnline\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen user offline\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: \"USER_OFFLINE\", payload: res.data as number });\n    };\n    socket?.on(\"userOffline\", listener);\n    return () => {\n      socket?.off(\"userOffline\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen private socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      console.log(\"Успешно вошел в приватный чат\");\n    };\n    socket?.on(\"joinPrivateSocket\", listener);\n    return () => {\n      socket?.off(\"joinPrivateSocket\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen group socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as JoinGroup;\n      const newUser: Contact = data.user;\n      newUser.online = 1;\n      const { group } = data;\n      const groupObj = state.groupGather[group.groupId];\n      // Информация о присоединении к группе новых пользователей\n      if (\n        groupObj &&\n        !groupObj.members?.find((member) => member.userId === newUser.userId)\n      ) {\n        newUser.isManager = 0;\n        groupObj.members?.push(newUser);\n        // Vue.prototype.$message.info(res.msg);\n      }\n      dispatch({ type: \"SET_USER_GATHER\", payload: newUser });\n    };\n    socket?.on(\"joinGroupSocket\", listener);\n    return () => {\n      socket?.off(\"joinGroupSocket\", listener);\n    };\n  }, [socket?.id, state.groupGather]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMessage;\n      dispatch({ type: \"ADD_GROUP_MESSAGE\", payload: data });\n      const { activeRoom } = state;\n      if (\n        activeRoom &&\n        (activeRoom as Group).groupId === data.groupId &&\n        data.userId !== state.user.userId\n      ) {\n        socket?.emit(\"markAsRead\", {\n          groupId: data.groupId,\n          _id: data._id,\n        });\n      }\n    };\n\n    socket?.on(\"groupMessage\", listener);\n    return () => {\n      socket?.off(\"groupMessage\", listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as PrivateMessage;\n      if (\n        data.contactId === state.user.userId ||\n        data.userId === state.user.userId\n      ) {\n        dispatch({\n          type: \"ADD_PRIVATE_MESSAGE\",\n          payload: data,\n        });\n\n        // если есть активная комната и это приватная комната (!groupId && userId) с отправителем сообщения (userId)\n        if (\n          state.activeRoom &&\n          !(state.activeRoom as Group).groupId &&\n          state.activeRoom?.userId === data.userId\n        ) {\n          socket?.emit(\"markAsRead\", {\n            contactId: data.userId,\n            _id: data._id,\n          });\n        }\n      }\n    };\n\n    socket?.on(\"privateMessage\", listener);\n    return () => {\n      socket?.off(\"privateMessage\", listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      if (timer) clearTimeout(timer);\n      dispatch({ type: \"SET_TYPING\", payload: res.data as SetTyping });\n      timer = setTimeout(() => {\n        dispatch({ type: \"SET_TYPING\", payload: null });\n      }, 1000);\n    };\n    socket?.on(\"typing\", listener);\n    return () => {\n      if (timer) clearTimeout(timer);\n      socket?.off(\"typing\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      if (data.userId === state.user.userId) {\n        if (data.groupId) {\n          dispatch({\n            type: \"LOSE_GROUP_UNREAD_GATHER\",\n            payload: data.groupId,\n          });\n        } else {\n          dispatch({\n            type: \"LOSE_CONTACT_UNREAD_GATHER\",\n            payload: data.contactId,\n          });\n        }\n      } else {\n        if (data.contactId)\n          dispatch({\n            type: \"MARK_PRIVATE_MESSAGES_READ\",\n            payload: data.userId,\n          });\n      }\n    };\n    socket?.on(\"markAsRead\", listener);\n    return () => {\n      socket?.off(\"markAsRead\", listener);\n    };\n  }, [socket?.id, state.user.userId]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      dispatch({ type: \"REVOKE_MESSAGE\", payload: data });\n    };\n    socket?.on(\"revokeMessage\", listener);\n    return () => {\n      socket?.off(\"revokeMessage\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({ type: \"SET_GROUP_GATHER\", payload: res.data as Group });\n    };\n    socket?.on(\"addGroup\", listener);\n    return () => {\n      socket?.off(\"addGroup\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: \"SET_CONTACT_GATHER\", payload: data });\n      dispatch({ type: \"SET_USER_GATHER\", payload: data });\n      socket?.emit(\"joinPrivateSocket\", {\n        contactId: data.userId,\n      });\n    };\n    socket?.on(\"addContact\", listener);\n    return () => {\n      socket?.off(\"addContact\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMap;\n      if (data.userId === state.user.userId) {\n        // если удаляем себя из группы\n        dispatch({ type: \"DEL_GROUP\", payload: data.groupId });\n      } else {\n        dispatch({ type: \"DEL_GROUP_MEMBER\", payload: data });\n      }\n    };\n    socket?.on(\"deleteGroup\", listener);\n    return () => {\n      socket?.off(\"deleteGroup\", listener);\n    };\n  }, [socket?.id, state.user]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: \"DEL_CONTACT\", payload: data });\n    };\n    socket?.on(\"deleteContact\", listener);\n    return () => {\n      socket?.off(\"deleteContact\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Group;\n      dispatch({ type: \"UPDATE_GROUP_INFO\", payload: data });\n    };\n    socket?.on(\"updateGroupInfo\", listener);\n    return () => {\n      socket?.off(\"updateGroupInfo\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as User;\n      dispatch({ type: \"UPDATE_USER_INFO\", payload: data });\n    };\n    socket?.on(\"updateUserInfo\", listener);\n    return () => {\n      socket?.off(\"updateUserInfo\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const { group, user: newUser } = res.data as JoinGroup;\n\n      if (!state.groupGather[group.groupId]) {\n        console.log(\"joined to a new group\");\n        // Если группы еще у нас нет, то получаем информацию о пользователях в группе\n        socket?.emit(\"chatData\");\n      } else if (newUser.userId !== state.user.userId) {\n        // Новые пользователи присоединяются к группе\n        dispatch({\n          type: \"ADD_GROUP_MEMBER\",\n          payload: {\n            groupId: group.groupId,\n            members: [newUser],\n          },\n        });\n      }\n    };\n    socket?.on(\"joinGroup\", listener);\n    return () => {\n      socket?.off(\"joinGroup\", listener);\n    };\n  }, [socket?.id, state.user, state.groupGather]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({ type: \"SET_CONFERENCE\", payload: res.data as ConferenceData });\n    };\n    socket?.on(\"startConference\", listener);\n    return () => {\n      socket?.off(\"startConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"PAUSE_CONFERENCE\",\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on(\"pauseConference\", listener);\n    return () => {\n      socket?.off(\"pauseConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"STOP_CONFERENCE\",\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on(\"stopConference\", listener);\n    return () => {\n      socket?.off(\"stopConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n    };\n    socket?.on(\"addOperator\", listener);\n    return () => {\n      socket?.off(\"addOperator\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"SET_ACTIVE_ROOM\",\n        payload: res.data as SetActiveRoom,\n      });\n    };\n    socket?.on(\"setActiveRoom\", listener);\n    return () => {\n      socket?.off(\"setActiveRoom\", listener);\n    };\n  }, [socket?.id]);\n\n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n","import * as React from \"react\";\nimport { Container, Box, Grid, Snackbar, useMediaQuery } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Alert } from \"@mui/lab\";\nimport { Room, RoomList, Conference } from \"../components\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { RestContext } from \"../context/RestContext\";\nimport { SocketContext } from \"../context/SocketContext\";\nimport {\n  ChatPa,\n  Group,\n  Contact,\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  ConferenceData\n} from \"../types\";\nimport { getParam, isEmpty, allMessCount } from \"../utils/common\";\nimport ConferenceCall from \"../components/ConferenceCall\";\n\n// Отключили проигрыш звука\n// const getRingAudio = (): HTMLAudioElement => {\n//   const audio = new Audio(\n//     process.env.PUBLIC_URL + '/audio/ring-in.ogg',\n//   );\n//   audio.loop = true;\n//   return audio;\n// };\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    minWidth: 640,\n    minHeight: 470,\n    height: \"100%\",\n    padding: 0,\n    [theme.breakpoints.down(\"sm\")]: {\n      height: `calc(100vh - ${theme.spacing(8)})`,\n      minWidth: \"auto\",\n      minHeight: \"auto\",\n      overflow: \"hidden\"\n    }\n  },\n  innerBox: {\n    height: \"100%\",\n    width: \"100%\",\n    margin: 0,\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: 0\n    }\n  },\n  innerGrid: {\n    height: \"100%\",\n    width: \"100%\"\n  }\n}));\n\nexport const ChatPage: React.FC<ChatPa> = ({\n  activeGroupId,\n  activeChatUserId\n}: ChatPa) => {\n  const classes = useStyles();\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down(\"sm\")\n  );\n\n  const { state, dispatch } = React.useContext(ChatContext);\n  const { socket } = React.useContext(SocketContext);\n\n  const {\n    apiUrl,\n    pageSize,\n    getPrivateMessages,\n    getGroupMessages,\n    getUserByMmk\n  } = React.useContext(RestContext);\n\n  // const [ringAudio] = React.useState(getRingAudio());\n\n  const onExitActiveRoom = React.useCallback(() => {\n    dispatch({\n      type: \"SET_ACTIVE_ROOM\",\n      payload: { ifNotExists: false }\n    });\n  }, [dispatch]);\n\n  const onNeedMoreMessages = React.useCallback(\n    async (chat: ChatRoom) => {\n      if ((chat as Group).groupId) await getGroupMessages(chat as Group);\n      else await getPrivateMessages(chat as Contact);\n    },\n    [getPrivateMessages, getGroupMessages]\n  );\n\n  const onMessageDelete = React.useCallback(\n    (chat: ChatRoom, message: ChatMessage) => {\n      socket?.emit(\"revokeMessage\", {\n        groupId: (chat as Group).groupId, // Идентификатор группы\n        contactId: chat.userId, // Идентификатор контакта\n        _id: message._id // Идентификатор удаленного сообщения\n      });\n    },\n    [socket?.id]\n  );\n\n  const onTyping = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit(\"typing\", {\n        groupId: (chat as Group)?.groupId,\n        contactId: chat?.userId\n      });\n    },\n    [socket?.id]\n  );\n\n  const onSendMessage = React.useCallback(\n    (chat: ChatRoom, data: SendMessage) => {\n      if ((chat as Group).groupId) {\n        socket?.emit(\"groupMessage\", {\n          groupId: (chat as Group)?.groupId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size\n        });\n      } else {\n        socket?.emit(\"privateMessage\", {\n          contactId: chat?.userId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size\n        });\n      }\n    },\n    [socket?.id]\n  );\n\n  const onChangeChat = React.useCallback(\n    (chat: ChatRoom) => {\n      dispatch({\n        type: \"SET_ACTIVE_ROOM\",\n        payload: {\n          groupId: (chat as Group)?.groupId,\n          contactId: chat?.userId,\n          ifNotExists: false\n        }\n      });\n    },\n    [socket?.id, dispatch]\n  );\n\n  const onEnterRoom = React.useCallback(\n    (chat: ChatRoom) => {\n      if (!chat.messages || chat.messages.length === 0) return;\n      if ((chat as Group).groupId) {\n        socket?.emit(\"markAsRead\", {\n          groupId: (chat as Group).groupId,\n          _id: chat.messages[chat.messages.length - 1]._id\n        });\n      } else {\n        socket?.emit(\"markAsRead\", {\n          contactId: chat.userId,\n          _id: chat.messages[chat.messages.length - 1]._id\n        });\n      }\n    },\n    [socket?.id]\n  );\n\n  const onVideoCall = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit(\"startConference\", {\n        groupId: (chat as Group).groupId,\n        contactId: chat.userId\n      });\n    },\n    [socket?.id]\n  );\n\n  const onVideoEnd = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit(\"stopConference\", {\n          id: conference?.id\n        });\n    },\n    [socket?.id]\n  );\n\n  const onConferencePause = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit(\"pauseConference\", {\n          id: conference.id\n        });\n    },\n    [socket?.id]\n  );\n\n  const onConferenceCallAccept = React.useCallback(\n    (conference: ConferenceData) => {\n      // отправляем startConference чтобы возобновить запись\n      if (conference?.id != null)\n        socket?.emit(\"resumeConference\", {\n          id: conference.id\n        });\n      dispatch({ type: \"JOIN_CONFERENCE\", payload: conference });\n    },\n    [dispatch]\n  );\n\n  const onOperatorAdd = React.useCallback(\n    (group: Group, operator: Contact) => {\n      socket?.emit(\"addOperator\", {\n        groupId: group.groupId,\n        operatorId: operator.userId\n      });\n    },\n    [socket?.id]\n  );\n\n  const onLeaveGroup = React.useCallback(\n    (group: Group) => {\n      socket?.emit(\"deleteGroup\", {\n        groupId: group.groupId\n      });\n    },\n    [socket?.id]\n  );\n\n  const handleError = React.useCallback(() => {\n    dispatch({ type: \"SET_ERROR\" });\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    if (activeChatUserId != null && !isEmpty(state.contactGather)) {\n      const Chat = Object.values(state.contactGather).find(\n        item => item.userId === activeChatUserId\n      );\n      onChangeChat(Chat);\n      onEnterRoom(Chat);\n    }\n\n    const mmkId = getParam(\"mmk\");\n    const guid = getParam(\"guid\");\n    if ((mmkId != null || guid != null) && !isEmpty(state.contactGather)) {\n      //console.log(\"mmkId\", mmkId);\n      const changeChatByMmkId = async () => {\n        const userId = await getUserByMmk(mmkId, guid);\n        console.log(\"userId\", userId);\n        if (userId != null) {\n          const Chat = Object.values(state.contactGather).find(\n            item => item.userId === userId\n          );\n          onChangeChat(Chat);\n          onEnterRoom(Chat);\n        }\n      };\n      changeChatByMmkId();\n    }\n  }, [state.contactGather]);\n\n  React.useEffect(() => {\n    if (activeGroupId != null && !isEmpty(state.groupGather)) {\n      const onlyChat = Object.values(state.groupGather).find(\n        item => item.groupId === activeGroupId\n      );\n\n      if (!isEmpty(onlyChat)) {\n        onChangeChat(onlyChat);\n        onEnterRoom(onlyChat);\n      }\n    }\n  }, [state.groupGather]);\n\n  // Отключили проигрыш звука\n  // React.useEffect(() => {\n  //   if (\n  //     state.conference.data?.id &&\n  //     state.conference.ringPlayed &&\n  //     !state.conference.joined\n  //   )\n  //     ringAudio.play();\n  //   else ringAudio.pause();\n  // }, [state.conference.data?.id, state.conference.ringPlayed]);\n\n  const renderRoom = state.activeRoom != null && (\n    <Room\n      apiUrl={apiUrl}\n      user={state.user}\n      users={state.userGather}\n      operators={state.operators}\n      chat={state.activeRoom}\n      typing={state.typing}\n      conference={state.conference.data}\n      conferenceJoined={state.conference.joined}\n      loading={state.loading}\n      pageSize={pageSize}\n      onExitRoom={onExitActiveRoom}\n      onEnterRoom={onEnterRoom}\n      onNeedMoreMessages={onNeedMoreMessages}\n      onMeesageDelete={onMessageDelete}\n      onTyping={onTyping}\n      onSendMessage={onSendMessage}\n      onVideoCall={onVideoCall}\n      onVideoEnd={onVideoEnd}\n      onConferencePause={onConferencePause}\n      onOperatorAdd={onOperatorAdd}\n      onLeaveGroup={onLeaveGroup}\n    />\n  );\n\n  const GetRoomList = () => (\n    <RoomList\n      apiUrl={apiUrl}\n      user={state.user}\n      activeRoom={state.activeRoom}\n      groups={Object.values(state.groupGather)}\n      contacts={Object.values(state.contactGather)}\n      typing={state.typing}\n      onChangeChat={onChangeChat}\n    />\n  );\n\n  const GetConferenceCall = () =>\n    state.conference.data && (\n      <ConferenceCall\n        apiUrl={apiUrl}\n        contact={\n          state.contactGather[\n            state.user.userId === state.conference.data.userId\n              ? state.conference.data.contactId\n              : state.conference.data.userId\n          ]\n        }\n        conference={state.conference.data}\n        onAccept={onConferenceCallAccept}\n      />\n    );\n\n  const GetConference = () => (\n    <Conference\n      conference={state.conference.data}\n      onClose={onConferencePause}\n    />\n  );\n\n  // const getMessCount = (data: GroupGather) => {\n  //   const messages = ;\n  //   return messages.reduce((a: number, b: number) => a + b, 0);\n  // };\n\n  const depsContats = state.conference.data?.id\n    ? [\n        state.conference.joined,\n        state.conference.data?.id,\n        state.conference.data?.contactId,\n        state.activeRoom?.groupId,\n        state.activeRoom?.userId\n      ]\n    : [\n        state.activeRoom,\n        allMessCount(state.groupGather),\n        allMessCount(state.contactGather)\n      ];\n\n  const Contacts = React.useMemo(\n    () =>\n      state.conference.data?.id ? (\n        state.conference.joined ? (\n          <GetConference />\n        ) : (\n          <GetConferenceCall />\n        )\n      ) : (\n        <GetRoomList />\n      ),\n    depsContats\n  );\n\n  console.log(\"chat state\", state);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.root}>\n      <Box className={classes.innerBox}>\n        {isMobile ? (\n          <>\n            {Contacts}\n            {renderRoom}\n          </>\n        ) : (\n          <Grid container spacing={1} className={classes.innerGrid}>\n            <Grid item sm={4} className={classes.innerGrid}>\n              {Contacts}\n            </Grid>\n\n            <Grid item sm={8} className={classes.innerGrid}>\n              {renderRoom}\n            </Grid>\n          </Grid>\n        )}\n      </Box>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={!!state.error}\n        autoHideDuration={6000}\n        onClose={handleError}\n      >\n        <Alert onClose={handleError} severity=\"error\">\n          {state.error}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport io, { Socket } from \"socket.io-client\";\n\nexport const useSocket = (\n  url: string,\n  path: string,\n  accessToken: string\n): {\n  socket: Socket | null;\n  online: boolean;\n  connectSocket: () => void;\n  disconnectSocket: () => void;\n} => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n\n  const connectSocket = useCallback(() => {\n    // console.log(\"do connect\");\n    const socketTemp = io(url, {\n      path,\n      reconnection: true,\n      extraHeaders: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    setSocket(socketTemp);\n  }, [url, path, accessToken]);\n\n  const disconnectSocket = useCallback(() => {\n    // console.log(\"do disconnect\");\n    socket?.disconnect();\n    setSocket(null);\n  }, [socket]);\n\n  const [online, setOnline] = useState<boolean>(false);\n\n  useEffect(() => {\n    setOnline(socket?.connected ? true : false);\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"connect\", () => {\n      // console.log(\"connected\");\n      setOnline(true);\n      socket.emit(\"chatData\");\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"disconnect\", () => {\n      // console.log(\"disconnected\");\n      setOnline(false);\n    });\n  }, [socket]);\n\n  return {\n    socket,\n    online,\n    disconnectSocket,\n    connectSocket,\n  };\n};\n","import en from \"./en.json\";\nimport fr from \"./fr.json\";\nimport ru from \"./ru.json\";\n\nexport const chatResources = {\n  ru,\n  en,\n  fr,\n};\n"],"names":["MessageStatus","Role","ContextMenuType","useStyles","makeStyles","createStyles","item","cursor","Emoji","props","classes","emojiClick","e","onSelect","target","innerText","Item","itemProps","React.createElement","Box","m","component","onClick","className","emoji","display","flexDirection","theme","typingText","paddingLeft","spacing","typingDot","verticalAlign","width","height","margin","background","palette","primary","main","borderRadius","opacity","animation","&:nth-child(1)","animationDelay","&:nth-child(2)","&:nth-child(3)","@keyframes loadingFade","0%","50%","100%","Typing","React","Typography","color","variant","message","input","flex","inputUpload","attachmentIcon","fill","stroke","Entry","chat","t","useTranslation","useState","empjiEl","setEmojiEl","text","setText","time","lastTyping","setLastTyping","handleEmojiClose","sendMessage","data","onSendMessage","submit","trim","length","messageType","emojiOpen","Boolean","enojiId","undefined","TextField","placeholder","autoFocus","InputProps","disableUnderline","startAdornment","InputAdornment","position","accept","id","type","onChange","event","currentTarget","files","file","includes","image","Image","url","window","URL","webkitURL","src","createObjectURL","onload","imageSize","fileName","name","size","htmlFor","IconButton","aria-label","SvgIcon","d","strokeWidth","strokeLinecap","strokeLinejoin","aria-describedby","InsertEmoticon","endAdornment","edge","preventDefault","Send","value","onTyping","Date","now","onKeyPress","key","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","isEmpty","Object","keys","formatTime","moment","add","startOf","isAfter","format","getChatId","groupId","userId","getChatName","username","allMessCount","chats","values","map","it","messages","reduce","a","b","chatRoomComparer","hasMessagesA","Array","isArray","hasMessagesB","cdate","getTime","getParam","param","QueryString","location","search","URLSearchParams","get","fileIcon","fontSize","fileBody","File","meta","content","split","date","getFileMeta","idx","lastIndexOf","ext","slice","splitFileName","Avatar","toUpperCase","mediaContent","maxWidth","maxHeight","Video","apiUrl","isConference","JSON","parse","visitId","controls","muted","breakpoints","down","viewerVisible","setViewerVisible","getImageMeta","Fragment","Viewer","zIndex","visible","changeable","images","MessageContent","rootContact","& span","float","& $message","backgroundColor","& $lastMessage","borderBottomLeftRadius","rootUser","justifyContent","contrastText","borderBottomRightRadius","rootNotify","& > *","padding","fontWeight","lastMessage","flexWrap","header","overflow","body","wordBreak","status","alignSelf","statusImage","marginRight","Message","owner","refOnLastMess","user","isGroupMessage","isUserFirst","isUserLast","ListItem","Alert","severity","ref","isRevoke","align","revokeUserName","isMine","onContextMenu","child","Link","underline","href","download","wrapMessage","React.Fragment","Done","DoneAll","ContactStatus","isTyping","contact","online","star","ContactList","List","contacts","button","ListItemAvatar","alt","avatar","ListItemText","StarIcon","secondary","AddContact","Dialog","aria-labelledby","DialogTitle","popover","pointerEvents","paper","avatarGroup","getGroupStatus","group","members","_group$members","onlineCount","sum","push","join","RoomHeader","typing","conference","conferenceJoined","operators","onVideoCall","onVideoEnd","onConferencePause","onOperatorAdd","onLeaveGroup","setAnchorEl","addOperatorOpen","setAddOperatorOpen","CardHeader","title","subheader","handlePopoverClose","GroupIcon","aria-owns","aria-haspopup","onMouseEnter","onMouseLeave","disableRestoreFocus","action","role","PersonAddIcon","operator","_group$members2","find","DeleteIcon","contactId","Button","startIcon","CallEndIcon","style","marginLeft","VideoCallIcon","root","minWidth","inline","messageListOuter","overflowY","scrollbarWidth","scrollbarColor","&::-webkit-scrollbar, & *::-webkit-scrollbar","&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb","border","&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus","&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active","&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover","&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner","messageList","roomHeader","roomProgress","flexAll","flexEnd","initialMenuState","mouseX","mouseY","canCopy","canDelete","initialScrollState","autoScroll","Room","users","loading","pageSize","scrollState","setScrollState","messageCount","useRef","refList","menuState","setMenuState","useEffect","onEnterRoom","useLayoutEffect","current","scrollIntoView","scrollTop","scrollHeight","onScroll","useCallback","noMoreData","_context","onNeedMoreMessages","handleCopy","navigator","clipboard","writeText","handleDelete","onMeesageDelete","Card","elevation","onExitRoom","ArrowBackIcon","CircularProgress","Divider","CardContent","inx","clientX","clientY","handleMenuPopup","Menu","keepMounted","anchorReference","anchorPosition","top","left","MenuItem","disabled","ListItemIcon","FileCopyIcon","whiteSpace","textOverflow","unread","TypingBadge","withStyles","badge","boxShadow","&::after","@keyframes ripple","transform","Badge","OnlineBadge","RoomListItem","roomName","overlap","contactAvatar","roomText","getMessageText","roomTime","selected","active","secondaryTypographyProps","unreadCount","Chip","label","searchField","listStyle","filterChats","filter","lowerFilter","toLowerCase","indexOf","sortChats","groups","roomArr","sort","topChatId","localStorage","getItem","c","k","isTop","unshift","RoomList","setChats","fullWidth","activeRoom","onChangeChat","Conference","listener","source","_ref$current","contentWindow","addEventListener","removeEventListener","allowFullScreen","allow","alignItems","pulse","&::before","footer","paddingTop","@keyframes pulse","ConferenceCall","onAccept","Paper","emptyUser","password","langCode","emptyChatState","tokenKey","token","groupGather","userGather","contactGather","initialContactId","joined","ringPlayed","error","getFreshActiveRoom","state","getActiveRoom","newActiveRoom","rooms","setUserOnline","newState","member","index","findIndex","contactUnreadGather","predicate","groupUnreadGather","chatReducer","payload","updateActiveRoom","delGroup","delGroupMember","delContact","ifNotExists","setActiveRoom","x","addGroupMessage","addPrivateMessage","userName","msg","_id","revokeMessage","info","notice","updateGroupInfo","updateUserInfo","isManager","addGroupMember","setConference","pauseConference","stopConference","updatedValue","i","markPrivateMessagesRead","addPrivateMessages","userArr","addGroupMessages","setItem","setToken","removeItem","clearUser","ChatContext","createContext","dispatch","RestContext","SocketContext","minHeight","innerBox","innerGrid","activeGroupId","activeChatUserId","isMobile","useMediaQuery","socket","getPrivateMessages","getGroupMessages","getUserByMmk","onExitActiveRoom","onMessageDelete","emit","onConferenceCallAccept","operatorId","handleError","Chat","mmkId","guid","_context2","console","log","changeChatByMmkId","onlyChat","renderRoom","GetRoomList","GetConferenceCall","GetConference","depsContats","_state$conference$dat2","_state$conference$dat3","_state$activeRoom","_state$activeRoom2","Contacts","Container","Grid","container","sm","Snackbar","autoHideDuration","defLang","chatState","useReducer","Provider","children","baseURLApi","useContext","fetch","axios","create","timeout","baseURL","headers","Cache-Control","Pragma","Authorization","withCredentials","_chat$messages","params","_chat$messages2","_context3","wsUrl","wsPath","path","accessToken","setSocket","connectSocket","socketTemp","io","reconnection","extraHeaders","disconnectSocket","disconnect","setOnline","connected","on","useSocket","off","res","code","groupArr","groupData","contactArr","contactData","userData","operatorData","conferenceData","newUser","groupObj","_groupObj$members","timer","clearTimeout","setTimeout","ru","en","fr"],"mappings":"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"}