{"version":3,"file":"chat.cjs.production.min.js","sources":["../src/types/index.ts","../src/components/Emoji.tsx","../src/components/Typing.tsx","../src/components/Entry.tsx","../src/utils/common.ts","../src/components/MessageContent/File.tsx","../src/components/MessageContent/Video.tsx","../src/components/MessageContent/Image.tsx","../src/components/MessageContent/index.tsx","../src/components/styles.ts","../src/components/Message.tsx","../src/components/ContactStatus.tsx","../src/components/ContactList.tsx","../src/components/AddContact.tsx","../src/components/RoomHeader.tsx","../src/components/Room.tsx","../src/components/RoomListItem.tsx","../src/components/RoomList.tsx","../src/components/Conference.tsx","../src/components/ConferenceCall.tsx","../src/context/ChatContext.tsx","../src/context/RestContext.tsx","../src/context/SocketContext.tsx","../src/pages/chat.tsx","../src/hooks/useSocket.ts","../src/translations/index.ts"],"sourcesContent":["export interface ChatPa {  \n  activeGroupId?: number;\n  activeChatUserId?: number;\n}\n\n// Тип сообщения\nexport type MessageType =\n  | \"text\"\n  | \"image\"\n  | \"file\"\n  | \"video\"\n  | \"notify\"\n  | \"video_conference\";\n\nexport enum MessageStatus {\n  sent = 0,\n  read = 1\n}\n\nexport enum Role {\n  Unknown = 0,\n  Client = 1,\n  Agent = 2,\n  Specialist = 3,\n  Operator = 4\n}\n\nexport interface User {\n  userId: number;\n  username: string;\n  password: string;\n  avatar: string;\n  role?: Role;\n  online?: 1 | 0; // В сети\n  langCode?: string;\n}\n\n// Приватные сообщения\nexport interface PrivateMessage {\n  _id?: number;\n  userId: number;\n  contactId: number;\n  content: string;\n  messageType: MessageType;\n  status: MessageStatus;\n  cdate: string;\n  type?: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Контакт\nexport interface Contact {\n  userId: number;\n  groupId?: number;\n  username: string;\n  avatar?: string;\n  role?: Role;\n  messages?: PrivateMessage[];\n  unreadCount?: number;\n  isTop?: boolean;\n  online?: 1 | 0;\n  isManager?: 1 | 0;\n  noMoreData?: boolean;\n}\n\n// Информация о друзьях\nexport interface ContactGather {\n  [userId: number]: Contact;\n}\n\n// Групповое сообщение\nexport interface GroupMessage {\n  _id?: number;\n  userId: number;\n  groupId: number;\n  content: string;\n  messageType: MessageType;\n  cdate: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Группа\nexport interface Group {\n  groupId: number;\n  userId: number; // владелец\n  name: string;\n  notice: string;\n  messages?: GroupMessage[];\n  unreadCount?: number;\n  cdate: string;\n  isTop?: boolean;\n  members?: Contact[];\n  noMoreData?: boolean;\n}\n\n// Группы\nexport interface GroupGather {\n  [groupId: number]: Group;\n}\n\n// Ассоциации групп и пользователей\nexport interface GroupMap {\n  groupId: number;\n  userId: number;\n}\n\n// Ассоциации пользователей и друзей\nexport interface ContactMap {\n  contactId: number;\n  userId: number;\n}\n\nexport interface SendMessage {\n  message: string | File;\n  width?: number;\n  height?: number;\n  fileName?: string;\n  messageType: MessageType[0] | MessageType[1];\n  size?: number;\n}\n\n// Размер изображения\nexport interface ImageSize {\n  width: number;\n  height: number;\n}\n\n// Непрочитанные сообщения\nexport interface UnReadGather {\n  [key: string]: number;\n}\n\n// Получить сообщения постранично\nexport interface PagingParams {\n  groupId?: number;\n  userId?: number;\n  contactId?: number;\n  current: number;\n  pageSize: number;\n}\n\n// Постраничный ответ для групповых сообщений\nexport interface PagingResponse {\n  // messageArr: GroupMessage[]; - fix on messages\n  messages:GroupMessage[];\n  userArr: User[];\n}\n\nexport interface ContactUserMap {\n  contactId: number;\n  contactUserName: string;\n}\n\n// информация о том, что контакт печатает текст\nexport interface SetTyping {\n  userId?: number;\n  groupId?: number;\n  contactId?: number;\n}\n\n// Операция с сообщением\nexport interface MessageOperation {\n  userId?: number;\n  username: string;\n  groupId?: number;\n  contactId?: number;\n  _id: number;\n}\n\n// Данные конференции\nexport interface ConferenceData {\n  userId: number;\n  contactId: number;\n  id: string;\n  url?: string;\n  serverAddress?: string;\n  user?: string;\n  password?: string;\n}\n\n// Данные чата\nexport interface ChatData {\n  user: User;\n  groupData: Group[];\n  contactData: Contact[];\n  userData: User[];\n  operatorData: Contact[];\n  conferenceData: ConferenceData;\n}\n\nexport interface GroupMember {\n  groupId: number;\n  members: Contact[];\n}\n\nexport interface AddPrivateMessages {\n  pageSize: number;\n  contactId: number;\n  messages: PrivateMessage[];\n}\n\nexport interface AddGroupMessages extends PagingResponse {\n  pageSize: number;\n  groupId: number;\n  \n}\n\nexport interface SetActiveRoom {\n  groupId?: number;\n  contactId?: number;\n  ifNotExists: boolean;\n}\n\nexport interface JoinGroup {\n  group: Group;\n  user: Contact;\n}\n\nexport interface SetUser {\n  user: User;\n  token: string;\n}\n\nexport type ChatRoom = Group | Contact;\nexport type ChatMessage = GroupMessage | PrivateMessage;\n\n// Операции контекстного меню\nexport enum ContextMenuType {\n  COPY = \"COPY\", // Скопировать\n  REVOKE = \"REVOKE\", // Удалить сообщение\n  TOP_REVERT = \"TOP_REVERT\", // Открепить\n  TOP = \"TOP\", // Закрепить\n  READ = \"READ\", // Прочесть всё\n  DELETE = \"DELETE\" // Удалить\n}\n","import * as React from \"react\";\nimport { Box,  } from \"@mui/material\";\nimport { makeStyles,createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    item: {\n      cursor: \"pointer\",\n    },\n  })\n);\n\ntype EmojiProps = {\n  onSelect?: (emoji: string) => void;\n};\n\ntype EmojiItemProps = {\n  emoji: string;\n};\n\nconst Emoji: React.FC<EmojiProps> = (props: EmojiProps) => {\n  const classes = useStyles();\n  const emojiClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (props.onSelect) {\n      props.onSelect((e.target as HTMLDivElement).innerText);\n    }\n  };\n\n  const Item = (itemProps: EmojiItemProps) => {\n    return (\n      <Box\n        m={0.5}\n        component=\"span\"\n        onClick={emojiClick}\n        className={classes.item}\n      >\n        {itemProps.emoji}\n      </Box>\n    );\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😃\" />\n        <Item emoji=\"😁\" />\n        <Item emoji=\"😂\" />\n        <Item emoji=\"😄\" />\n        <Item emoji=\"😅\" />\n        <Item emoji=\"😆\" />\n        <Item emoji=\"😇\" />\n        <Item emoji=\"😈\" />\n        <Item emoji=\"😉\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😊\" />\n        <Item emoji=\"😋\" />\n        <Item emoji=\"😌\" />\n        <Item emoji=\"😍\" />\n        <Item emoji=\"😎\" />\n        <Item emoji=\"😏\" />\n        <Item emoji=\"😐\" />\n        <Item emoji=\"😒\" />\n        <Item emoji=\"😓\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"❓\" />\n        <Item emoji=\"😕\" />\n        <Item emoji=\"😖\" />\n        <Item emoji=\"😗\" />\n        <Item emoji=\"😘\" />\n        <Item emoji=\"😙\" />\n        <Item emoji=\"😚\" />\n        <Item emoji=\"😜\" />\n        <Item emoji=\"😝\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😞\" />\n        <Item emoji=\"😟\" />\n        <Item emoji=\"😠\" />\n        <Item emoji=\"😡\" />\n        <Item emoji=\"😢\" />\n        <Item emoji=\"😣\" />\n        <Item emoji=\"😤\" />\n        <Item emoji=\"😥\" />\n        <Item emoji=\"😦\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😨\" />\n        <Item emoji=\"😩\" />\n        <Item emoji=\"😪\" />\n        <Item emoji=\"😫\" />\n        <Item emoji=\"😬\" />\n        <Item emoji=\"😭\" />\n        <Item emoji=\"😮\" />\n        <Item emoji=\"😯\" />\n        <Item emoji=\"😰\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😲\" />\n        <Item emoji=\"😳\" />\n        <Item emoji=\"😴\" />\n        <Item emoji=\"😵\" />\n        <Item emoji=\"🧐\" />\n        <Item emoji=\"😷\" />\n        <Item emoji=\"🙁\" />\n        <Item emoji=\"🙂\" />\n        <Item emoji=\"🙃\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤐\" />\n        <Item emoji=\"🤑\" />\n        <Item emoji=\"🤒\" />\n        <Item emoji=\"🤓\" />\n        <Item emoji=\"🤔\" />\n        <Item emoji=\"🤕\" />\n        <Item emoji=\"🤠\" />\n        <Item emoji=\"🤡\" />\n        <Item emoji=\"🤢\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤤\" />\n        <Item emoji=\"🤥\" />\n        <Item emoji=\"🤧\" />\n        <Item emoji=\"🤨\" />\n        <Item emoji=\"🤩\" />\n        <Item emoji=\"🤪\" />\n        <Item emoji=\"🤫\" />\n        <Item emoji=\"🤬\" />\n        <Item emoji=\"🤭\" />\n      </Box>\n    </Box>\n  );\n};\nexport default Emoji;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typingText: {\n      paddingLeft: theme.spacing(0.5),\n    },\n    typingDot: {\n      display: \"inline-block\",\n      verticalAlign: \"middle\",\n      width: 4,\n      height: 4,\n      margin: \"0px 2px\",\n      background: theme.palette.primary.main,\n      borderRadius: \"50%\",\n      opacity: \"0\",\n      animation: \"$loadingFade 1s infinite\",\n      \"&:nth-child(1)\": {\n        animationDelay: \"0s\",\n      },\n      \"&:nth-child(2)\": {\n        animationDelay: \"0.2s\",\n      },\n      \"&:nth-child(3)\": {\n        animationDelay: \"0.4s\",\n      },\n    },\n    \"@keyframes loadingFade\": {\n      \"0%\": {\n        opacity: 0,\n      },\n      \"50%\": {\n        opacity: 0.8,\n      },\n      \"100%\": {\n        opacity: 0,\n      },\n    },\n  })\n);\n\ntype TypingProps = {\n  message: string;\n};\n\nconst Typing: React.FC<TypingProps> = (props: TypingProps) => {\n  const classes = useStyles();\n  return (\n    <Typography color=\"primary\" variant=\"body2\" component=\"span\">\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingText}>{props.message}</span>\n    </Typography>\n  );\n};\nexport default Typing;\n","import React, { ChangeEvent, KeyboardEvent } from \"react\";\nimport {\n  Box,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Popover,\n  SvgIcon\n} from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { Send, InsertEmoticon } from \"@mui/icons-material\";\nimport Emoji from \"./Emoji\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatRoom, ImageSize, SendMessage } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    flex: \"auto\"\n  },\n  inputUpload: {\n    display: \"none\"\n  },\n  attachmentIcon: {\n    fill: \"none\",\n    stroke: \"currentColor\"\n  }\n}));\n\ntype EntryProps = {\n  chat: ChatRoom | null;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n};\n\n/**\n * Рассчитать пропорции изображения\n */\nconst getImageSize = (data: ImageSize) => {\n  let { width, height } = data;\n  if (width > 335 || height > 335) {\n    if (width > height) {\n      height = 335 * (height / width);\n      width = 335;\n    } else {\n      width = 335 * (width / height);\n      height = 335;\n    }\n  }\n  return {\n    width,\n    height\n  };\n};\n\nconst Entry: React.FC<EntryProps> = (props: EntryProps) => {\n  const classes = useStyles();\n  const { chat } = props;\n\n  const { t } = useTranslation();\n\n  const [empjiEl, setEmojiEl] = React.useState<HTMLButtonElement | null>(null);\n  const [text, setText] = React.useState(\"\");\n  const [lastTyping, setLastTyping] = React.useState({\n    chat,\n    time: 0\n  });\n\n  const handleEmojiClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setEmojiEl(event.currentTarget);\n  };\n\n  const handleEmojiClose = () => {\n    setEmojiEl(null);\n  };\n\n  const emojiSelect = (emoji: string) => {\n    setText(`${text}${emoji}`);\n    handleEmojiClose();\n  };\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setText(target.value);\n    if (\n      chat &&\n      props.onTyping &&\n      (lastTyping.chat !== chat || Date.now() - lastTyping.time >= 500)\n    ) {\n      setLastTyping({\n        chat,\n        time: Date.now()\n      });\n      props.onTyping(chat);\n    }\n  };\n\n  const sendMessage = (data: SendMessage) => {\n    if (chat && props.onSendMessage) props.onSendMessage(chat, data);\n  };\n\n  const submit = () => {\n    if (text.trim().length === 0) {\n      return;\n    }\n\n    sendMessage({ message: text, messageType: \"text\" });\n    setText(\"\");\n  };\n\n  const onSubmitClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    submit();\n  };\n\n  const onKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      submit();\n    }\n  };\n\n  const onSubmitFile = (event: React.FormEvent<HTMLInputElement>) => {\n    if (!event.currentTarget.files) return;\n    const file = event.currentTarget.files[0];\n    let messageType: string;\n    if (file.type.includes(\"image\")) {\n      messageType = \"image\";\n    } else if (file.type.includes(\"video\")) {\n      messageType = \"video\";\n    } else {\n      messageType = \"file\";\n    }\n    if (messageType === \"image\") {\n      const image = new Image();\n      const url = window.URL || window.webkitURL;\n      image.src = url.createObjectURL(file);\n      image.onload = () => {\n        const imageSize: ImageSize = getImageSize({\n          width: image.width,\n          height: image.height\n        });\n        sendMessage({\n          message: file,\n          width: imageSize.width,\n          height: imageSize.height,\n          messageType\n        });\n      };\n    } else {\n      sendMessage({\n        message: file,\n        messageType,\n        fileName: file.name,\n        size: file.size\n      });\n    }\n  };\n\n  const emojiOpen = Boolean(empjiEl);\n  const enojiId = emojiOpen ? \"simple-popover\" : undefined;\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <TextField\n        className={classes.input}\n        placeholder={t(\"CHAT.INPUT_MESSAGE\") || \"\"}\n        autoFocus={true}\n        variant=\"standard\"\n        InputProps={{\n          disableUnderline: true,\n          startAdornment: (\n            <InputAdornment position={\"start\"}>\n              <input\n                accept=\".pdf,.jpg,.jpeg,.bmp,.gif,.png,application/pdf,image/jpeg,image/bmp,image/gif,image/png\"\n                className={classes.inputUpload}\n                id=\"icon-button-file\"\n                type=\"file\"\n                onChange={onSubmitFile}\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload\"\n                  component=\"span\"\n                  size=\"small\"\n                >\n                  <SvgIcon fill=\"none\" className={classes.attachmentIcon}>\n                    <path\n                      d=\"M16.768 13.5767L11.6961 18.6486C9.35886 20.9859 5.56937 20.9859 3.23208 18.6486V18.6486C0.894789 16.3114 0.894789 12.5219 3.23208 10.1846L10.4479 2.96872C12.0875 1.32914 14.7458 1.32914 16.3854 2.96873V2.96873C18.025 4.60831 18.025 7.26659 16.3854 8.90617L9.16515 16.1264C8.23032 17.0612 6.71466 17.0612 5.77982 16.1264V16.1264C4.84499 15.1916 4.84499 13.6759 5.77982 12.7411L10.8896 7.63131\"\n                      strokeWidth=\"1.6\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </SvgIcon>\n                </IconButton>\n              </label>{\" \"}\n              <IconButton\n                aria-describedby={enojiId}\n                onClick={handleEmojiClick}\n                color=\"primary\"\n                size=\"small\"\n              >\n                <InsertEmoticon />\n              </IconButton>\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={onSubmitClick}\n            >\n              <Send />\n            </IconButton>\n          )\n        }}\n        value={text}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n      />\n      <Popover\n        id={enojiId}\n        open={emojiOpen}\n        anchorEl={empjiEl}\n        onClose={handleEmojiClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n      >\n        <Emoji onSelect={emojiSelect} />\n      </Popover>\n    </Box>\n  );\n};\nexport default Entry;\n","import moment from \"moment\";\nimport { ChatRoom, Contact, ContactGather, Group, GroupGather } from \"../types\";\n\nexport function isEmpty(value: unknown): boolean {\n  return (\n    value == null ||\n    (typeof value === \"object\" && Object.keys(value).length === 0) ||\n    (typeof value === \"string\" && value.trim().length === 0)\n  );\n}\n\n// string contains string\nexport function isContainStr(str1: string, str2: string): boolean {\n  return str2.indexOf(str1) >= 0;\n}\n\n/**\n * check URL\n * @param text\n */\nexport function isUrl(text: string): boolean {\n  // parse url\n  const UrlReg = new RegExp(/http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?/);\n  return UrlReg.test(text);\n}\n\n/**\n * Формитирование времени сообщения\n * @param time\n */\nexport function formatTime(time: Date | string | undefined) {\n  if (typeof time === \"undefined\") return null;\n  if (typeof time === \"string\") time = new Date(time);\n  // больше чем вчера\n  if (\n    moment()\n      .add(-1, \"days\")\n      .startOf(\"day\")\n      .isAfter(time)\n  ) {\n    return moment(time).format(\"DD.MM.YYYY HH:mm\");\n  }\n  // вчера\n  if (\n    moment()\n      .startOf(\"day\")\n      .isAfter(time)\n  ) {\n    return `Вчера в ${moment(time).format(\"HH:mm\")}`;\n  }\n\n  return moment(time).format(\"HH:mm\");\n}\n\n/**\n * Раскрыть содержимое\n * @param content - данные в строке\n */\nexport function getFileMeta(\n  content: string\n): {\n  date: string;\n  userId: string;\n  size: string;\n  name: string;\n} {\n  // Формат  [date]$[userId]$[size]$[fileName]\n  // Например fileName = 1606980397047$1a01e20f-3780-4227-84b5-5c69ca766ee5$15.41KB$123.docx\n  const meta = content.split(\"$\");\n  const [date, userId, size, name] = meta;\n  return {\n    date,\n    userId,\n    size,\n    name\n  };\n}\n\nexport function getImageMeta(\n  content: string\n): {\n  date: string;\n  userId: string;\n  width: string;\n  height: string;\n} {\n  // Формат [date]$[userId]$[width]$[height]$...\n  const meta = content.split(\"$\");\n  const [date, userId, width, height] = meta;\n  return {\n    date,\n    userId,\n    width,\n    height\n  };\n}\n\nexport function splitFileName(name: string): { name: string; ext: string } {\n  const idx = name.lastIndexOf(\".\");\n  if (idx === -1)\n    return {\n      name,\n      ext: \"\"\n    };\n  return {\n    name: name.slice(0, idx),\n    ext: name.slice(idx + 1)\n  };\n}\n\nexport const getChatId = (chat: ChatRoom | null): string | null => {\n  if (!chat) return null;\n  return (chat as Group).groupId\n    ? `group:${(chat as Group).groupId}`\n    : `user:${chat.userId}`;\n};\n\nexport const getChatName = (chat: ChatRoom): string => {\n  return (chat as Group).groupId\n    ? (chat as Group).name\n    : (chat as Contact).username;\n};\n\nexport const allMessCount = (chats: GroupGather | ContactGather) => {\n  return Object.values(chats)\n    .map(it => (it?.messages != null ? it?.messages.length : 0))\n    .reduce((a: number, b: number) => a + b, 0);\n};\n\nexport const chatRoomComparer = (a: ChatRoom, b: ChatRoom): number => {\n  const hasMessagesA = Array.isArray(a.messages) && a.messages.length > 0;\n  const hasMessagesB = Array.isArray(b.messages) && b.messages.length > 0;\n  if (\n    hasMessagesA &&\n    hasMessagesB &&\n    b.messages != null &&\n    a.messages != null\n  ) {\n    // !!! if cdate === undefined !!!\n    const bb =\n      b.messages[b.messages.length - 1].cdate != null\n        ? new Date(b.messages[b.messages.length - 1].cdate).getTime()\n        : new Date().getTime();\n\n    const aa =\n      a.messages[a.messages.length - 1].cdate != null\n        ? new Date(a.messages[a.messages.length - 1].cdate).getTime()\n        : new Date().getTime() - 1;\n    const res = bb - aa;\n\n    //console.log('res', res);\n    return res;\n  }\n  if (hasMessagesA) {\n    return -1;\n  }\n  return 1;\n};\n\nexport const getParam = (param: string) => {\n  const QueryString = window.location.search;\n  const urlParams = new URLSearchParams(QueryString);\n  return urlParams.get(param);\n};\n","import React from \"react\";\nimport { Avatar, Box } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nimport { getFileMeta, splitFileName } from \"../../utils/common\";\nimport { ChatMessage } from \"../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fileIcon: {\n      fontSize: \"0.75rem\"\n    },\n    fileBody: {\n      paddingLeft: theme.spacing(1.2)\n    }\n  })\n);\ntype FileProps = {\n  message: ChatMessage;\n};\n\nconst File: React.FC<FileProps> = ({ message }: FileProps) => {\n  const classes = useStyles();\n  const meta = getFileMeta(message.content);\n  const { name, ext } = splitFileName(meta.name);\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <Avatar className={classes.fileIcon}>{ext.toUpperCase()}</Avatar>\n      <Box display=\"flex\" flexDirection=\"column\" className={classes.fileBody}>\n        {name}\n        <span>{`${ext} ${meta.size}`}</span>\n      </Box>\n    </Box>\n  );\n};\n\nexport default File;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { ChatMessage } from \"../../types\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  mediaContent: {\n    maxWidth: 284,\n    maxHeight: 190,\n    borderRadius: theme.spacing(1.2),\n    [theme.breakpoints.down(\"sm\")]: {\n      maxWidth: 250,\n      maxHeight: 210\n    }\n  }\n}));\n\ntype VideoProps = {\n  apiUrl: string;\n  message: ChatMessage;\n  isConference: boolean;\n};\n\nconst Video: React.FC<VideoProps> = ({\n  apiUrl,\n  message,\n  isConference\n}: VideoProps) => {\n  const classes = useStyles();\n  let src = \"\";\n  if (isConference) {\n    const meta = JSON.parse(message.content);\n    src = `${apiUrl}/static/conf/${meta.visitId}/${meta.name}`;\n  } else src = `${apiUrl}/static/file/${message.content}`;\n  return (\n    <video src={src} className={classes.mediaContent} controls muted>\n      Ваш браузер не поддерживает тег video.\n    </video>\n  );\n};\n\nexport default Video;\n","import React from \"react\";\nimport Viewer from \"react-viewer\";\nimport { Theme } from \"@mui/material/styles\";\nimport { getImageMeta } from \"../../utils/common\";\nimport { ChatMessage } from \"../../types\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mediaContent: {\n      cursor: \"pointer\",\n      borderRadius: theme.spacing(1.2),\n      maxWidth: 284,\n      maxHeight: 190,\n      [theme.breakpoints.down(\"sm\")]: {\n        maxWidth: 250,\n        maxHeight: 170\n      }\n    }\n  })\n);\ntype ImageProrps = {\n  apiUrl: string;\n  message: ChatMessage;\n};\n\nconst Image: React.FC<ImageProrps> = ({ apiUrl, message }: ImageProrps) => {\n  const classes = useStyles();\n  const [viewerVisible, setViewerVisible] = React.useState(false);\n  const meta = getImageMeta(message.content);\n  return (\n    <React.Fragment>\n      <Viewer\n        zIndex={2000}\n        visible={viewerVisible}\n        changeable={false}\n        onClose={() => {\n          setViewerVisible(false);\n        }}\n        images={[\n          {\n            src: `${apiUrl}/static/image/${message.content}`\n          }\n        ]}\n      />\n      <img\n        src={`${apiUrl}/static/image/${message.content}`}\n        width={meta.width}\n        height={meta.height}\n        className={classes.mediaContent}\n        onClick={() => {\n          setViewerVisible(true);\n        }}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\nimport File from \"./File\";\nimport Video from \"./Video\";\nimport Image from \"./Image\";\nimport { ChatMessage } from \"../../types\";\n\ntype MessageProps = {\n  apiUrl: string;\n  message: ChatMessage;\n};\nconst MessageContent: React.FC<MessageProps> = ({\n  apiUrl,\n  message,\n}: MessageProps) => {\n  switch (message.messageType) {\n    case \"text\":\n      return <React.Fragment>{message.content}</React.Fragment>;\n    case \"video\":\n    case \"video_conference\":\n      return (\n        <Video\n          message={message}\n          apiUrl={apiUrl}\n          isConference={message.messageType === \"video_conference\"}\n        />\n      );\n    case \"image\":\n      return <Image message={message} apiUrl={apiUrl} />;\n    case \"file\":\n      return <File message={message} />;\n  }\n  return null;\n};\n\nexport default MessageContent;\n","import { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    rootContact: {\n      padding: theme.spacing(0.2),\n      paddingLeft: theme.spacing(2),\n      \"& span\": {\n        float: \"right\",\n        color: theme.palette.text.secondary,\n        fontSize: \"0.8rem\"\n      },\n      \"& $message\": {\n        backgroundColor: theme.palette.grey[200],\n        color: theme.palette.text.primary,\n        borderTopRightRadius: theme.spacing(3),\n        borderBottomRightRadius: theme.spacing(3)\n      },\n      \"& $firstMessage\": {\n        borderTopLeftRadius: theme.spacing(3),\n        marginTop: theme.spacing(3)\n      },\n      \"& $lastMessage\": {\n        borderTopRightRadius: theme.spacing(3),\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: theme.spacing(3),\n        marginBottom: theme.spacing(3)\n      }\n    },\n    rootUser: {\n      padding: theme.spacing(0.2),\n      paddingRight: theme.spacing(2),\n      justifyContent: \"flex-end\",\n      \"& span\": {\n        float: \"right\",\n        color: \"#D9DEEC\",\n        fontSize: \"0.8rem\"\n      },\n      \"& $message\": {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        borderTopLeftRadius: theme.spacing(3),\n        borderBottomLeftRadius: theme.spacing(3)\n      },\n      \"& $firstMessage\": {\n        borderTopRightRadius: theme.spacing(3),\n        marginTop: theme.spacing(3)\n      },\n      \"& $lastMessage\": {\n        borderTopLeftRadius: theme.spacing(3),\n        borderBottomRightRadius: 0,\n        marginBottom: theme.spacing(3)\n      }\n    },\n    rootNotify: {\n      justifyContent: \"center\",\n      \"& > *\": {\n        //padding: `0px ${theme.spacing(1)}`,\n        borderRadius: theme.spacing(3),\n        fontWeight: 500\n      }\n    },\n    message: {\n      //maxWidth: \"55%\",\n      //minWidth: \"50%\",\n      maxWidth: \"65%\",\n\n      [theme.breakpoints.down(\"md\")]: {\n        maxWidth: \"95%\"\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        maxWidth: \"85%\"\n      },\n\n      borderRadius: theme.spacing(1.2),\n      padding: theme.spacing(1.8)\n    },\n    firstMessage: {},\n    lastMessage: {},\n\n    file: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      cursor: \"pointer\"\n    },\n    header: {\n      flex: \"0 0 100%\",\n      overflow: \"hidden\",\n      fontWeight: \"bold\"\n    },\n    body: {\n      flex: \"1 1 auto\",\n      wordBreak: \"break-word\",\n      overflow: \"hidden\"\n    },\n    status: {\n      paddingLeft: theme.spacing(1),\n      flex: \"1 1 auto\",\n      alignSelf: \"flex-end\"\n    },\n    statusImage: {\n      fontSize: \"1rem\",\n      marginRight: theme.spacing(0.5),\n      verticalAlign: \"middle\"\n    }\n  })\n);\n","import * as React from \"react\";\nimport { Box, Link, ListItem, Typography } from \"@mui/material\";\n\nimport { DoneAll, Done } from \"@mui/icons-material\";\nimport { formatTime } from \"../utils/common\";\nimport MessageContent from \"./MessageContent\";\nimport { Alert } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatMessage, Contact, PrivateMessage, User } from \"../types\";\n\n/* styles */\nimport useStyles from \"./styles\";\n\ntype MessageProps = {\n  apiUrl: string;\n  user: User;\n  message: ChatMessage;\n  owner: Contact;\n  isGroupMessage: boolean; // сообщение в группу\n  isUserFirst: boolean; // начинает группу сообщений от одного пользователя\n  isUserLast: boolean; // завершает группу сообщений от одного пользователя\n  refOnLastMess: React.RefObject<HTMLDivElement> | null;\n  onContextMenu: (event: React.MouseEvent<HTMLElement>) => void;\n};\n\nconst wrapMessage = (\n  apiUrl: string,\n  message: ChatMessage,\n  classes: ReturnType<typeof useStyles>,\n  isUserFirst: boolean,\n  isUserLast: boolean,\n  onContextMenu: ((event: React.MouseEvent<HTMLElement>) => void) | undefined,\n  child: JSX.Element\n) => {\n  const { messageType } = message;\n\n  const className =\n    isUserFirst && isUserLast\n      ? `${classes.message} ${classes.firstMessage} ${classes.lastMessage}`\n      : isUserFirst\n      ? `${classes.message} ${classes.firstMessage}`\n      : isUserLast\n      ? `${classes.message} ${classes.lastMessage}`\n      : classes.message;\n\n  if (messageType === \"file\") {\n    return (\n      <Link\n        className={`${className} ${classes.file}`}\n        underline=\"none\"\n        href={`${apiUrl}/static/file/${message.content}`}\n        target=\"_blank\"\n        download\n        onContextMenu={onContextMenu}\n      >\n        {child}\n      </Link>\n    );\n  }\n  const isMedia =\n    messageType === \"image\" ||\n    messageType === \"video\" ||\n    messageType === \"video_conference\";\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection={isMedia ? \"column\" : \"row\"}\n      flexWrap=\"wrap\"\n      className={className}\n      onContextMenu={onContextMenu}\n    >\n      {child}\n    </Box>\n  );\n};\n\nconst Message: React.FC<MessageProps> = (props: MessageProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const {\n    apiUrl,\n    message,\n    owner,\n    refOnLastMess,\n    user,\n    isGroupMessage,\n    isUserFirst,\n    isUserLast\n  } = props;\n\n  if (message.messageType === \"notify\") {\n    // Уведомление - особый случай\n    const content =\n      message.content[0] === \"{\"\n        ? JSON.parse(message.content)\n        : message.content;\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Alert\n          severity={typeof content === \"string\" ? \"info\" : content.severity}\n          ref={refOnLastMess}\n        >\n          {typeof content === \"string\" ? content : content.message}\n        </Alert>\n      </ListItem>\n    );\n  }\n\n  if (message.isRevoke) {\n    // Удаленное сообщение\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Typography variant=\"body2\" ref={refOnLastMess} align=\"center\">\n          {message.userId === user.userId\n            ? t(\"CHAT.MESSAGE.REVOKED.YOU\")\n            : `${message.revokeUserName} ${t(\"CHAT.MESSAGE.REVOKED.CONTACT\")}`}\n        </Typography>\n      </ListItem>\n    );\n  }\n\n  const isMine = user.userId === message.userId;\n\n  return (\n    <ListItem className={isMine ? classes.rootUser : classes.rootContact}>\n      {wrapMessage(\n        apiUrl,\n        message,\n        classes,\n        isUserFirst,\n        isUserLast,\n        props.onContextMenu,\n        <React.Fragment>\n          {!isMine && isGroupMessage && owner && isUserFirst && (\n            <div className={classes.header}>{owner.username}</div>\n          )}\n          <div className={classes.body}>\n            <MessageContent message={message} apiUrl={apiUrl} />\n          </div>\n          <div className={classes.status} ref={refOnLastMess}>\n            <span>\n              {isMine ? (\n                (message as PrivateMessage).status === 0 ? (\n                  <Done className={classes.statusImage} />\n                ) : (\n                  <DoneAll className={classes.statusImage} />\n                )\n              ) : null}\n              {formatTime(message.cdate)}\n            </span>\n          </div>\n        </React.Fragment>\n      )}\n    </ListItem>\n  );\n};\nexport default Message;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport Typing from \"./Typing\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"../types\";\n\ntype ContactStatusProps = {\n  contact: Contact;\n  isTyping: boolean;\n};\n\nconst ContactStatus: React.FC<ContactStatusProps> = (\n  props: ContactStatusProps\n) => {\n  const { t } = useTranslation();\n\n  if (props.isTyping) return <Typing message={t(\"CHAT.STATUS.TYPING\")} />;\n  if (props.contact.online === 1)\n    return (\n      <Typography variant=\"body2\" color=\"primary\" component=\"span\">\n        {t(\"CHAT.STATUS.ONLINE\")}\n      </Typography>\n    );\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" component=\"span\">\n      {t(\"CHAT.STATUS.OFFLINE\")}\n    </Typography>\n  );\n};\n\nexport default ContactStatus;\n","import React from \"react\";\nimport {\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from \"@mui/material\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport ContactStatus from \"./ContactStatus\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Contact } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  star: {\n    fontSize: \"0.85rem\",\n    verticalAlign: \"middle\"\n  }\n}));\n\ntype ContactListProps = {\n  apiUrl: string;\n  contacts: Contact[];\n  owner?: number;\n  onClick?: (contact: Contact) => void;\n};\n\nconst ContactList: React.FC<ContactListProps> = (props: ContactListProps) => {\n  const classes = useStyles();\n  const { apiUrl, contacts, owner } = props;\n\n  return (\n    <List aria-label=\"contacts\">\n      {contacts.map(contact => (\n        <ListItem\n          button\n          key={contact.userId}\n          onClick={() => props.onClick && props.onClick(contact)}\n        >\n          <ListItemAvatar>\n            <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={\n              <span>\n                {contact.username}{\" \"}\n                {owner === contact.userId && (\n                  <StarIcon className={classes.star} color=\"primary\" />\n                )}\n              </span>\n            }\n            secondary={<ContactStatus contact={contact} isTyping={false} />}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\nexport default ContactList;\n","import { Dialog, DialogTitle } from \"@mui/material\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"../types\";\nimport ContactList from \"./ContactList\";\n\ninterface AddContactProps {\n  open: boolean;\n  apiUrl: string;\n  contacts: Contact[];\n  onClose: (value?: Contact) => void;\n}\n\nconst AddContact: React.FC<AddContactProps> = (\n  props: AddContactProps\n) => {\n  const { onClose, open, apiUrl, contacts } = props;\n  const { t } = useTranslation();\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleListItemClick = (contact: Contact) => {\n    onClose(contact);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"add-contact-title\"\n      open={open}\n    >\n      <DialogTitle id=\"switch-operator-title\">\n        {t(\"CHAT.ADD_CONTACT\")}\n      </DialogTitle>\n      <ContactList\n        apiUrl={apiUrl}\n        contacts={contacts}\n        onClick={handleListItemClick}\n      />\n    </Dialog>\n  );\n};\n\nexport default AddContact;","import React from 'react';\nimport {\n  Avatar,\n  CardHeader,\n  Button,\n  Popover,\n  IconButton,\n} from '@mui/material';\nimport { Theme } from '@mui/material/styles';\nimport GroupIcon from '@mui/icons-material/Group';\nimport { useTranslation } from 'react-i18next';\nimport VideoCallIcon from '@mui/icons-material/VideoCall';\nimport CallEndIcon from '@mui/icons-material/CallEnd';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactStatus from './ContactStatus';\nimport ContactList from './ContactList';\nimport AddContact from './AddContact';\nimport {\n  ChatRoom,\n  Contact,\n  Group,\n  SetTyping,\n  User,\n  ConferenceData,\n} from '../types';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport { isEmpty } from '../utils/common';\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popover: {\n      pointerEvents: 'none',\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n    avatarGroup: {\n      backgroundColor: '#28B7C6',\n      color: '#fff',\n    },\n  }),\n);\n\ntype RoomHeaderProps = {\n  apiUrl: string;\n  user: User;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  conferenceJoined: boolean;\n  className: string;\n  operators: Contact[];\n  onVideoCall?: (chat: ChatRoom) => void;\n  onVideoEnd?: (conference: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst getGroupStatus = (group: Group, t: (key: string) => string) => {\n  const status = [`${group.members?.length} ${t('CHAT.MEMBERS')}`];\n  const onlineCount = (group.members || []).reduce(\n    (sum: number, contact) => (contact.online ? sum + 1 : sum),\n    0,\n  );\n  if (onlineCount)\n    status.push(`${onlineCount} ${t('CHAT.STATUS.ONLINE')}`);\n  return status.join(', ');\n};\n\nconst RoomHeader: React.FC<RoomHeaderProps> = ({\n  apiUrl,\n  user,\n  chat,\n  typing,\n  conference,\n  conferenceJoined,\n  className,\n  operators,\n  onVideoCall,\n  onVideoEnd,\n  onConferencePause,\n  onOperatorAdd,\n  onLeaveGroup,\n}: RoomHeaderProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(\n    null,\n  );\n  const [addOperatorOpen, setAddOperatorOpen] = React.useState(false);\n\n  if (!chat)\n    return (\n      <CardHeader\n        avatar={<Avatar />}\n        title=\"\"\n        subheader=\"\"\n        className={className}\n      />\n    );\n\n  const handlePopoverOpen = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleAddOperatorOpen = () => {\n    setAddOperatorOpen(true);\n  };\n\n  const handleAddOperatorClose = (operator?: Contact) => {\n    setAddOperatorOpen(false);\n    if (onOperatorAdd && operator && chat)\n      onOperatorAdd(chat as Group, operator);\n  };\n\n  const group = chat as Group;\n  if (group.groupId) {\n    // группа\n    return (\n      <CardHeader\n        avatar={\n          <Avatar alt={group.name} className={classes.avatarGroup}>\n            <GroupIcon />{' '}\n          </Avatar>\n        }\n        title={group.name}\n        subheader={\n          <React.Fragment>\n            <span\n              aria-owns={anchorEl ? 'mouse-over-popover' : undefined}\n              aria-haspopup=\"true\"\n              onMouseEnter={handlePopoverOpen}\n              onMouseLeave={handlePopoverClose}\n            >\n              {getGroupStatus(group, t)}\n            </span>\n            <Popover\n              id=\"mouse-over-popover\"\n              className={classes.popover}\n              classes={{\n                paper: classes.paper,\n              }}\n              open={!!anchorEl}\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              onClose={handlePopoverClose}\n              disableRestoreFocus\n            >\n              <ContactList\n                apiUrl={apiUrl}\n                contacts={group.members as Contact[]}\n                owner={group.userId}\n              />\n            </Popover>\n          </React.Fragment>\n        }\n        className={className}\n        action={\n          <React.Fragment>\n            {user.role === 4 && (\n              <React.Fragment>\n                <IconButton\n                  aria-label=\"add user\"\n                  onClick={handleAddOperatorOpen}\n                >\n                  <PersonAddIcon />\n                </IconButton>\n                <AddContact\n                  apiUrl={apiUrl}\n                  open={addOperatorOpen}\n                  contacts={operators}\n                  onClose={handleAddOperatorClose}\n                />\n              </React.Fragment>\n            )}\n            {user.role === 4 &&\n              group.members?.find(\n                (it) => it.userId !== user.userId && it.role === 4,\n              ) &&\n              onLeaveGroup && (\n                <IconButton\n                  aria-label=\"leave group\"\n                  onClick={() => onLeaveGroup(group)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              )}\n          </React.Fragment>\n        }\n      />\n    );\n  }\n  const contact = chat as Contact;\n  const isTyping =\n    !!typing?.contactId && typing?.userId === contact.userId;\n/*\n  console.log(\n    'conference',\n    conference,\n    'user',\n    user,\n    'contact',\n    contact,\n  );\n*/\n  return (\n    <CardHeader\n      avatar={\n        <Avatar\n          alt={contact.username}\n          src={`${apiUrl}${contact.avatar}`}\n        />\n      }\n      title={contact.username}\n      subheader={\n        <ContactStatus contact={contact} isTyping={isTyping} />\n      }\n      className={className}\n      action={\n        <React.Fragment>\n          {conferenceJoined &&\n            conference &&\n            !isEmpty(conference) &&\n            onConferencePause != null && (\n              <Button\n                aria-label=\"cancel call\"\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                startIcon={<CallEndIcon color=\"error\" />}\n                onClick={() => onConferencePause(conference)}\n              >\n                {t('CHAT.CONFERENCE.PAUSE')}\n              </Button>\n            )}\n\n          {conference &&\n            !isEmpty(conference) &&\n            onVideoEnd != null &&\n            user.role != null &&\n            [3, 4].includes(user.role) && (\n              <Button\n                aria-label=\"cancel call\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<CallEndIcon color=\"error\" />}\n                onClick={() => onVideoEnd(conference)}\n                style={{ marginLeft: 8 }}\n              >\n                {t('CHAT.CONFERENCE.FINISH')}\n              </Button>\n            )}\n\n          {isEmpty(conference) &&\n            onVideoCall != null &&\n            user.role &&\n            [3, 4].includes(user.role) && (\n              <Button\n                aria-label=\"video call\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<VideoCallIcon />}\n                onClick={() => onVideoCall(contact)}\n              >\n                {t('CHAT.CONFERENCE.START')}\n              </Button>\n            )}\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default RoomHeader;\n","import React, { useCallback } from \"react\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CircularProgress,\n  Divider,\n  List,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  IconButton\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nimport FileCopyIcon from \"@mui/icons-material/FileCopy\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport Entry from \"./Entry\";\nimport Message from \"./Message\";\nimport RoomHeader from \"./RoomHeader\";\nimport { useTranslation } from \"react-i18next\";\nimport { getChatId, isEmpty } from \"../utils/common\";\nimport {\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  SetTyping,\n  User,\n  Contact,\n  ConferenceData,\n  Group,\n  ContactGather\n} from \"../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      minWidth: 360,\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    inline: {\n      display: \"inline\"\n    },\n    messageListOuter: {\n      flex: 1,\n      overflowY: \"auto\",\n      margin: 0,\n      padding: 0,\n      scrollbarWidth: \"thin\",\n      scrollbarColor: \"#6b6b6b #fff\",\n      \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n        backgroundColor: \"#fff\"\n      },\n      \"&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb\": {\n        borderRadius: 8,\n        backgroundColor: \"#d5d9ef\",\n        border: \"5px solid #fff\"\n      },\n      \"&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus\": {\n        backgroundColor: \"#fff\"\n      },\n      \"&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active\": {\n        backgroundColor: \"#73d7f5\",\n        border: \"3px solid #fff\"\n      },\n      \"&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover\": {\n        backgroundColor: \"#73d7f5\",\n        border: \"3px solid #fff\"\n      },\n      \"&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner\": {\n        backgroundColor: \"#fff\"\n      }\n    },\n    messageList: {\n      height: \"100%\",\n      overflow: \"auto\"\n    },\n    roomHeader: {\n      flex: 1\n    },\n    roomProgress: {\n      padding: theme.spacing(2)\n    },\n    flexAll: {\n      flex: \"1 1 auto\"\n    },\n    flexEnd: {\n      justifyContent: \"flex-end\"\n    }\n  })\n);\n\nconst initialMenuState = {\n  message: null,\n  mouseX: null,\n  mouseY: null,\n  canCopy: false,\n  canDelete: false\n};\n\nconst initialScrollState = {\n  autoScroll: true,\n  height: 0\n};\n\ntype RoomProps = {\n  apiUrl: string;\n  user: User;\n  users: ContactGather;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  conferenceJoined: boolean;\n  loading: boolean;\n  pageSize: number;\n  operators: Contact[];\n  onExitRoom?: (chat: ChatRoom) => void;\n  onEnterRoom?: (chat: ChatRoom) => void;\n  onNeedMoreMessages: (chat: ChatRoom) => Promise<void>;\n  onMeesageDelete?: (chat: ChatRoom, message: ChatMessage) => void;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n  onVideoCall?: (chat: ChatRoom) => void;\n  onVideoEnd?: (chat: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst Room: React.FC<RoomProps> = (props: RoomProps) => {\n  const {\n    apiUrl,\n    user,\n    users,\n    chat,\n    typing,\n    conference,\n    conferenceJoined,\n    loading,\n    pageSize\n  } = props;\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [scrollState, setScrollState] = React.useState(initialScrollState);\n\n  const messages = chat?.messages;\n  const messageCount = messages?.length || 0;\n\n  const refOnLastMess = React.useRef<HTMLDivElement>(null);\n  const refList = React.useRef<HTMLUListElement>(null);\n\n  const [menuState, setMenuState] = React.useState<{\n    message: ChatMessage | null;\n    mouseX: null | number;\n    mouseY: null | number;\n    canCopy: boolean;\n    canDelete: boolean;\n  }>(initialMenuState);\n\n  React.useEffect(() => {\n    if (props.onEnterRoom && chat) props.onEnterRoom(chat);\n  }, [getChatId(chat)]);\n\n  React.useLayoutEffect(() => {\n    if (scrollState.autoScroll && refOnLastMess.current) {\n      refOnLastMess.current.scrollIntoView();\n    }\n  }, [getChatId(chat), messageCount]);\n\n  React.useLayoutEffect(() => {\n    if (!loading && refList.current && scrollState.height > 0) {\n      refList.current.scrollTop =\n        refList.current.scrollHeight - scrollState.height;\n      setScrollState(initialScrollState);\n    }\n  }, [getChatId(chat), loading, scrollState.height]);\n\n  const onScroll = React.useCallback(\n    async (event: React.UIEvent<HTMLUListElement>) => {\n      const { currentTarget } = event;\n      if (!currentTarget || !chat || !!chat.noMoreData) return;\n      if (currentTarget.scrollTop === 0) {\n        if (messageCount >= pageSize && !loading && props.onNeedMoreMessages) {\n          setScrollState({\n            autoScroll: false,\n            height: currentTarget.scrollHeight\n          });\n          props.onNeedMoreMessages(chat);\n        }\n      }\n    },\n    [chat, loading]\n  );\n\n  const handleMenuPopup = (\n    message: ChatMessage,\n    event: React.MouseEvent<HTMLElement>\n  ) => {\n    const canCopy = message.messageType === \"text\";\n    const canDelete =\n      user.userId === message.userId &&\n      !!props.onMeesageDelete &&\n      new Date().getTime() - new Date(message.cdate).getTime() <= 1000 * 60 * 2;\n    if (!canCopy && !canDelete) {\n      setMenuState(initialMenuState);\n      return;\n    }\n    event.preventDefault();\n    setMenuState({\n      message,\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4,\n      canCopy,\n      canDelete\n    });\n  };\n\n  const handleMenuClose = () => {\n    setMenuState(initialMenuState);\n  };\n\n  const handleCopy = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (!message) return;\n    navigator.clipboard.writeText(message.content);\n  }, [menuState.message]);\n\n  const handleDelete = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (props.onMeesageDelete && chat && message)\n      props.onMeesageDelete(chat, message);\n  }, [menuState.message]);\n\n  //console.log(\"messages\", messages)\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <Box display=\"flex\" flexDirection=\"row\">\n        {props.onExitRoom && chat && (\n          <IconButton\n            aria-label=\"exit room\"\n            onClick={() => props.onExitRoom && props.onExitRoom(chat)}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n        )}\n        <RoomHeader\n          apiUrl={apiUrl}\n          user={user}\n          chat={chat}\n          typing={typing}\n          conference={conference}\n          conferenceJoined={conferenceJoined}\n          operators={props.operators}\n          className={classes.roomHeader}\n          onVideoCall={props.onVideoCall}\n          onVideoEnd={props.onVideoEnd}\n          onConferencePause={props.onConferencePause}\n          onOperatorAdd={props.onOperatorAdd}\n          onLeaveGroup={props.onLeaveGroup}\n        />\n        {loading && (\n          <div className={classes.roomProgress}>\n            <CircularProgress size={20} />\n          </div>\n        )}\n      </Box>\n      <Divider />\n      <CardContent className={classes.messageListOuter}>\n        {!isEmpty(messages) ? (\n          <List className={classes.messageList} onScroll={onScroll}>\n            {messages != null &&\n              (messages as ChatMessage[]).map((message, inx) => (\n                <Message\n                  key={inx}\n                  apiUrl={apiUrl}\n                  user={user}\n                  message={message}\n                  owner={users[message.userId]}\n                  isGroupMessage={!!chat?.groupId}\n                  isUserFirst={\n                    inx === 0 ||\n                    messages[inx - 1].messageType === \"notify\" ||\n                    messages[inx - 1].userId !== messages[inx].userId\n                  }\n                  isUserLast={\n                    inx === messages.length - 1 ||\n                    messages[inx + 1].messageType === \"notify\" ||\n                    messages[inx + 1].userId !== messages[inx].userId\n                  }\n                  onContextMenu={event => handleMenuPopup(message, event)}\n                  refOnLastMess={\n                    inx === messages.length - 1 ? refOnLastMess : null\n                  }\n                />\n              ))}\n          </List>\n        ) : null}\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Entry\n          chat={chat}\n          onTyping={props.onTyping}\n          onSendMessage={props.onSendMessage}\n        />\n      </CardContent>\n      <Menu\n        keepMounted\n        open={menuState.mouseY !== null}\n        onClose={handleMenuClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          menuState.mouseY !== null && menuState.mouseX !== null\n            ? { top: menuState.mouseY, left: menuState.mouseX }\n            : undefined\n        }\n      >\n        <MenuItem onClick={handleCopy} disabled={!menuState.canCopy}>\n          <span className={classes.flexAll}>{t(\"CHAT.MESSAGE.MENU.COPY\")}</span>\n          <ListItemIcon className={classes.flexEnd}>\n            <FileCopyIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n        <MenuItem onClick={handleDelete} disabled={!menuState.canDelete}>\n          <span className={classes.flexAll}>\n            {t(\"CHAT.MESSAGE.MENU.DELETE\")}\n          </span>\n          <ListItemIcon className={classes.flexEnd}>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n      </Menu>\n    </Card>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport {\n  Avatar,\n  Badge,\n  Box,\n  Chip,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles, withStyles } from \"@mui/styles\";\n\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport { formatTime, getChatName } from \"../utils/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatMessage, ChatRoom, Contact, Group, SetTyping } from \"../types\";\n\ntype RoomListItemProps = {\n  apiUrl: string;\n  chat: ChatRoom;\n  active: boolean;\n  typing: SetTyping | null;\n  onClick: React.MouseEventHandler<HTMLDivElement> | undefined;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      flex: \"1 1 auto\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n    time: {\n      paddingLeft: theme.spacing(1),\n      justifyContent: \"flex-end\",\n      whiteSpace: \"nowrap\",\n    },\n    unread: {\n      justifyContent: \"flex-end\",\n      maxHeight: 20,\n    },\n    avatarGroup: {\n      backgroundColor: \"#28B7C6\",\n      color: \"#fff\",\n    },\n  })\n);\n\nconst getMessageText = (\n  message: ChatMessage | null,\n  t: (key: string) => string\n) => {\n  if (!message) return null;\n  switch (message.messageType) {\n    case \"text\":\n      return message.content;\n    case \"image\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.IMAGE\")}]`;\n    case \"video\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.VIDEO\")}]`;\n    case \"file\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.FILE\")}]`;\n    case \"notify\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.NOTIFY\")}]`;\n    default:\n      return null;\n  }\n};\n\nconst TypingBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: \"#44b700\",\n      color: \"#44b700\",\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      \"&::after\": {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"50%\",\n        animation: \"$ripple 1.2s infinite ease-in-out\",\n        border: \"1px solid currentColor\",\n        content: '\"\"',\n      },\n    },\n    \"@keyframes ripple\": {\n      \"0%\": {\n        transform: \"scale(.8)\",\n        opacity: 1,\n      },\n      \"100%\": {\n        transform: \"scale(2.4)\",\n        opacity: 0,\n      },\n    },\n  })\n)(Badge);\n\nconst OnlineBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: theme.palette.primary.main,\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    },\n  })\n)(Badge);\n\nconst contactAvatar = (\n  apiUrl: string,\n  contact: Contact,\n  typing: SetTyping | null\n): JSX.Element => {\n  const avatar = (\n    <Avatar alt={contact.username} src={`${apiUrl}${contact.avatar}`} />\n  );\n\n  const isTyping = !!typing?.contactId && typing?.userId === contact.userId;\n  if (isTyping)\n    return (\n      <TypingBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </TypingBadge>\n    );\n\n  if (contact?.online)\n    return (\n      <OnlineBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </OnlineBadge>\n    );\n\n  return avatar;\n};\n\nconst RoomListItem: React.FC<RoomListItemProps> = (\n  props: RoomListItemProps\n) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { apiUrl, chat, typing } = props;\n  const roomName = getChatName(chat);\n\n  const avatar = (chat as Group).groupId ? (\n    <Avatar alt={roomName} className={classes.avatarGroup}>\n      <GroupIcon />{\" \"}\n    </Avatar>\n  ) : (\n    contactAvatar(apiUrl, chat as Contact, typing)\n  );\n\n  const lastMessage =\n    chat.messages && chat.messages.length > 0\n      ? chat.messages[chat.messages.length - 1]\n      : null;\n\n  const roomText = getMessageText(lastMessage, t);\n  const roomTime = lastMessage?.cdate;\n\n  return (\n    <ListItem button selected={props.active} onClick={props.onClick}>\n      <ListItemAvatar>{avatar}</ListItemAvatar>\n      <ListItemText\n        secondaryTypographyProps={{ component: \"span\" }}\n        primary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomName}</span>\n            <span className={classes.time}>{formatTime(roomTime)}</span>\n          </Box>\n        }\n        secondary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomText}</span>\n            {chat.unreadCount ? (\n              <Chip\n                className={classes.unread}\n                component=\"span\"\n                size=\"small\"\n                color=\"primary\"\n                label={chat.unreadCount}\n              />\n            ) : null}\n          </Box>\n        }\n      />\n    </ListItem>\n  );\n};\nexport default RoomListItem;\n","import React from 'react';\nimport List from '@mui/material/List';\nimport { Card, CardHeader, Divider, TextField } from '@mui/material';\nimport RoomListItem from './RoomListItem';\nimport {\n  chatRoomComparer,\n  getChatId,\n  getChatName,\n  isEmpty,\n} from '../utils/common';\nimport { useTranslation } from 'react-i18next';\nimport { ChatRoom, Contact, Group, SetTyping, User } from '../types';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    height: '100%',\n  },\n  searchField: {\n    width: '100%',\n  },\n  listStyle: {\n    maxHeight: '100%',\n    overflowY: 'auto',\n    scrollbarColor: '#6b6b6b #fff',\n    '&::-webkit-scrollbar, & *::-webkit-scrollbar': {\n      backgroundColor: '#fff',\n    },\n    '&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb': {\n      borderRadius: 8,\n      backgroundColor: '#d5d9ef',\n      border: '5px solid #fff',\n    },\n    '&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus': {\n      backgroundColor: '#fff',\n    },\n    '&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active': {\n      backgroundColor: '#73d7f5',\n      border: '3px solid #fff',\n    },\n    '&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover': {\n      backgroundColor: '#73d7f5',\n      border: '3px solid #fff',\n    },\n    '&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner': {\n      backgroundColor: '#fff',\n    },\n  },\n}));\n\ntype RoomListProps = {\n  apiUrl: string;\n  user: User;\n  activeRoom: ChatRoom | null;\n  groups: Group[];\n  contacts: Contact[];\n  typing: SetTyping | null;\n  onChangeChat?: (chat: ChatRoom) => void;\n};\n\nconst filterChats = (\n  chats: ChatRoom[],\n  filter: string | null,\n): ChatRoom[] => {\n  if (filter === null) return chats;\n  const lowerFilter = filter.toLowerCase();\n  return chats.filter(\n    chat =>\n      getChatName(chat)\n        .toLowerCase()\n        .indexOf(lowerFilter.toLowerCase()) !== -1,\n  );\n};\n\nconst sortChats = (\n  userId: number,\n  groups: ChatRoom[],\n  contacts: ChatRoom[],\n) => {\n  let roomArr = [...groups, ...contacts];\n  //console.log('groups', groups, 'contacts', contacts);\n\n  // Сортировать окно чата (по времени последних сообщений)\n  roomArr = roomArr.sort(chatRoomComparer);\n\n  // Проверяем, есть ли список, который нужно закрепить\n  const topChatId = localStorage.getItem(\n    `${userId}-topChatId`,\n  ) as string;\n  if (topChatId) {\n    const chat = roomArr.find(c => getChatId(c) === topChatId);\n    if (chat) {\n      // На первое место\n      roomArr = roomArr.filter(k => getChatId(k) !== topChatId);\n      chat.isTop = true;\n      roomArr.unshift(chat);\n    }\n  }\n\n  return roomArr;\n};\n\nconst RoomList: React.FC<RoomListProps> = (props: RoomListProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [chats, setChats] = React.useState<ChatRoom[]>(\n    sortChats(\n      props.user.userId,\n      filterChats(props.groups, null),\n      filterChats(props.contacts, null),\n    ),\n  );\n\n  const onSearchChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ): void => {\n    //console.log(\"e.target.value\", e.target.value);\n\n    setChats(\n      sortChats(\n        props.user.userId,\n        filterChats(props.groups, e.target.value),\n        filterChats(props.contacts, e.target.value),\n      ),\n    );\n  };\n  //const activeItem = (id: number) => id === props.activeRoom?.userId;\n\n  //console.log(\"chats\", chats);\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <CardHeader\n        title={\n          <TextField\n            className={classes.searchField}\n            label={t('CHAT.INPUT_SEARCH_CONTACT')}\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            onChange={onSearchChange}\n          />\n        }\n      />\n      <Divider />\n      <List aria-label=\"rooms\" className={classes.listStyle}>\n        {!isEmpty(chats) &&\n          chats.map(\n            chat =>\n              !isEmpty(chat) && (\n                <RoomListItem\n                  key={getChatId(chat)}\n                  apiUrl={props.apiUrl}\n                  chat={chat}\n                  active={chat === props.activeRoom}\n                  typing={props.typing}\n                  onClick={() =>\n                    props.onChangeChat != null &&\n                    props.onChangeChat(chat)\n                  }\n                />\n              ),\n          )}\n      </List>\n    </Card>\n  );\n};\nexport default RoomList;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from '@mui/styles';\nimport { ConferenceData } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n  },\n}));\n\ntype ConferenceProps = {\n  conference: ConferenceData | null;\n  onClose: (conference: ConferenceData | null) => void;\n};\n\nconst Conference: React.FC<ConferenceProps> = ({\n  conference,\n  onClose,\n}: ConferenceProps) => {\n  const classes = useStyles();\n  const ref = React.useRef<HTMLIFrameElement>(null);\n\n  useEffect(() => {\n\n    const listener = ({ source, data }: MessageEvent) => {\n      if (source === ref.current?.contentWindow) {\n        const { type } = data;\n        if (\n          [\n            \"notSupported\",\n            \"connectionFail\",\n            // \"loginFail\",\n            \"callFail\",\n            \"hangUp\",\n            \"remoteHangUp\",\n            // \"onParticipantLeft\"\n          ].includes(type)\n        )\n          onClose(conference);\n      }\n    };\n    window.addEventListener(\"message\", listener);\n    return () => {\n      window.removeEventListener(\"message\", listener);\n    };\n  }, [conference?.id]);\n\n  return (\n    <iframe\n      title=\"conference\"\n      className={classes.root}\n      src={conference?.url}\n      allowFullScreen\n      allow=\"microphone; camera; autoplay; display-capture\"\n      ref={ref}\n    />\n  );\n};\nexport default Conference;\n","import React from \"react\";\nimport { Avatar, Button,  Paper } from \"@mui/material\";\nimport { ConferenceData, Contact } from \"../types\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  pulse: {\n    height: 100,\n    width: 100,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n    \"&::before\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\",\n    },\n    \"&::after\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\",\n      animationDelay: \"0.3s\",\n    },\n  },\n  avatar: {\n    width: \"80%\",\n    height: \"80%\",\n  },\n  footer: {\n    width: \"100%\",\n    alignSelf: \"flex-end\",\n    paddingTop: 64,\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  \"@keyframes pulse\": {\n    \"0%\": {\n      transform: \"scale(0.5)\",\n      opacity: 0,\n    },\n    \"50%\": {\n      transform: \"scale(1)\",\n      opacity: 1,\n    },\n    \"100%\": {\n      transform: \"scale(1.3)\",\n      opacity: 0,\n    },\n  },\n}));\n\ntype ConferenceCallProps = {\n  conference: ConferenceData;\n  contact: Contact;\n  apiUrl: string;\n  onAccept: (conference: ConferenceData) => void;\n};\n\nconst ConferenceCall: React.FC<ConferenceCallProps> = ({\n  conference,\n  contact,\n  apiUrl,\n  onAccept,\n}: ConferenceCallProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.pulse}>\n        {contact ? (\n          <Avatar\n            className={classes.avatar}\n            alt={contact.username}\n            src={`${apiUrl}${contact.avatar}`}\n          />\n        ) : (\n          <Avatar className={classes.avatar} />\n        )}\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => onAccept(conference)}\n        >\n          {t(\"CHAT.CONFERENCE.JOIN\")}\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n\nexport default ConferenceCall;\n","import React from 'react';\nimport {\n  AddGroupMessages,\n  AddPrivateMessages,\n  ChatRoom,\n  Contact,\n  ContactGather,\n  Group,\n  GroupGather,\n  GroupMember,\n  GroupMessage,\n  MessageOperation,\n  PrivateMessage,\n  SetActiveRoom,\n  //SetUser,\n  SetTyping,\n  User,\n  ConferenceData,\n  GroupMap,\n} from '../types';\nimport { chatRoomComparer } from '../utils/common';\n\nexport interface ChatState {\n  tokenKey: string;\n  user: User;\n  token: string;\n  activeRoom: ChatRoom | null;\n  groupGather: GroupGather;\n  userGather: ContactGather;\n  contactGather: ContactGather;\n  operators: Contact[];\n  initialContactId: number | null;\n  conference: {\n    data: ConferenceData | null;\n    joined: boolean;\n    ringPlayed: boolean;\n  };\n  typing: SetTyping | null;\n  loading: boolean;\n  error?: string;\n}\n\nconst emptyUser: User = {\n  userId: 0,\n  username: '',\n  password: '',\n  avatar: '',\n  langCode: '',\n};\n\nconst emptyChatState: ChatState = {\n  tokenKey: '', // ключ, где хранить токен\n  user: emptyUser, // пользователь\n  token: '', // токен\n  activeRoom: null, // активная комната\n  groupGather: {}, // список групп\n  userGather: {}, // список онлайн\n  contactGather: {}, // контакты\n  operators: [], // операторы\n  initialContactId: null, // начальный контакт\n  conference: {\n    data: null, // данные конференции\n    joined: false,\n    ringPlayed: false,\n  },\n  typing: null, // кто печатает текст\n  loading: false, // загрузка данных\n  error: undefined, // ошибка\n};\n\ntype ChatActionType =\n  | 'ADD_GROUP_MEMBER'\n  | 'ADD_GROUP_MESSAGE'\n  | 'ADD_GROUP_MESSAGES'\n  | 'SET_GROUP_MESSAGES'\n  | 'ADD_PRIVATE_MESSAGE'\n  | 'ADD_PRIVATE_MESSAGES'\n  | 'SET_PRIVATE_MESSAGES'\n  | 'SET_ACTIVE_ROOM'\n  | 'UPDATE_ACTIVE_ROOM'\n  | 'SET_GROUP_GATHER'\n  | 'SET_CONTACT_GATHER'\n  | 'SET_USER_GATHER'\n  | 'DEL_GROUP'\n  | 'DEL_GROUP_MEMBER'\n  | 'DEL_CONTACT'\n  | 'ADD_CONTACT_UNREAD_GATHER'\n  | 'LOSE_CONTACT_UNREAD_GATHER'\n  | 'ADD_GROUP_UNREAD_GATHER'\n  | 'LOSE_GROUP_UNREAD_GATHER'\n  | 'REVOKE_MESSAGE'\n  | 'USER_ONLINE'\n  | 'USER_OFFLINE'\n  | 'UPDATE_USER_INFO'\n  | 'SET_INITIAL_CONTACT_ID'\n  | 'SET_CONFERENCE'\n  | 'JOIN_CONFERENCE'\n  | 'PAUSE_CONFERENCE'\n  | 'STOP_CONFERENCE'\n  | 'SET_TYPING'\n  | 'MARK_AS_READ'\n  | 'UPDATE_GROUP_INFO'\n  | 'MARK_PRIVATE_MESSAGES_READ'\n  | 'SET_LOADING'\n  | 'SET_ERROR'\n  | 'SET_USER'\n  | 'SET_TOKEN'\n  | 'CLEAR_USER'\n  | 'CLEAR_CHAT_DATA'\n  | 'SET_OPERATORS';\n\ntype Action = {\n  type: ChatActionType;\n  payload?:\n    | null\n    | boolean\n    | number\n    | string\n    | Group\n    | Contact\n    | User\n    | PrivateMessage\n    | GroupMessage\n    | SetTyping\n    | MessageOperation\n    | GroupMember\n    | AddPrivateMessages\n    | AddGroupMessages\n    | SetActiveRoom\n    | ConferenceData\n    | Contact[]\n    | GroupMap;\n};\n\nconst getFreshActiveRoom = (state: ChatState) => {\n  if (state.activeRoom)\n    return (\n      state.groupGather[(state.activeRoom as Group).groupId] ||\n      state.contactGather[state.activeRoom.userId]\n    );\n  return null;\n};\n\nconst getActiveRoom = (state: ChatState) => {\n  const { activeRoom, initialContactId, contactGather } = state;\n  let newActiveRoom: ChatRoom | null = null;\n  if (initialContactId) {\n    newActiveRoom = contactGather[initialContactId];\n  } else if (activeRoom) {\n    newActiveRoom = getFreshActiveRoom(state);\n  } else {\n    // ищем комнату с самым свежим сообщением\n    const rooms = [\n      ...Object.values(state.contactGather),\n      ...Object.values(state.groupGather),\n    ].sort(chatRoomComparer);\n    if (rooms.length > 0) newActiveRoom = rooms[0];\n  }\n  return newActiveRoom;\n};\n\nconst setUserOnline = (\n  state: ChatState,\n  userId: number,\n  online: 0 | 1,\n): ChatState => {\n  const newState = { ...state };\n  // Обновить статусы приватных чатов\n  if (state.contactGather[userId])\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      online,\n    };\n\n  // Обновить статус участника в группах\n  for (const group of Object.values(state.groupGather) as Group[]) {\n    if (!group.members) continue;\n    const member = group.members.find((m) => m.userId === userId);\n    if (member) {\n      const index = group.members.indexOf(member);\n      group.members[index] = { ...member, online };\n    }\n  }\n  // Обновить статус операторов\n  const idx = newState.operators.findIndex(\n    (it) => it.userId === userId,\n  );\n  if (idx !== -1)\n    newState.operators[idx] = { ...newState.operators[idx], online };\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addGroupMessage = (state: ChatState, payload: GroupMessage) => {\n  const newState = { ...state };\n  const { groupId } = payload;\n  if (newState.groupGather[groupId]) {\n    if (newState.groupGather[groupId].messages) {\n      newState.groupGather[groupId].messages = [\n        ...(newState.groupGather[groupId].messages as GroupMessage[]),\n        payload,\n      ];\n    } else {\n      newState.groupGather[groupId] = {\n        ...state.groupGather[groupId],\n        messages: [payload],\n      };\n    }\n  }\n\n  // увеличиваем счетчик новых сообщений, если это не активная комната и сообщение не от нас\n  const { activeRoom } = newState;\n  if (\n    activeRoom &&\n    (activeRoom as Group).groupId !== groupId &&\n    payload.userId !== state.user.userId\n  ) {\n    return groupUnreadGather(\n      newState,\n      groupId,\n      (x?: number) => (x || 0) + 1,\n    );\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addPrivateMessage = (\n  state: ChatState,\n  payload: PrivateMessage,\n) => {\n  const newState = { ...state };\n  const contactId =\n    payload.contactId === state.user.userId\n      ? payload.userId\n      : payload.contactId;\n\n  // 1 добавляем сообщение\n  if (newState.contactGather[contactId].messages) {\n    newState.contactGather[contactId].messages = [\n      ...(newState.contactGather[contactId]\n        .messages as PrivateMessage[]),\n      payload,\n    ];\n  } else {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [payload],\n    };\n  }\n\n  // 2 если это сообщение в неактивной комнате и источник не мы (в соседней вкладке), то увеличиваем счетчик непрочитанных\n  if (\n    newState.activeRoom?.userId !== contactId &&\n    payload.userId !== state.user.userId\n  ) {\n    return contactUnreadGather(\n      newState,\n      contactId,\n      (x?: number) => (x || 0) + 1,\n    );\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst contactUnreadGather = (\n  state: ChatState,\n  userId: number,\n  predicate: (x?: number) => number,\n) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      unreadCount: predicate(\n        newState.contactGather[userId].unreadCount,\n      ),\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst groupUnreadGather = (\n  state: ChatState,\n  groupId: number,\n  predicate: (x?: number) => number,\n) => {\n  const newState = { ...state };\n\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      unreadCount: predicate(\n        newState.groupGather[groupId].unreadCount,\n      ),\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst revokeMessage = (\n  state: ChatState,\n  payload: MessageOperation,\n) => {\n  const { userId } = state.user;\n  const newState = { ...state };\n  const userName =\n    payload.username ||\n    newState.userGather[payload.userId as number].username;\n  if (payload.groupId) {\n    const { messages } = newState.groupGather[payload.groupId];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find(\n        (message) => message._id === payload._id,\n      );\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName,\n        };\n      }\n    }\n  } else {\n    const { messages } =\n      newState.contactGather[\n        payload.contactId === userId\n          ? (payload.userId as number)\n          : (payload.contactId as number)\n      ];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find(\n        (message) => message._id === payload._id,\n      );\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName,\n        };\n      }\n    }\n  }\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst delContact = (state: ChatState, userId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.contactGather[userId];\n  delete newState.contactGather[userId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroup = (state: ChatState, groupId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.groupGather[groupId];\n  delete newState.groupGather[groupId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroupMember = (state: ChatState, data: GroupMap) => {\n  const newState = { ...state };\n\n  const group = newState.groupGather[data.groupId];\n  if (group) {\n    group.members = group.members?.filter(\n      (it) => it.userId !== data.userId,\n    );\n  }\n\n  return newState;\n};\n\nconst updateGroupInfo = (state: ChatState, group: Group) => {\n  const newState = { ...state };\n\n  const { groupId, name, notice } = group;\n  const info = newState.groupGather[groupId];\n  if (info) {\n    newState.groupGather[groupId] = { ...info, name, notice };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst updateUserInfo = (state: ChatState, user: User) => {\n  const newState = { ...state };\n\n  const { userId, username, avatar } = user;\n\n  if (newState.userGather[userId]) {\n    newState.userGather[userId] = {\n      ...newState.userGather[userId],\n      username,\n      avatar,\n    };\n  }\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      username,\n      avatar,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMember = (state: ChatState, payload: GroupMember) => {\n  const members: Contact[] = payload.members.map((member) => ({\n    ...member,\n    isManager: 0,\n  }));\n\n  const newState = { ...state };\n\n  if (newState.groupGather[payload.groupId].members && members) {\n    newState.groupGather[payload.groupId].members = [\n      ...(state.groupGather[payload.groupId].members as Contact[]),\n      ...members,\n    ];\n  } else {\n    newState.groupGather[payload.groupId] = {\n      ...newState.groupGather[payload.groupId],\n      members,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst markPrivateMessagesRead = (\n  state: ChatState,\n  userId: number,\n) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    const updatedValue = { ...newState.contactGather[userId] };\n\n    if (updatedValue.messages) {\n      for (let i = 0; i < updatedValue.messages.length; i++)\n        updatedValue.messages[i] = {\n          ...updatedValue.messages[i],\n          status: 1,\n        };\n    }\n    newState.contactGather[userId] = updatedValue;\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addPrivateMessages = (\n  state: ChatState,\n  data: AddPrivateMessages,\n) => {\n  const newState = { ...state };\n\n  const { messages, contactId } = data;\n\n  if (newState.contactGather[contactId]) {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [\n        ...(messages || []),\n        ...(newState.contactGather[contactId].messages || []),\n      ],\n      noMoreData: messages?.length\n        ? messages?.length < data.pageSize\n        : false,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMessages = (\n  state: ChatState,\n  data: AddGroupMessages,\n) => {\n  const newState = { ...state };\n\n  const { groupId, messages, userArr: users } = data;\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      messages: [\n        ...(messages || []),\n        ...(newState.groupGather[groupId].messages || []),\n      ],\n      noMoreData: messages?.length\n        ? messages?.length < data.pageSize\n        : false,\n    };\n  }\n\n  newState.userGather = { ...newState.userGather };\n  for (const user of users) {\n    if (!newState.userGather[user.userId]) {\n      newState.userGather[user.userId] = user;\n    }\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst setActiveRoom = (state: ChatState, data: SetActiveRoom) => {\n  if (state.activeRoom && data.ifNotExists) return state;\n  return {\n    ...state,\n    activeRoom: data.groupId\n      ? state.groupGather[data.groupId]\n      : data.contactId\n      ? state.contactGather[data.contactId]\n      : null,\n  };\n};\n\nconst setToken = (state: ChatState, token: string): ChatState => {\n  localStorage.setItem(state.tokenKey, token);\n  return {\n    ...state,\n    token,\n  };\n};\n\nconst clearUser = (state: ChatState): ChatState => {\n  localStorage.removeItem(state.tokenKey);\n  return {\n    ...state,\n    token: '',\n    user: emptyUser,\n  };\n};\n\nconst setConference = (\n  state: ChatState,\n  conference: ConferenceData,\n): ChatState => {\n  return {\n    ...state,\n    conference: {\n      data: { ...conference },\n      joined: conference?.userId === state.user.userId,\n      ringPlayed: conference?.userId !== state.user.userId,\n    },\n  };\n};\n\nconst pauseConference = (\n  state: ChatState,\n  conference: ConferenceData,\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: {\n      data: { ...state.conference.data },\n      joined: false,\n      ringPlayed: false,\n    },\n  };\n};\n\nconst stopConference = (\n  state: ChatState,\n  conference: ConferenceData,\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: { data: null, joined: false, ringPlayed: false },\n  };\n};\n\nfunction chatReducer(state: ChatState, action: Action): ChatState {\n  switch (action.type) {\n    case 'SET_GROUP_GATHER':\n      return {\n        ...state,\n        groupGather: {\n          ...state.groupGather,\n          [(action.payload as Group).groupId]:\n            action.payload as Group,\n        },\n      };\n    case 'SET_CONTACT_GATHER':\n      return {\n        ...state,\n        contactGather: {\n          ...state.contactGather,\n          [(action.payload as Contact).userId]:\n            action.payload as Contact,\n        },\n      };\n    case 'DEL_GROUP':\n      return delGroup(state, action.payload as number);\n    case 'DEL_GROUP_MEMBER':\n      return delGroupMember(state, action.payload as GroupMap);\n    case 'DEL_CONTACT':\n      return delContact(state, (action.payload as Contact).userId);\n    case 'SET_USER_GATHER':\n      return {\n        ...state,\n        userGather: {\n          ...state.userGather,\n          [(action.payload as User).userId]: action.payload as User,\n        },\n      };\n    case 'UPDATE_ACTIVE_ROOM':\n      return { ...state, activeRoom: getActiveRoom(state) };\n    case 'SET_ACTIVE_ROOM':\n      return setActiveRoom(state, action.payload as SetActiveRoom);\n    case 'USER_ONLINE':\n      return setUserOnline(state, action.payload as number, 1);\n    case 'USER_OFFLINE':\n      return setUserOnline(state, action.payload as number, 0);\n    case 'ADD_GROUP_MESSAGE':\n      return addGroupMessage(state, action.payload as GroupMessage);\n    case 'ADD_PRIVATE_MESSAGE':\n      return addPrivateMessage(\n        state,\n        action.payload as PrivateMessage,\n      );\n    case 'ADD_GROUP_UNREAD_GATHER':\n      return groupUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1,\n      );\n    case 'ADD_CONTACT_UNREAD_GATHER':\n      return contactUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1,\n      );\n    case 'SET_TYPING':\n      return { ...state, typing: action.payload as SetTyping };\n    case 'LOSE_GROUP_UNREAD_GATHER':\n      return groupUnreadGather(\n        state,\n        action.payload as number,\n        () => 0,\n      );\n    case 'LOSE_CONTACT_UNREAD_GATHER':\n      return contactUnreadGather(\n        state,\n        action.payload as number,\n        () => 0,\n      );\n    case 'REVOKE_MESSAGE':\n      return revokeMessage(state, action.payload as MessageOperation);\n    case 'UPDATE_GROUP_INFO':\n      return updateGroupInfo(state, action.payload as Group);\n    case 'UPDATE_USER_INFO':\n      return updateUserInfo(state, action.payload as User);\n    case 'ADD_GROUP_MEMBER':\n      return addGroupMember(state, action.payload as GroupMember);\n    case 'SET_CONFERENCE':\n      return setConference(state, action.payload as ConferenceData);\n    case 'JOIN_CONFERENCE':\n      return {\n        ...state,\n        conference: {\n          data: { ...(action.payload as ConferenceData) },\n          joined: true,\n          ringPlayed: false,\n        },\n      };\n    case 'PAUSE_CONFERENCE':\n      return pauseConference(state, action.payload as ConferenceData);\n    case 'STOP_CONFERENCE':\n      return stopConference(state, action.payload as ConferenceData);\n    case 'MARK_PRIVATE_MESSAGES_READ':\n      return markPrivateMessagesRead(state, action.payload as number);\n    case 'ADD_PRIVATE_MESSAGES':\n      return addPrivateMessages(\n        state,\n        action.payload as AddPrivateMessages,\n      );\n    case 'ADD_GROUP_MESSAGES':\n      return addGroupMessages(\n        state,\n        action.payload as AddGroupMessages,\n      );\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload as boolean,\n        error: '',\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload as string,\n      };\n    case 'SET_TOKEN':\n      return setToken(state, action.payload as string);\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload as User,\n      };\n    case 'CLEAR_USER':\n      return clearUser(state);\n    case 'CLEAR_CHAT_DATA':\n      return {\n        ...state,\n        activeRoom: null,\n        groupGather: {},\n        userGather: {},\n        contactGather: {},\n        conference: {\n          data: null,\n          joined: false,\n          ringPlayed: false,\n        },\n        typing: null,\n      };\n    case 'SET_OPERATORS':\n      return {\n        ...state,\n        operators: action.payload as Contact[],\n      };\n  }\n\n  return state;\n}\n\nexport type ChatDispatch = React.Dispatch<Action>;\nconst emptyDispatch: ChatDispatch = () => null;\n\ntype ChatProviderProps = {\n  defLang: string | undefined;\n  tokenKey: string;\n  children: JSX.Element | JSX.Element[];\n};\n\nexport const ChatContext = React.createContext({\n  state: emptyChatState,\n  dispatch: emptyDispatch,\n});\n\nexport const ChatProvider: React.FC<ChatProviderProps> = (\n  props: ChatProviderProps,\n) => {\n  emptyUser.langCode = props.defLang;\n  const token = localStorage.getItem(props.tokenKey) as string;\n  const chatState: ChatState = {\n    ...emptyChatState,\n    tokenKey: props.tokenKey,\n    token,\n  };\n\n  const [state, dispatch] = React.useReducer(chatReducer, chatState);\n\n  return (\n    <ChatContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </ChatContext.Provider>\n  );\n};\n","import React, { createContext, useCallback, useContext } from \"react\";\nimport { ChatContext } from \"./ChatContext\";\nimport axios, { AxiosError, AxiosInstance } from \"axios\";\nimport { Contact, Group, PagingResponse, PrivateMessage } from \"../types\";\n\nexport interface IRestContext {\n  apiUrl: string;\n  pageSize: number;\n  fetch: AxiosInstance | null;\n  getPrivateMessages: (chat: Contact) => Promise<void>;\n  getGroupMessages: (chat: Group) => Promise<void>;\n  getUserByMmk: (\n    mmkId: string | null,\n    guid: string | null\n  ) => Promise<number | undefined>;\n}\nconst initialContext = {} as IRestContext;\n\nexport const RestContext: React.Context<IRestContext> = createContext(\n  initialContext\n);\n\ntype RestProviderProps = {\n  baseURLApi: string;\n  pageSize: number;\n  children: JSX.Element;\n};\n\nexport const RestProvider: React.FC<RestProviderProps> = ({\n  baseURLApi,\n  pageSize,\n  children\n}: RestProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n\n  const fetch: AxiosInstance = axios.create({\n    timeout: 60000, // Таймаут минута\n    baseURL: baseURLApi,\n    headers: {\n      \"Cache-Control\": \"no-cache\",\n      Pragma: \"no-cache\",\n      Authorization: `Bearer ${state.token}`\n    },\n    withCredentials: false\n  });\n\n  const getPrivateMessages = useCallback(\n    async (chat: Contact) => {\n      const contactId = chat.userId;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: \"SET_LOADING\", payload: true });\n        const { data } = await fetch.get(\"/contact/messages\", {\n          params: {\n            contactId,\n            current,\n            pageSize\n          }\n        });\n        if (data) {\n          dispatch({\n            type: \"ADD_PRIVATE_MESSAGES\",\n            payload: {\n              pageSize,\n              contactId,\n              messages: data as PrivateMessage[]\n            }\n          });\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: \"SET_ERROR\", payload: err.message });\n      } finally {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      }\n    },\n    [dispatch]\n  );\n\n  const getGroupMessages = useCallback(\n    async (chat: Group) => {\n      const { groupId } = chat;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: \"SET_LOADING\", payload: true });\n        const { data }: { data: PagingResponse } = await fetch.get(\n          \"/group/messages\",\n          {\n            params: {\n              groupId,\n              current,\n              pageSize\n            }\n          }\n        );\n        if (data) {\n          dispatch({\n            type: \"ADD_GROUP_MESSAGES\",\n            payload: {\n              pageSize,\n              groupId,\n              ...data\n            }\n          });\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: \"SET_ERROR\", payload: err.message });\n      } finally {\n        dispatch({ type: \"SET_LOADING\", payload: false });\n      }\n    },\n    [dispatch]\n  );\n\n  const getUserByMmk = async (mmkId: string | null, guid: string | null) => {\n    try {\n      const { data }: { data: number } = await fetch.get(\"/contact/find\", {\n        params: {\n          mmkId,\n          guid\n        }\n      });\n      if (data != null) {\n        return data;\n      }\n    } catch (error) {\n      console.log(\"err getUserByMmk\", error);\n    }\n  };\n  return (\n    <RestContext.Provider\n      value={{\n        apiUrl: baseURLApi,\n        pageSize,\n        fetch,\n        getPrivateMessages,\n        getGroupMessages,\n        getUserByMmk\n      }}\n    >\n      {children}\n    </RestContext.Provider>\n  );\n};\n","import React, { createContext, useContext, useEffect } from \"react\";\nimport { Socket } from \"socket.io-client\";\nimport { useSocket } from \"../hooks/useSocket\";\nimport {\n  ChatData,\n  Contact,\n  Group,\n  GroupMessage,\n  JoinGroup,\n  MessageOperation,\n  PrivateMessage,\n  SetTyping,\n  User,\n  ConferenceData,\n  SetActiveRoom,\n  GroupMap,\n} from \"../types\";\nimport { ChatContext } from \"./ChatContext\";\n\n// Формат ответа сервера\ninterface ServerRes {\n  code: number;\n  msg: string;\n  data: unknown;\n}\n\nexport interface ISocketContext {\n  socket: Socket | null;\n  online: boolean;\n}\nconst initialContext = {\n  online: false,\n} as ISocketContext;\n\nexport const SocketContext: React.Context<ISocketContext> =\n  createContext(initialContext);\n\ntype SocketProviderProps = {\n  wsUrl: string;\n  wsPath: string;\n  children: JSX.Element;\n};\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({\n  wsUrl,\n  wsPath,\n  children,\n}: SocketProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n  const { socket, online, disconnectSocket, connectSocket } = useSocket(\n    wsUrl,\n    wsPath,\n    state.token\n  );\n\n  useEffect(() => {\n    if (state.token) {\n      connectSocket();\n    }\n    return () => {\n      disconnectSocket();\n    };\n  }, [state.token, connectSocket]);\n\n  useEffect(() => {\n    if (!state.token) disconnectSocket();\n  }, [state.token, disconnectSocket]);\n\n  // listen unauthorized event\n  useEffect(() => {\n    const listener = (msg: string) => {\n      console.log(\"unauthorized msg\", msg);\n      dispatch({ type: \"CLEAR_USER\" });\n    };\n\n    // attach\n    socket?.on(\"unauthorized\", listener);\n    // detatch\n    return () => {\n      socket?.off(\"unauthorized\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen chatData event\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const payload = res.data as ChatData;\n      const groupArr = payload.groupData;\n      const contactArr = payload.contactData;\n      const userArr = payload.userData;\n      dispatch({ type: \"CLEAR_CHAT_DATA\" });\n      dispatch({ type: \"SET_USER\", payload: payload.user });\n      if (groupArr.length) {\n        for (const group of groupArr) {\n          socket?.emit(\"joinGroupSocket\", {\n            groupId: group.groupId,\n          });\n          dispatch({ type: \"SET_GROUP_GATHER\", payload: group });\n        }\n      }\n      if (contactArr.length) {\n        for (const contact of contactArr) {\n          socket?.emit(\"joinPrivateSocket\", {\n            contactId: contact.userId,\n          });\n          dispatch({ type: \"SET_CONTACT_GATHER\", payload: contact });\n        }\n      }\n      dispatch({ type: \"SET_OPERATORS\", payload: payload.operatorData });\n      if (userArr.length) {\n        for (const user_ of userArr) {\n          dispatch({ type: \"SET_USER_GATHER\", payload: user_ });\n        }\n      }\n      dispatch({ type: \"UPDATE_ACTIVE_ROOM\" });\n      dispatch({type: \"SET_CONFERENCE\", payload: payload.conferenceData})\n    };\n    socket?.on(\"chatData\", listener);\n    return () => {\n      socket?.off(\"chatData\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen user online\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: \"USER_ONLINE\", payload: res.data as number });\n    };\n    socket?.on(\"userOnline\", listener);\n    return () => {\n      socket?.off(\"userOnline\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen user offline\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: \"USER_OFFLINE\", payload: res.data as number });\n    };\n    socket?.on(\"userOffline\", listener);\n    return () => {\n      socket?.off(\"userOffline\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen private socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      console.log(\"Успешно вошел в приватный чат\");\n    };\n    socket?.on(\"joinPrivateSocket\", listener);\n    return () => {\n      socket?.off(\"joinPrivateSocket\", listener);\n    };\n  }, [socket?.id]);\n\n  // listen group socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as JoinGroup;\n      const newUser: Contact = data.user;\n      newUser.online = 1;\n      const { group } = data;\n      const groupObj = state.groupGather[group.groupId];\n      // Информация о присоединении к группе новых пользователей\n      if (\n        groupObj &&\n        !groupObj.members?.find((member) => member.userId === newUser.userId)\n      ) {\n        newUser.isManager = 0;\n        groupObj.members?.push(newUser);\n        // Vue.prototype.$message.info(res.msg);\n      }\n      dispatch({ type: \"SET_USER_GATHER\", payload: newUser });\n    };\n    socket?.on(\"joinGroupSocket\", listener);\n    return () => {\n      socket?.off(\"joinGroupSocket\", listener);\n    };\n  }, [socket?.id, state.groupGather]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMessage;\n      dispatch({ type: \"ADD_GROUP_MESSAGE\", payload: data });\n      const { activeRoom } = state;\n      if (\n        activeRoom &&\n        (activeRoom as Group).groupId === data.groupId &&\n        data.userId !== state.user.userId\n      ) {\n        socket?.emit(\"markAsRead\", {\n          groupId: data.groupId,\n          _id: data._id,\n        });\n      }\n    };\n\n    socket?.on(\"groupMessage\", listener);\n    return () => {\n      socket?.off(\"groupMessage\", listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as PrivateMessage;\n      if (\n        data.contactId === state.user.userId ||\n        data.userId === state.user.userId\n      ) {\n        dispatch({\n          type: \"ADD_PRIVATE_MESSAGE\",\n          payload: data,\n        });\n\n        // если есть активная комната и это приватная комната (!groupId && userId) с отправителем сообщения (userId)\n        if (\n          state.activeRoom &&\n          !(state.activeRoom as Group).groupId &&\n          state.activeRoom?.userId === data.userId\n        ) {\n          socket?.emit(\"markAsRead\", {\n            contactId: data.userId,\n            _id: data._id,\n          });\n        }\n      }\n    };\n\n    socket?.on(\"privateMessage\", listener);\n    return () => {\n      socket?.off(\"privateMessage\", listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      if (timer) clearTimeout(timer);\n      dispatch({ type: \"SET_TYPING\", payload: res.data as SetTyping });\n      timer = setTimeout(() => {\n        dispatch({ type: \"SET_TYPING\", payload: null });\n      }, 1000);\n    };\n    socket?.on(\"typing\", listener);\n    return () => {\n      if (timer) clearTimeout(timer);\n      socket?.off(\"typing\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      if (data.userId === state.user.userId) {\n        if (data.groupId) {\n          dispatch({\n            type: \"LOSE_GROUP_UNREAD_GATHER\",\n            payload: data.groupId,\n          });\n        } else {\n          dispatch({\n            type: \"LOSE_CONTACT_UNREAD_GATHER\",\n            payload: data.contactId,\n          });\n        }\n      } else {\n        if (data.contactId)\n          dispatch({\n            type: \"MARK_PRIVATE_MESSAGES_READ\",\n            payload: data.userId,\n          });\n      }\n    };\n    socket?.on(\"markAsRead\", listener);\n    return () => {\n      socket?.off(\"markAsRead\", listener);\n    };\n  }, [socket?.id, state.user.userId]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      dispatch({ type: \"REVOKE_MESSAGE\", payload: data });\n    };\n    socket?.on(\"revokeMessage\", listener);\n    return () => {\n      socket?.off(\"revokeMessage\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({ type: \"SET_GROUP_GATHER\", payload: res.data as Group });\n    };\n    socket?.on(\"addGroup\", listener);\n    return () => {\n      socket?.off(\"addGroup\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: \"SET_CONTACT_GATHER\", payload: data });\n      dispatch({ type: \"SET_USER_GATHER\", payload: data });\n      socket?.emit(\"joinPrivateSocket\", {\n        contactId: data.userId,\n      });\n    };\n    socket?.on(\"addContact\", listener);\n    return () => {\n      socket?.off(\"addContact\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMap;\n      if (data.userId === state.user.userId) {\n        // если удаляем себя из группы\n        dispatch({ type: \"DEL_GROUP\", payload: data.groupId });\n      } else {\n        dispatch({ type: \"DEL_GROUP_MEMBER\", payload: data });\n      }\n    };\n    socket?.on(\"deleteGroup\", listener);\n    return () => {\n      socket?.off(\"deleteGroup\", listener);\n    };\n  }, [socket?.id, state.user]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: \"DEL_CONTACT\", payload: data });\n    };\n    socket?.on(\"deleteContact\", listener);\n    return () => {\n      socket?.off(\"deleteContact\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as Group;\n      dispatch({ type: \"UPDATE_GROUP_INFO\", payload: data });\n    };\n    socket?.on(\"updateGroupInfo\", listener);\n    return () => {\n      socket?.off(\"updateGroupInfo\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const data = res.data as User;\n      dispatch({ type: \"UPDATE_USER_INFO\", payload: data });\n    };\n    socket?.on(\"updateUserInfo\", listener);\n    return () => {\n      socket?.off(\"updateUserInfo\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      const { group, user: newUser } = res.data as JoinGroup;\n\n      if (!state.groupGather[group.groupId]) {\n        console.log(\"joined to a new group\");\n        // Если группы еще у нас нет, то получаем информацию о пользователях в группе\n        socket?.emit(\"chatData\");\n      } else if (newUser.userId !== state.user.userId) {\n        // Новые пользователи присоединяются к группе\n        dispatch({\n          type: \"ADD_GROUP_MEMBER\",\n          payload: {\n            groupId: group.groupId,\n            members: [newUser],\n          },\n        });\n      }\n    };\n    socket?.on(\"joinGroup\", listener);\n    return () => {\n      socket?.off(\"joinGroup\", listener);\n    };\n  }, [socket?.id, state.user, state.groupGather]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({ type: \"SET_CONFERENCE\", payload: res.data as ConferenceData });\n    };\n    socket?.on(\"startConference\", listener);\n    return () => {\n      socket?.off(\"startConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"PAUSE_CONFERENCE\",\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on(\"pauseConference\", listener);\n    return () => {\n      socket?.off(\"pauseConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"STOP_CONFERENCE\",\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on(\"stopConference\", listener);\n    return () => {\n      socket?.off(\"stopConference\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n    };\n    socket?.on(\"addOperator\", listener);\n    return () => {\n      socket?.off(\"addOperator\", listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: \"SET_ERROR\", payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: \"SET_ACTIVE_ROOM\",\n        payload: res.data as SetActiveRoom,\n      });\n    };\n    socket?.on(\"setActiveRoom\", listener);\n    return () => {\n      socket?.off(\"setActiveRoom\", listener);\n    };\n  }, [socket?.id]);\n\n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n","import * as React from \"react\";\nimport { Container, Box, Grid, Snackbar, useMediaQuery } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Alert } from \"@mui/material\";\nimport { Room, RoomList, Conference } from \"../components\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { RestContext } from \"../context/RestContext\";\nimport { SocketContext } from \"../context/SocketContext\";\nimport {\n  ChatPa,\n  Group,\n  Contact,\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  ConferenceData\n} from \"../types\";\nimport { getParam, isEmpty, allMessCount } from \"../utils/common\";\nimport ConferenceCall from \"../components/ConferenceCall\";\n\n// Отключили проигрыш звука\n// const getRingAudio = (): HTMLAudioElement => {\n//   const audio = new Audio(\n//     process.env.PUBLIC_URL + '/audio/ring-in.ogg',\n//   );\n//   audio.loop = true;\n//   return audio;\n// };\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    minWidth: 640,\n    minHeight: 470,\n    height: \"100%\",\n    padding: 0,\n    [theme.breakpoints.down(\"sm\")]: {\n      height: `calc(100vh - ${theme.spacing(8)})`,\n      minWidth: \"auto\",\n      minHeight: \"auto\",\n      overflow: \"hidden\"\n    }\n  },\n  innerBox: {\n    height: \"100%\",\n    width: \"100%\",\n    margin: 0,\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: 0\n    }\n  },\n  innerGrid: {\n    height: \"100%\",\n    width: \"100%\"\n  }\n}));\n\nexport const ChatPage: React.FC<ChatPa> = ({\n  activeGroupId,\n  activeChatUserId\n}: ChatPa) => {\n  const classes = useStyles();\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down(\"sm\")\n  );\n\n  const { state, dispatch } = React.useContext(ChatContext);\n  const { socket } = React.useContext(SocketContext);\n\n  const {\n    apiUrl,\n    pageSize,\n    getPrivateMessages,\n    getGroupMessages,\n    getUserByMmk\n  } = React.useContext(RestContext);\n\n  // const [ringAudio] = React.useState(getRingAudio());\n\n  const onExitActiveRoom = React.useCallback(() => {\n    dispatch({\n      type: \"SET_ACTIVE_ROOM\",\n      payload: { ifNotExists: false }\n    });\n  }, [dispatch]);\n\n  const onNeedMoreMessages = React.useCallback(\n    async (chat: ChatRoom) => {\n      if ((chat as Group).groupId) await getGroupMessages(chat as Group);\n      else await getPrivateMessages(chat as Contact);\n    },\n    [getPrivateMessages, getGroupMessages]\n  );\n\n  const onMessageDelete = React.useCallback(\n    (chat: ChatRoom, message: ChatMessage) => {\n      socket?.emit(\"revokeMessage\", {\n        groupId: (chat as Group).groupId, // Идентификатор группы\n        contactId: chat.userId, // Идентификатор контакта\n        _id: message._id // Идентификатор удаленного сообщения\n      });\n    },\n    [socket?.id]\n  );\n\n  const onTyping = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit(\"typing\", {\n        groupId: (chat as Group)?.groupId,\n        contactId: chat?.userId\n      });\n    },\n    [socket?.id]\n  );\n\n  const onSendMessage = React.useCallback(\n    (chat: ChatRoom, data: SendMessage) => {\n      if ((chat as Group).groupId) {\n        socket?.emit(\"groupMessage\", {\n          groupId: (chat as Group)?.groupId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size\n        });\n      } else {\n        socket?.emit(\"privateMessage\", {\n          contactId: chat?.userId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size\n        });\n      }\n    },\n    [socket?.id]\n  );\n\n  const onChangeChat = React.useCallback(\n    (chat: ChatRoom) => {\n      dispatch({\n        type: \"SET_ACTIVE_ROOM\",\n        payload: {\n          groupId: (chat as Group)?.groupId,\n          contactId: chat?.userId,\n          ifNotExists: false\n        }\n      });\n    },\n    [socket?.id, dispatch]\n  );\n\n  const onEnterRoom = React.useCallback(\n    (chat: ChatRoom) => {\n      if (!chat.messages || chat.messages.length === 0) return;\n      if ((chat as Group).groupId) {\n        socket?.emit(\"markAsRead\", {\n          groupId: (chat as Group).groupId,\n          _id: chat.messages[chat.messages.length - 1]._id\n        });\n      } else {\n        socket?.emit(\"markAsRead\", {\n          contactId: chat.userId,\n          _id: chat.messages[chat.messages.length - 1]._id\n        });\n      }\n    },\n    [socket?.id]\n  );\n\n  const onVideoCall = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit(\"startConference\", {\n        groupId: (chat as Group).groupId,\n        contactId: chat.userId\n      });\n    },\n    [socket?.id]\n  );\n\n  const onVideoEnd = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit(\"stopConference\", {\n          id: conference?.id\n        });\n    },\n    [socket?.id]\n  );\n\n  const onConferencePause = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit(\"pauseConference\", {\n          id: conference.id\n        });\n    },\n    [socket?.id]\n  );\n\n  const onConferenceCallAccept = React.useCallback(\n    (conference: ConferenceData) => {\n      // отправляем resumeConference чтобы возобновить запись\n      if (conference?.id != null)\n        socket?.emit(\"resumeConference\", {\n          id: conference.id\n        });\n      dispatch({ type: \"JOIN_CONFERENCE\", payload: conference });\n    },\n    [socket?.id, dispatch]\n  );\n\n  const onOperatorAdd = React.useCallback(\n    (group: Group, operator: Contact) => {\n      socket?.emit(\"addOperator\", {\n        groupId: group.groupId,\n        operatorId: operator.userId\n      });\n    },\n    [socket?.id]\n  );\n\n  const onLeaveGroup = React.useCallback(\n    (group: Group) => {\n      socket?.emit(\"deleteGroup\", {\n        groupId: group.groupId\n      });\n    },\n    [socket?.id]\n  );\n\n  const handleError = React.useCallback(() => {\n    dispatch({ type: \"SET_ERROR\" });\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    if (activeChatUserId != null && !isEmpty(state.contactGather)) {\n      const Chat = Object.values(state.contactGather).find(\n        item => item.userId === activeChatUserId\n      );\n      onChangeChat(Chat);\n      onEnterRoom(Chat);\n    }\n\n    const mmkId = getParam(\"mmk\");\n    const guid = getParam(\"guid\");\n    if ((mmkId != null || guid != null) && !isEmpty(state.contactGather)) {\n      //console.log(\"mmkId\", mmkId);\n      const changeChatByMmkId = async () => {\n        const userId = await getUserByMmk(mmkId, guid);\n        console.log(\"userId\", userId);\n        if (userId != null) {\n          const Chat = Object.values(state.contactGather).find(\n            item => item.userId === userId\n          );\n          onChangeChat(Chat);\n          onEnterRoom(Chat);\n        }\n      };\n      changeChatByMmkId();\n    }\n  }, [state.contactGather]);\n\n  React.useEffect(() => {\n    if (activeGroupId != null && !isEmpty(state.groupGather)) {\n      const onlyChat = Object.values(state.groupGather).find(\n        item => item.groupId === activeGroupId\n      );\n\n      if (!isEmpty(onlyChat)) {\n        onChangeChat(onlyChat);\n        onEnterRoom(onlyChat);\n      }\n    }\n  }, [state.groupGather]);\n\n  // Отключили проигрыш звука\n  // React.useEffect(() => {\n  //   if (\n  //     state.conference.data?.id &&\n  //     state.conference.ringPlayed &&\n  //     !state.conference.joined\n  //   )\n  //     ringAudio.play();\n  //   else ringAudio.pause();\n  // }, [state.conference.data?.id, state.conference.ringPlayed]);\n\n  const renderRoom = state.activeRoom != null && (\n    <Room\n      apiUrl={apiUrl}\n      user={state.user}\n      users={state.userGather}\n      operators={state.operators}\n      chat={state.activeRoom}\n      typing={state.typing}\n      conference={state.conference.data}\n      conferenceJoined={state.conference.joined}\n      loading={state.loading}\n      pageSize={pageSize}\n      onExitRoom={onExitActiveRoom}\n      onEnterRoom={onEnterRoom}\n      onNeedMoreMessages={onNeedMoreMessages}\n      onMeesageDelete={onMessageDelete}\n      onTyping={onTyping}\n      onSendMessage={onSendMessage}\n      onVideoCall={onVideoCall}\n      onVideoEnd={onVideoEnd}\n      onConferencePause={onConferencePause}\n      onOperatorAdd={onOperatorAdd}\n      onLeaveGroup={onLeaveGroup}\n    />\n  );\n\n  const GetRoomList = () => (\n    <RoomList\n      apiUrl={apiUrl}\n      user={state.user}\n      activeRoom={state.activeRoom}\n      groups={Object.values(state.groupGather)}\n      contacts={Object.values(state.contactGather)}\n      typing={state.typing}\n      onChangeChat={onChangeChat}\n    />\n  );\n\n  const GetConferenceCall = () =>\n    state.conference.data && (\n      <ConferenceCall\n        apiUrl={apiUrl}\n        contact={\n          state.contactGather[\n            state.user.userId === state.conference.data.userId\n              ? state.conference.data.contactId\n              : state.conference.data.userId\n          ]\n        }\n        conference={state.conference.data}\n        onAccept={onConferenceCallAccept}\n      />\n    );\n\n  const GetConference = () => (\n    <Conference\n      conference={state.conference.data}\n      onClose={onConferencePause}\n    />\n  );\n\n  // const getMessCount = (data: GroupGather) => {\n  //   const messages = ;\n  //   return messages.reduce((a: number, b: number) => a + b, 0);\n  // };\n\n  const depsContats = state.conference.data?.id\n    ? [\n        state.conference.joined,\n        state.conference.data?.id,\n        state.conference.data?.contactId,\n        state.activeRoom?.groupId,\n        state.activeRoom?.userId\n      ]\n    : [\n        state.activeRoom,\n        allMessCount(state.groupGather),\n        allMessCount(state.contactGather)\n      ];\n\n  const Contacts = React.useMemo(\n    () =>\n      state.conference.data?.id ? (\n        state.conference.joined ? (\n          <GetConference />\n        ) : (\n          <GetConferenceCall />\n        )\n      ) : (\n        <GetRoomList />\n      ),\n    depsContats\n  );\n\n  console.log(\"chat state\", state);\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.root}>\n      <Box className={classes.innerBox}>\n        {isMobile ? (\n          <>\n            {Contacts}\n            {renderRoom}\n          </>\n        ) : (\n          <Grid container spacing={1} className={classes.innerGrid}>\n            <Grid item sm={4} className={classes.innerGrid}>\n              {Contacts}\n            </Grid>\n\n            <Grid item sm={8} className={classes.innerGrid}>\n              {renderRoom}\n            </Grid>\n          </Grid>\n        )}\n      </Box>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={!!state.error}\n        autoHideDuration={6000}\n        onClose={handleError}\n      >\n        <Alert onClose={handleError} severity=\"error\">\n          {state.error}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport io, { Socket } from \"socket.io-client\";\n\nexport const useSocket = (\n  url: string,\n  path: string,\n  accessToken: string\n): {\n  socket: Socket | null;\n  online: boolean;\n  connectSocket: () => void;\n  disconnectSocket: () => void;\n} => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n\n  const connectSocket = useCallback(() => {\n    // console.log(\"do connect\");\n    const socketTemp = io(url, {\n      path,\n      reconnection: true,\n      extraHeaders: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    setSocket(socketTemp);\n  }, [url, path, accessToken]);\n\n  const disconnectSocket = useCallback(() => {\n    // console.log(\"do disconnect\");\n    socket?.disconnect();\n    setSocket(null);\n  }, [socket]);\n\n  const [online, setOnline] = useState<boolean>(false);\n\n  useEffect(() => {\n    setOnline(socket?.connected ? true : false);\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"connect\", () => {\n      // console.log(\"connected\");\n      setOnline(true);\n      socket.emit(\"chatData\");\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"disconnect\", () => {\n      // console.log(\"disconnected\");\n      setOnline(false);\n    });\n  }, [socket]);\n\n  return {\n    socket,\n    online,\n    disconnectSocket,\n    connectSocket,\n  };\n};\n","import en from \"./en.json\";\nimport fr from \"./fr.json\";\nimport ru from \"./ru.json\";\n\nexport const chatResources = {\n  ru,\n  en,\n  fr,\n};\n"],"names":["MessageStatus","Role","ContextMenuType","useStyles","makeStyles","createStyles","item","cursor","Emoji","props","classes","emojiClick","e","onSelect","target","innerText","Item","itemProps","React","Box","m","component","onClick","className","emoji","display","flexDirection","theme","typingText","paddingLeft","spacing","typingDot","verticalAlign","width","height","margin","background","palette","primary","main","borderRadius","opacity","animation","&:nth-child(1)","animationDelay","&:nth-child(2)","&:nth-child(3)","@keyframes loadingFade","0%","50%","100%","Typing","createElement","Typography","color","variant","message","input","flex","inputUpload","attachmentIcon","fill","stroke","Entry","chat","t","useTranslation","_React$useState","useState","empjiEl","setEmojiEl","_React$useState2","text","setText","_React$useState3","time","lastTyping","setLastTyping","handleEmojiClose","sendMessage","data","onSendMessage","submit","trim","length","messageType","emojiOpen","Boolean","enojiId","undefined","TextField","placeholder","autoFocus","InputProps","disableUnderline","startAdornment","InputAdornment","position","accept","id","type","onChange","event","currentTarget","files","file","includes","image","Image","url","window","URL","webkitURL","src","createObjectURL","onload","imageSize","fileName","name","size","htmlFor","IconButton","aria-label","SvgIcon","d","strokeWidth","strokeLinecap","strokeLinejoin","aria-describedby","InsertEmoticon","endAdornment","edge","preventDefault","Send","value","_ref","onTyping","Date","now","onKeyPress","key","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","isEmpty","Object","keys","formatTime","moment","add","startOf","isAfter","format","getChatId","groupId","userId","getChatName","username","allMessCount","chats","values","map","it","messages","reduce","a","b","chatRoomComparer","hasMessagesA","Array","isArray","hasMessagesB","cdate","getTime","getParam","param","QueryString","location","search","URLSearchParams","get","fileIcon","fontSize","fileBody","File","meta","content","split","date","getFileMeta","_splitFileName","idx","lastIndexOf","ext","slice","splitFileName","Avatar","toUpperCase","_mediaContent","mediaContent","maxWidth","maxHeight","breakpoints","down","Video","apiUrl","isConference","JSON","parse","visitId","controls","muted","viewerVisible","setViewerVisible","getImageMeta","Fragment","Viewer","zIndex","visible","changeable","images","MessageContent","_message","rootContact","padding","& span","float","secondary","& $message","backgroundColor","grey","borderTopRightRadius","borderBottomRightRadius","& $firstMessage","borderTopLeftRadius","marginTop","& $lastMessage","borderBottomLeftRadius","marginBottom","rootUser","paddingRight","justifyContent","contrastText","rootNotify","& > *","fontWeight","firstMessage","lastMessage","flexWrap","header","overflow","body","wordBreak","status","alignSelf","statusImage","marginRight","Message","owner","refOnLastMess","user","isGroupMessage","isUserFirst","isUserLast","ListItem","Alert","severity","ref","isRevoke","align","revokeUserName","isMine","onContextMenu","child","Link","underline","href","download","wrapMessage","Done","DoneAll","ContactStatus","isTyping","contact","online","star","ContactList","List","contacts","button","ListItemAvatar","alt","avatar","ListItemText","StarIcon","AddContact","_useTranslation","Dialog","aria-labelledby","DialogTitle","popover","pointerEvents","paper","avatarGroup","getGroupStatus","group","_group$members","members","onlineCount","sum","push","join","RoomHeader","typing","conference","conferenceJoined","operators","onVideoCall","onVideoEnd","onConferencePause","onOperatorAdd","onLeaveGroup","setAnchorEl","addOperatorOpen","setAddOperatorOpen","CardHeader","title","subheader","_group$members2","handlePopoverClose","GroupIcon","aria-owns","aria-haspopup","onMouseEnter","onMouseLeave","disableRestoreFocus","action","role","PersonAddIcon","operator","find","DeleteIcon","contactId","Button","startIcon","CallEndIcon","style","marginLeft","VideoCallIcon","root","minWidth","inline","messageListOuter","overflowY","scrollbarWidth","scrollbarColor","&::-webkit-scrollbar, & *::-webkit-scrollbar","&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb","border","&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus","&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active","&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover","&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner","messageList","roomHeader","roomProgress","flexAll","flexEnd","initialMenuState","mouseX","mouseY","canCopy","canDelete","initialScrollState","autoScroll","Room","users","loading","pageSize","scrollState","setScrollState","messageCount","useRef","refList","menuState","setMenuState","useEffect","onEnterRoom","useLayoutEffect","current","scrollIntoView","scrollTop","scrollHeight","onScroll","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","noMoreData","abrupt","onNeedMoreMessages","stop","_x","apply","arguments","handleCopy","navigator","clipboard","writeText","handleDelete","onMeesageDelete","Card","elevation","onExitRoom","ArrowBackIcon","CircularProgress","Divider","CardContent","inx","clientX","clientY","handleMenuPopup","Menu","keepMounted","anchorReference","anchorPosition","top","left","MenuItem","disabled","ListItemIcon","FileCopyIcon","whiteSpace","textOverflow","unread","TypingBadge","withStyles","badge","boxShadow","&::after","@keyframes ripple","transform","Badge","OnlineBadge","RoomListItem","roomName","overlap","contactAvatar","roomText","getMessageText","roomTime","selected","active","secondaryTypographyProps","unreadCount","Chip","label","searchField","listStyle","filterChats","filter","lowerFilter","toLowerCase","indexOf","sortChats","groups","roomArr","concat","sort","topChatId","localStorage","getItem","c","k","isTop","unshift","RoomList","setChats","fullWidth","activeRoom","onChangeChat","Conference","listener","_ref2","source","_ref$current","contentWindow","addEventListener","removeEventListener","allowFullScreen","allow","alignItems","pulse","&::before","footer","paddingTop","@keyframes pulse","ConferenceCall","onAccept","Paper","emptyUser","password","langCode","emptyChatState","tokenKey","token","groupGather","userGather","contactGather","initialContactId","joined","ringPlayed","error","getFreshActiveRoom","state","getActiveRoom","newActiveRoom","rooms","setUserOnline","newState","_extends","_i","_Object$values","member","index","findIndex","contactUnreadGather","predicate","groupUnreadGather","chatReducer","_extends2","payload","_extends3","updateActiveRoom","delGroup","delGroupMember","delContact","_extends4","ifNotExists","setActiveRoom","x","addGroupMessage","_newState$activeRoom","addPrivateMessage","userName","msg","_id","revokeMessage","info","notice","updateGroupInfo","updateUserInfo","isManager","addGroupMember","setConference","_state$conference$dat","pauseConference","_state$conference$dat2","stopConference","updatedValue","i","markPrivateMessagesRead","addPrivateMessages","userArr","_step","_iterator","_createForOfIteratorHelperLoose","done","addGroupMessages","setItem","setToken","removeItem","clearUser","ChatContext","createContext","dispatch","RestContext","SocketContext","_root","_innerBox","minHeight","innerBox","innerGrid","activeGroupId","activeChatUserId","isMobile","useMediaQuery","_React$useContext","socket","_React$useContext3","getPrivateMessages","getGroupMessages","getUserByMmk","onExitActiveRoom","onMessageDelete","emit","onConferenceCallAccept","operatorId","handleError","Chat","mmkId","guid","_ref3","_callee2","_Chat","_context2","sent","console","log","changeChatByMmkId","onlyChat","renderRoom","GetRoomList","GetConferenceCall","GetConference","depsContats","_state$conference$dat3","_state$activeRoom","_state$activeRoom2","Contacts","_state$conference$dat4","Container","Grid","container","sm","Snackbar","autoHideDuration","defLang","chatState","_React$useReducer","useReducer","Provider","children","baseURLApi","_useContext","useContext","fetch","axios","create","timeout","baseURL","headers","Cache-Control","Pragma","Authorization","withCredentials","_chat$messages","params","t0","finish","_chat$messages2","_x2","_ref4","_callee3","_context3","_x3","_x4","wsUrl","wsPath","_useSocket","path","accessToken","_useState","setSocket","connectSocket","socketTemp","io","reconnection","extraHeaders","disconnectSocket","disconnect","_useState2","setOnline","connected","on","useSocket","off","res","code","groupArr","groupData","contactArr","contactData","userData","_step2","_iterator2","operatorData","_step3","_iterator3","conferenceData","newUser","_groupObj$members2","groupObj","_groupObj$members","timer","clearTimeout","setTimeout","_res$data","ru","en","fr"],"mappings":"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"}