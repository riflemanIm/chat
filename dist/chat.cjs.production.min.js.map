{"version":3,"file":"chat.cjs.production.min.js","sources":["../src/types/index.ts","../src/components/Emoji.tsx","../src/components/Typing.tsx","../src/components/Entry.tsx","../src/components/ContactStatus.tsx","../src/utils/common.ts","../src/components/ContactList.tsx","../src/components/AddContact.tsx","../src/components/AlertDialog.tsx","../src/components/ConferenceTime.tsx","../src/hooks/useCounter.ts","../src/components/ConfirmDialogSlide.tsx","../src/components/ConferenceButton.tsx","../src/components/RoomHeader.tsx","../src/components/MessageContent/File.tsx","../src/components/MessageContent/Video.tsx","../src/components/MessageContent/Image.tsx","../src/components/MessageContent/index.tsx","../src/components/styles.ts","../src/components/Message.tsx","../src/context/ChatContext.tsx","../src/components/RoomMessageList.tsx","../src/components/Room.tsx","../src/components/RoomListItem.tsx","../src/components/RoomList.tsx","../src/components/Conference.tsx","../src/components/ConferenceCall.tsx","../src/context/RestContext.tsx","../src/context/SocketContext.tsx","../src/hooks/useSocket.ts","../src/components/CheckAudiVideoPerm.tsx","../src/components/Alert.tsx","../src/pages/chat.tsx","../src/translations/index.ts","../src/context/LanguageContext.tsx","../src/components/ChatIndex/index.tsx"],"sourcesContent":["export interface ChatProps {\n  activeGroupId?: number;\n  activeChatUserId?: number;\n  hideRooms?: boolean;\n  lang: 'ru' | 'en' | 'fr';\n  chatBaseURLApi: string;\n  chatWsUrl: string;\n  chatWsPath: string;\n  inModale?: boolean;\n  token: string;\n  refreshToken: string;\n}\nexport interface ChatPageProps {\n  activeGroupId?: number;\n  activeChatUserId?: number;\n  inModale?: boolean;\n  hideRooms?: boolean;\n}\n\n// Тип сообщения\nexport type MessageType =\n  | 'text'\n  | 'image'\n  | 'file'\n  | 'video'\n  | 'notify'\n  | 'video_conference';\n\nexport enum MessageStatus {\n  sent = 0,\n  read = 1,\n}\n\nexport enum Role {\n  Unknown = 0,\n  Client = 1,\n  Agent = 2,\n  Specialist = 3,\n  Operator = 4,\n}\n\nexport interface User {\n  userId: number;\n  username: string;\n  password: string;\n  avatar: string;\n  role?: Role;\n  online?: 1 | 0; // В сети\n  langCode?: string;\n}\n\n// Приватные сообщения\nexport interface PrivateMessage {\n  _id?: number;\n  userId: number;\n  contactId: number;\n  content: string;\n  messageType: MessageType;\n  status: MessageStatus;\n  cdate: string;\n  type?: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n}\n\n// Контакт\nexport interface Contact {\n  userId: number;\n  groupId?: number;\n  username: string;\n  avatar?: string;\n  role?: Role;\n  messages?: PrivateMessage[];\n  unreadCount?: number;\n  isTop?: boolean;\n  online?: 1 | 0;\n  isManager?: 1 | 0;\n  noMoreData?: boolean;\n}\nexport interface VisitData {\n  chatFrom: Date;\n  conferenceStatus: 'started' | 'finished' | 'none';\n  contactId: number;\n  duration: number;\n  plExamName: string;\n  planningId: number;\n  visitDate: Date;\n  visitId: number;\n}\n\n// Информация о друзьях\nexport interface ContactGather {\n  [userId: number]: Contact;\n}\n\n// Групповое сообщение\nexport interface GroupMessage {\n  _id?: number;\n  userId: number;\n  groupId: number;\n  content: string;\n  messageType: MessageType;\n  cdate: string;\n  isRevoke?: boolean;\n  revokeUserName?: string;\n  status?: MessageStatus;\n}\n\n// Группа\nexport interface Group {\n  groupId: number;\n  userId: number; // владелец\n  name: string;\n  notice: string;\n  messages?: GroupMessage[];\n  unreadCount?: number;\n  cdate: string;\n  isTop?: boolean;\n  members?: Contact[];\n  noMoreData?: boolean;\n}\n\n// Группы\nexport interface GroupGather {\n  [groupId: number]: Group;\n}\n\n// Ассоциации групп и пользователей\nexport interface GroupMap {\n  groupId: number;\n  userId: number;\n}\n\n// Ассоциации пользователей и друзей\nexport interface ContactMap {\n  contactId: number;\n  userId: number;\n}\n\nexport interface SendMessage {\n  message: string | File;\n  width?: number;\n  height?: number;\n  fileName?: string;\n  messageType: MessageType[0] | MessageType[1];\n  size?: number;\n}\n\n// Размер изображения\nexport interface ImageSize {\n  width: number;\n  height: number;\n}\n\n// Непрочитанные сообщения\nexport interface UnReadGather {\n  [key: string]: number;\n}\n\n// Получить сообщения постранично\nexport interface PagingParams {\n  groupId?: number;\n  userId?: number;\n  contactId?: number;\n  current: number;\n  pageSize: number;\n}\n\n// Постраничный ответ для групповых сообщений\nexport interface PagingResponse {\n  // messageArr: GroupMessage[]; - fix on messages\n  messages: GroupMessage[];\n  userArr: User[];\n}\n\nexport interface ContactUserMap {\n  contactId: number;\n  contactUserName: string;\n}\n\n// информация о том, что контакт печатает текст\nexport interface SetTyping {\n  userId?: number;\n  groupId?: number;\n  contactId?: number;\n}\n\n// Операция с сообщением\nexport interface MessageOperation {\n  userId?: number;\n  username: string;\n  groupId?: number;\n  contactId?: number;\n  _id: number;\n}\n\n// Данные конференции\nexport interface ConferenceData {\n  userId: number;\n  contactId: number;\n  id: string;\n  url?: string;\n  serverAddress?: string;\n  user?: string;\n  password?: string;\n  currentDate?: Date;\n  finishDate?: Date;\n}\n\n// Данные чата\nexport interface ChatData {\n  user: User;\n  groupData: Group[];\n  contactData: Contact[];\n  userData: User[];\n  operatorData: Contact[];\n  conferenceData: ConferenceData;\n  visitData: VisitData[];\n}\n\nexport interface GroupMember {\n  groupId: number;\n  members: Contact[];\n}\n\nexport interface AddPrivateMessages {\n  pageSize: number;\n  contactId: number;\n  messages: PrivateMessage[];\n}\n\nexport interface AddGroupMessages extends PagingResponse {\n  pageSize: number;\n  groupId: number;\n}\n\nexport interface SetActiveRoom {\n  groupId?: number;\n  contactId?: number;\n}\n\nexport interface JoinGroup {\n  group: Group;\n  user: Contact;\n}\n\nexport interface SetUser {\n  user: User;\n  token: string;\n}\n\nexport type ChatRoom = Group | Contact;\nexport type ChatMessage = GroupMessage | PrivateMessage;\n\n// Операции контекстного меню\nexport enum ContextMenuType {\n  COPY = 'COPY', // Скопировать\n  REVOKE = 'REVOKE', // Удалить сообщение\n  TOP_REVERT = 'TOP_REVERT', // Открепить\n  TOP = 'TOP', // Закрепить\n  READ = 'READ', // Прочесть всё\n  DELETE = 'DELETE', // Удалить\n}\n","import * as React from \"react\";\nimport { Box,  } from \"@mui/material\";\nimport { makeStyles,createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    item: {\n      cursor: \"pointer\",\n    },\n  })\n);\n\ntype EmojiProps = {\n  onSelect?: (emoji: string) => void;\n};\n\ntype EmojiItemProps = {\n  emoji: string;\n};\n\nconst Emoji: React.FC<EmojiProps> = (props: EmojiProps) => {\n  const classes = useStyles();\n  const emojiClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (props.onSelect) {\n      props.onSelect((e.target as HTMLDivElement).innerText);\n    }\n  };\n\n  const Item = (itemProps: EmojiItemProps) => {\n    return (\n      <Box\n        m={0.5}\n        component=\"span\"\n        onClick={emojiClick}\n        className={classes.item}\n      >\n        {itemProps.emoji}\n      </Box>\n    );\n  };\n\n  return (\n    <Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😃\" />\n        <Item emoji=\"😁\" />\n        <Item emoji=\"😂\" />\n        <Item emoji=\"😄\" />\n        <Item emoji=\"😅\" />\n        <Item emoji=\"😆\" />\n        <Item emoji=\"😇\" />\n        <Item emoji=\"😈\" />\n        <Item emoji=\"😉\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😊\" />\n        <Item emoji=\"😋\" />\n        <Item emoji=\"😌\" />\n        <Item emoji=\"😍\" />\n        <Item emoji=\"😎\" />\n        <Item emoji=\"😏\" />\n        <Item emoji=\"😐\" />\n        <Item emoji=\"😒\" />\n        <Item emoji=\"😓\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"❓\" />\n        <Item emoji=\"😕\" />\n        <Item emoji=\"😖\" />\n        <Item emoji=\"😗\" />\n        <Item emoji=\"😘\" />\n        <Item emoji=\"😙\" />\n        <Item emoji=\"😚\" />\n        <Item emoji=\"😜\" />\n        <Item emoji=\"😝\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😞\" />\n        <Item emoji=\"😟\" />\n        <Item emoji=\"😠\" />\n        <Item emoji=\"😡\" />\n        <Item emoji=\"😢\" />\n        <Item emoji=\"😣\" />\n        <Item emoji=\"😤\" />\n        <Item emoji=\"😥\" />\n        <Item emoji=\"😦\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😨\" />\n        <Item emoji=\"😩\" />\n        <Item emoji=\"😪\" />\n        <Item emoji=\"😫\" />\n        <Item emoji=\"😬\" />\n        <Item emoji=\"😭\" />\n        <Item emoji=\"😮\" />\n        <Item emoji=\"😯\" />\n        <Item emoji=\"😰\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"😲\" />\n        <Item emoji=\"😳\" />\n        <Item emoji=\"😴\" />\n        <Item emoji=\"😵\" />\n        <Item emoji=\"🧐\" />\n        <Item emoji=\"😷\" />\n        <Item emoji=\"🙁\" />\n        <Item emoji=\"🙂\" />\n        <Item emoji=\"🙃\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤐\" />\n        <Item emoji=\"🤑\" />\n        <Item emoji=\"🤒\" />\n        <Item emoji=\"🤓\" />\n        <Item emoji=\"🤔\" />\n        <Item emoji=\"🤕\" />\n        <Item emoji=\"🤠\" />\n        <Item emoji=\"🤡\" />\n        <Item emoji=\"🤢\" />\n      </Box>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <Item emoji=\"🤤\" />\n        <Item emoji=\"🤥\" />\n        <Item emoji=\"🤧\" />\n        <Item emoji=\"🤨\" />\n        <Item emoji=\"🤩\" />\n        <Item emoji=\"🤪\" />\n        <Item emoji=\"🤫\" />\n        <Item emoji=\"🤬\" />\n        <Item emoji=\"🤭\" />\n      </Box>\n    </Box>\n  );\n};\nexport default Emoji;\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    typingText: {\n      paddingLeft: theme.spacing(0.5),\n    },\n    typingDot: {\n      display: \"inline-block\",\n      verticalAlign: \"middle\",\n      width: 4,\n      height: 4,\n      margin: \"0px 2px\",\n      background: theme.palette.primary.main,\n      borderRadius: \"50%\",\n      opacity: \"0\",\n      animation: \"$loadingFade 1s infinite\",\n      \"&:nth-child(1)\": {\n        animationDelay: \"0s\",\n      },\n      \"&:nth-child(2)\": {\n        animationDelay: \"0.2s\",\n      },\n      \"&:nth-child(3)\": {\n        animationDelay: \"0.4s\",\n      },\n    },\n    \"@keyframes loadingFade\": {\n      \"0%\": {\n        opacity: 0,\n      },\n      \"50%\": {\n        opacity: 0.8,\n      },\n      \"100%\": {\n        opacity: 0,\n      },\n    },\n  })\n);\n\ntype TypingProps = {\n  message: string;\n};\n\nconst Typing: React.FC<TypingProps> = (props: TypingProps) => {\n  const classes = useStyles();\n  return (\n    <Typography color=\"primary\" variant=\"body2\" component=\"span\">\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingDot} />\n      <span className={classes.typingText}>{props.message}</span>\n    </Typography>\n  );\n};\nexport default Typing;\n","import React, { ChangeEvent, KeyboardEvent } from \"react\";\nimport {\n  Box,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Popover,\n  SvgIcon\n} from \"@mui/material\";\n\nimport { makeStyles } from \"@mui/styles\";\nimport { Send, InsertEmoticon } from \"@mui/icons-material\";\nimport Emoji from \"./Emoji\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatRoom, ImageSize, SendMessage } from \"../types\";\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    flex: \"auto\"\n  },\n  inputUpload: {\n    display: \"none\"\n  },\n  attachmentIcon: {\n    fill: \"none\",\n    stroke: \"currentColor\"\n  }\n}));\n\ntype EntryProps = {\n  chat: ChatRoom | null;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n};\n\n/**\n * Рассчитать пропорции изображения\n */\nconst getImageSize = (data: ImageSize) => {\n  let { width, height } = data;\n  if (width > 335 || height > 335) {\n    if (width > height) {\n      height = 335 * (height / width);\n      width = 335;\n    } else {\n      width = 335 * (width / height);\n      height = 335;\n    }\n  }\n  return {\n    width,\n    height\n  };\n};\n\nconst Entry: React.FC<EntryProps> = (props: EntryProps) => {\n  const classes = useStyles();\n  const { chat } = props;\n\n  const { t } = useTranslation();\n\n  const [empjiEl, setEmojiEl] = React.useState<HTMLButtonElement | null>(null);\n  const [text, setText] = React.useState(\"\");\n  const [lastTyping, setLastTyping] = React.useState({\n    chat,\n    time: 0\n  });\n\n  const handleEmojiClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setEmojiEl(event.currentTarget);\n  };\n\n  const handleEmojiClose = () => {\n    setEmojiEl(null);\n  };\n\n  const emojiSelect = (emoji: string) => {\n    setText(`${text}${emoji}`);\n    handleEmojiClose();\n  };\n\n  const onChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    setText(target.value);\n    if (\n      chat &&\n      props.onTyping &&\n      (lastTyping.chat !== chat || Date.now() - lastTyping.time >= 500)\n    ) {\n      setLastTyping({\n        chat,\n        time: Date.now()\n      });\n      props.onTyping(chat);\n    }\n  };\n\n  const sendMessage = (data: SendMessage) => {\n    if (chat && props.onSendMessage) props.onSendMessage(chat, data);\n  };\n\n  const submit = () => {\n    if (text.trim().length === 0) {\n      return;\n    }\n\n    sendMessage({ message: text, messageType: \"text\" });\n    setText(\"\");\n  };\n\n  const onSubmitClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    submit();\n  };\n\n  const onKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      submit();\n    }\n  };\n\n  const onSubmitFile = (event: React.FormEvent<HTMLInputElement>) => {\n    if (!event.currentTarget.files) return;\n    const file = event.currentTarget.files[0];\n    let messageType: string;\n    if (file.type.includes(\"image\")) {\n      messageType = \"image\";\n    } else if (file.type.includes(\"video\")) {\n      messageType = \"video\";\n    } else {\n      messageType = \"file\";\n    }\n    if (messageType === \"image\") {\n      const image = new Image();\n      const url = window.URL || window.webkitURL;\n      image.src = url.createObjectURL(file);\n      image.onload = () => {\n        const imageSize: ImageSize = getImageSize({\n          width: image.width,\n          height: image.height\n        });\n        sendMessage({\n          message: file,\n          width: imageSize.width,\n          height: imageSize.height,\n          messageType\n        });\n      };\n    } else {\n      sendMessage({\n        message: file,\n        messageType,\n        fileName: file.name,\n        size: file.size\n      });\n    }\n  };\n\n  const emojiOpen = Boolean(empjiEl);\n  const enojiId = emojiOpen ? \"simple-popover\" : undefined;\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <TextField\n        className={classes.input}\n        placeholder={t(\"CHAT.INPUT_MESSAGE\") || \"\"}\n        autoFocus={true}\n        variant=\"standard\"\n        InputProps={{\n          disableUnderline: true,\n          startAdornment: (\n            <InputAdornment position={\"start\"}>\n              <input\n                accept=\".pdf,.jpg,.jpeg,.bmp,.gif,.png,application/pdf,image/jpeg,image/bmp,image/gif,image/png\"\n                className={classes.inputUpload}\n                id=\"icon-button-file\"\n                type=\"file\"\n                onChange={onSubmitFile}\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload\"\n                  component=\"span\"\n                  size=\"small\"\n                >\n                  <SvgIcon fill=\"none\" className={classes.attachmentIcon}>\n                    <path\n                      d=\"M16.768 13.5767L11.6961 18.6486C9.35886 20.9859 5.56937 20.9859 3.23208 18.6486V18.6486C0.894789 16.3114 0.894789 12.5219 3.23208 10.1846L10.4479 2.96872C12.0875 1.32914 14.7458 1.32914 16.3854 2.96873V2.96873C18.025 4.60831 18.025 7.26659 16.3854 8.90617L9.16515 16.1264C8.23032 17.0612 6.71466 17.0612 5.77982 16.1264V16.1264C4.84499 15.1916 4.84499 13.6759 5.77982 12.7411L10.8896 7.63131\"\n                      strokeWidth=\"1.6\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </SvgIcon>\n                </IconButton>\n              </label>{\" \"}\n              <IconButton\n                aria-describedby={enojiId}\n                onClick={handleEmojiClick}\n                color=\"primary\"\n                size=\"small\"\n              >\n                <InsertEmoticon />\n              </IconButton>\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={onSubmitClick}\n            >\n              <Send />\n            </IconButton>\n          )\n        }}\n        value={text}\n        onChange={onChange}\n        onKeyPress={onKeyPress}\n      />\n      <Popover\n        id={enojiId}\n        open={emojiOpen}\n        anchorEl={empjiEl}\n        onClose={handleEmojiClose}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n      >\n        <Emoji onSelect={emojiSelect} />\n      </Popover>\n    </Box>\n  );\n};\nexport default Entry;\n","import React from 'react';\nimport { Typography } from '@mui/material';\nimport Typing from './Typing';\nimport { useTranslation } from 'react-i18next';\nimport { Contact } from '../types';\n\ntype ContactStatusProps = {\n  contact: Contact;\n  isTyping: boolean;\n};\n\nconst ContactStatus: React.FC<ContactStatusProps> = (\n  props: ContactStatusProps,\n) => {\n  const { t } = useTranslation();\n\n  if (props.isTyping)\n    return <Typing message={t('CHAT.STATUS.TYPING')} />;\n  if (props.contact.online === 1)\n    return (\n      <Typography variant=\"body2\" color=\"primary\" component=\"span\">\n        {t('CHAT.STATUS.ONLINE')}\n      </Typography>\n    );\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"textSecondary\"\n      component=\"span\"\n    >\n      {t('CHAT.STATUS.OFFLINE')}\n    </Typography>\n  );\n};\n\nexport default ContactStatus;\n","import dayjs from 'dayjs';\nimport {\n  ChatRoom,\n  Contact,\n  ContactGather,\n  Group,\n  GroupGather,\n} from '../types';\n\nexport function isEmpty(value: unknown): boolean {\n  return (\n    value == null ||\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\n    (typeof value === 'string' && value.trim().length === 0)\n  );\n}\n\n// string contains string\nexport function isContainStr(str1: string, str2: string): boolean {\n  return str2.indexOf(str1) >= 0;\n}\n\n/**\n * check URL\n * @param text\n */\nexport function isUrl(text: string): boolean {\n  // parse url\n  const UrlReg = new RegExp(\n    /http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w- ./?%&=]*)?/,\n  );\n  return UrlReg.test(text);\n}\n\n/**\n * Формитирование времени сообщения\n * @param time\n */\nexport function formatTime(\n  time: Date | string | undefined,\n  format = 'DD.MM.YYYY HH:mm',\n) {\n  if (typeof time === 'undefined') return null;\n  if (typeof time === 'string') time = new Date(time);\n  // больше чем вчера\n  if (\n    dayjs()\n      .add(-1, 'days')\n      .startOf('day')\n      .isAfter(time)\n  ) {\n    return dayjs(time).format(format);\n  }\n  // вчера\n  if (\n    dayjs()\n      .startOf('day')\n      .isAfter(time)\n  ) {\n    return `Вчера в ${dayjs(time).format('HH:mm')}`;\n  }\n\n  return dayjs(time).format('HH:mm');\n}\n\n/**\n * Раскрыть содержимое\n * @param content - данные в строке\n */\nexport function getFileMeta(\n  content: string,\n): {\n  date: string;\n  userId: string;\n  size: string;\n  name: string;\n} {\n  // Формат  [date]$[userId]$[size]$[fileName]\n  // Например fileName = 1606980397047$1a01e20f-3780-4227-84b5-5c69ca766ee5$15.41KB$123.docx\n  const meta = content.split('$');\n  const [date, userId, size, name] = meta;\n  return {\n    date,\n    userId,\n    size,\n    name,\n  };\n}\n\nexport function getImageMeta(\n  content: string,\n): {\n  date: string;\n  userId: string;\n  width: string;\n  height: string;\n} {\n  // Формат [date]$[userId]$[width]$[height]$...\n  const meta = content.split('$');\n  const [date, userId, width, height] = meta;\n  return {\n    date,\n    userId,\n    width,\n    height,\n  };\n}\n\nexport function splitFileName(\n  name: string,\n): { name: string; ext: string } {\n  const idx = name.lastIndexOf('.');\n  if (idx === -1)\n    return {\n      name,\n      ext: '',\n    };\n  return {\n    name: name.slice(0, idx),\n    ext: name.slice(idx + 1),\n  };\n}\n\nexport const getChatId = (chat: ChatRoom | null): string | null => {\n  if (!chat) return null;\n  return (chat as Group).groupId\n    ? `group:${(chat as Group).groupId}`\n    : `user:${chat.userId}`;\n};\n\nexport const getChatName = (chat: ChatRoom): string => {\n  return (chat as Group).groupId\n    ? (chat as Group).name\n    : (chat as Contact).username;\n};\n\nexport const allMessCount = (chats: GroupGather | ContactGather) => {\n  return Object.values(chats)\n    .map(it => (it?.messages != null ? it?.messages.length : 0))\n    .reduce((a: number, b: number) => a + b, 0);\n};\n\nexport const chatRoomComparer = (\n  a: ChatRoom,\n  b: ChatRoom,\n): number => {\n  const hasMessagesA =\n    Array.isArray(a.messages) && a.messages.length > 0;\n  const hasMessagesB =\n    Array.isArray(b.messages) && b.messages.length > 0;\n  if (\n    hasMessagesA &&\n    hasMessagesB &&\n    b.messages != null &&\n    a.messages != null\n  ) {\n    // !!! if cdate === undefined !!!\n    const bb =\n      b.messages[b.messages.length - 1].cdate != null\n        ? new Date(b.messages[b.messages.length - 1].cdate).getTime()\n        : new Date().getTime();\n\n    const aa =\n      a.messages[a.messages.length - 1].cdate != null\n        ? new Date(a.messages[a.messages.length - 1].cdate).getTime()\n        : new Date().getTime() - 1;\n    const res = bb - aa;\n\n    //console.log('res', res);\n    return res;\n  }\n  if (hasMessagesA) {\n    return -1;\n  }\n  return 1;\n};\n\nexport const getParam = (param: string) => {\n  const QueryString = window.location.search;\n  const urlParams = new URLSearchParams(QueryString);\n  return urlParams.get(param);\n};\n\nexport const combineURLs = (\n  baseURL: string,\n  relativeURL: string,\n  queryParams?: Record<string, string>,\n): string => {\n  const url = relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') +\n      '/' +\n      relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n  if (!queryParams) return url;\n\n  return (\n    url +\n    (url.includes('?') ? '&' : '?') +\n    new URLSearchParams(queryParams).toString()\n  );\n};\n","import React from \"react\";\nimport {\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@mui/material\";\nimport StarIcon from \"@mui/icons-material/Star\";\nimport ContactStatus from \"./ContactStatus\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Contact } from \"../types\";\nimport { combineURLs } from \"../utils/common\";\n\nconst useStyles = makeStyles(() => ({\n  star: {\n    fontSize: \"0.85rem\",\n    verticalAlign: \"middle\",\n  },\n}));\n\ntype ContactListProps = {\n  apiUrl: string;\n  contacts: Contact[];\n  owner?: number;\n  onClick?: (contact: Contact) => void;\n};\n\nconst ContactList: React.FC<ContactListProps> = (props: ContactListProps) => {\n  const classes = useStyles();\n  const { apiUrl, contacts, owner } = props;\n\n  return (\n    <List aria-label=\"contacts\">\n      {contacts.map((contact) => (\n        <ListItem\n          button\n          key={contact.userId}\n          onClick={() => props.onClick && props.onClick(contact)}\n        >\n          <ListItemAvatar>\n            <Avatar alt={contact.username} src={contact.avatar ? combineURLs(apiUrl, contact.avatar) : \"\"} />\n          </ListItemAvatar>\n          <ListItemText\n            primary={\n              <span>\n                {contact.username}{\" \"}\n                {owner === contact.userId && (\n                  <StarIcon className={classes.star} color=\"primary\" />\n                )}\n              </span>\n            }\n            secondary={<ContactStatus contact={contact} isTyping={false} />}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\nexport default ContactList;\n","import { Dialog, DialogTitle } from \"@mui/material\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Contact } from \"../types\";\nimport ContactList from \"./ContactList\";\n\ninterface AddContactProps {\n  open: boolean;\n  apiUrl: string;\n  contacts: Contact[];\n  onClose: (value?: Contact) => void;\n}\n\nconst AddContact: React.FC<AddContactProps> = (\n  props: AddContactProps\n) => {\n  const { onClose, open, apiUrl, contacts } = props;\n  const { t } = useTranslation();\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleListItemClick = (contact: Contact) => {\n    onClose(contact);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"add-contact-title\"\n      open={open}\n    >\n      <DialogTitle id=\"switch-operator-title\">\n        {t(\"CHAT.ADD_CONTACT\")}\n      </DialogTitle>\n      <ContactList\n        apiUrl={apiUrl}\n        contacts={contacts}\n        onClick={handleListItemClick}\n      />\n    </Dialog>\n  );\n};\n\nexport default AddContact;","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React from 'react';\nimport {\n  Alert,\n  Dialog,\n  DialogContent,\n  Slide,\n  Button,\n  DialogActions,\n  Typography,\n  AlertColor,\n} from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\nimport { TransitionProps } from '@mui/material/transitions';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ntype AlertDialogProps = {\n  children: JSX.Element | JSX.Element[] | string;\n  open: boolean;\n  setOpen: (value: boolean) => void;\n  severity: AlertColor;\n};\n\nexport default function AlertDialog({\n  children,\n  open,\n  setOpen,\n  severity = 'warning',\n}: AlertDialogProps) {\n  const { t } = useTranslation();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogContent>\n        <Alert severity={severity}>\n          {typeof children === 'string' ? (\n            <Typography variant=\"body2\">{children}</Typography>\n          ) : (\n            children\n          )}\n        </Alert>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} variant=\"text\">\n          {t('CHAT.BUT_CLOSE')}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport useCounter from \"../hooks/useCounter\";\nimport AlertDialog from \"./AlertDialog\";\nimport { useTranslation } from \"react-i18next\";\n//import { useTranslation } from \"react-i18next\";\n\nconst hhMmSs = (totalSeconds: number) => {\n  const hours = Math.floor(totalSeconds / 3600);\n  const strHours = hours < 10 ? `0${hours}` : hours;\n  totalSeconds %= 3600;\n  const minutes = Math.floor(totalSeconds / 60);\n  const strMinutes = minutes < 10 ? `0${minutes}` : minutes;\n  const seconds = totalSeconds % 60;\n  const strSeconds = seconds < 10 ? `0${seconds}` : seconds;\n\n  const strTime = `${strHours}:${strMinutes}:${strSeconds}`;\n  return { hours, minutes, seconds, strTime };\n};\ntype AlertModaleProps = {\n  modaleInfo: boolean;\n  setModaleInfo: (vars: boolean) => void;\n  strTime: string;\n};\nconst AlertModale: React.FC<AlertModaleProps> = ({\n  modaleInfo,\n  setModaleInfo,\n  strTime\n}) => {\n  const { t } = useTranslation();\n  return useMemo(\n    () => (\n      <AlertDialog open={modaleInfo} setOpen={setModaleInfo} severity=\"info\">\n        <Typography variant=\"body1\" textAlign=\"center\">\n          {t(\"CHAT.CONFERENCE.UntillTheEnd\")}:\n        </Typography>\n        <Typography variant=\"h6\" textAlign=\"center\">\n          {strTime}\n        </Typography>\n      </AlertDialog>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [modaleInfo]\n  );\n};\n\ntype ConferenceTimeProps = {\n  finishDate: Date;\n};\nconst ConferenceTime: React.FC<ConferenceTimeProps> = ({\n  finishDate\n}: ConferenceTimeProps) => {\n  const { t } = useTranslation();\n  const [modaleInfo, setModaleInfo] = useState(false);\n  const currTime = Date.now();\n  // console.log(\"currentDate server\", currentDate);\n  // console.log(\"currTime client\", currTime);\n  const finTime = new Date(finishDate).getTime();\n\n  //const diffTimeMin = Math.round((finTime - currTime) / (1000 * 60));\n  const diffTimeSec = Math.round((finTime - currTime) / 1000);\n\n  const { counter } = useCounter(diffTimeSec);\n  useEffect(() => {\n    if (minutes != null && minutes === 3 && seconds != null && seconds === 0) {\n      setModaleInfo(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [counter]);\n\n  if (diffTimeSec < 1) return null;\n\n  const { minutes, seconds, strTime } = hhMmSs(diffTimeSec);\n\n  return (\n    <Box textAlign=\"center\">\n      <Typography variant=\"body2\" component=\"span\">\n        {t(\"CHAT.CONFERENCE.LEFT_TIME\")}:{\" \"}\n      </Typography>\n      <Typography variant=\"button\" component=\"span\">\n        {strTime}\n      </Typography>\n      <AlertModale\n        modaleInfo={modaleInfo}\n        setModaleInfo={setModaleInfo}\n        strTime={strTime}\n      />\n    </Box>\n  );\n};\n\nexport default ConferenceTime;\n","import { useEffect, useRef, useState } from \"react\";\n\nexport default function useCounter(max = 30000) {\n  const [counter, setCounter] = useState(max);\n  const counterRef = useRef<ReturnType<typeof setInterval> | null>(null);\n\n  const handlerRefresh = () => {\n    setCounter(max);\n  };\n\n  // Counter\n  useEffect(() => {\n    if (counter > 0)\n      counterRef.current = setInterval(\n        () => setCounter(prev => prev - 1),\n        1000\n      );\n\n    return () => {\n      if (counterRef.current) clearInterval(counterRef.current);\n    };\n  }, [counter]);\n\n  return { counter, handlerRefresh };\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport Slide from '@mui/material/Slide';\nimport { TransitionProps } from '@mui/material/transitions';\nimport { Typography } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ntype ConfirmDialogSlideProps = {\n  open: boolean;\n  contentText: string;\n  setOpen: (open: boolean) => void;\n  callback: () => void;\n};\nexport default function ConfirmDialogSlide({\n  open,\n  setOpen,\n  contentText,\n  callback,\n}: ConfirmDialogSlideProps) {\n  const { t } = useTranslation();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleCloseOk = () => {\n    setOpen(false);\n    callback();\n  };\n\n  return (\n    <React.Fragment>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogContent>\n          <Typography variant=\"h6\">{contentText}</Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            {t('CHAT.BUT_CLOSE')}\n          </Button>\n          <Button onClick={handleCloseOk} color=\"warning\">\n            {t('CHAT.BUT_CONFIRM')}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\nimport { styled, alpha } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Menu, { MenuProps } from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport VideoCallIcon from '@mui/icons-material/VideoCall';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { ChatRoom, VisitData } from '../types';\nimport { formatTime } from '../utils/common';\nimport { useTranslation } from 'react-i18next';\nimport ConfirmDialogSlide from './ConfirmDialogSlide';\n\nconst StyledMenu = styled((props: MenuProps) => (\n  <Menu\n    elevation={0}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right',\n    }}\n    {...props}\n  />\n))(({ theme }) => ({\n  '& .MuiPaper-root': {\n    borderRadius: 6,\n    marginTop: theme.spacing(1),\n    minWidth: 180,\n    color:\n      theme.palette.mode === 'light'\n        ? 'rgb(55, 65, 81)'\n        : theme.palette.grey[300],\n    boxShadow:\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n    '& .MuiMenu-list': {\n      padding: '4px 0',\n    },\n    '& .MuiMenuItem-root': {\n      '& .MuiSvgIcon-root': {\n        fontSize: 18,\n        color: theme.palette.text.secondary,\n        marginRight: theme.spacing(1.5),\n      },\n      '&:active': {\n        backgroundColor: alpha(\n          theme.palette.primary.main,\n          theme.palette.action.selectedOpacity,\n        ),\n      },\n    },\n  },\n}));\n\ntype ConferenceButtonProps = {\n  visitData: VisitData[];\n  chat: ChatRoom;\n  onVideoCall: (\n    chat: ChatRoom,\n    visitId?: number,\n    recreate?: boolean,\n  ) => void;\n};\n\nconst getVisitMessage = (visit: VisitData) => {\n  const visitDate = new Date(visit.visitDate);\n\n  return `${visit.plExamName} (${formatTime(\n    visitDate,\n    'HH:mm',\n  )} - ${formatTime(\n    new Date(visitDate.getTime() + visit.duration * 60_000),\n    'HH:mm',\n  )})`;\n};\n\nexport default function ConferenceButton(\n  props: ConferenceButtonProps,\n) {\n  const { t } = useTranslation();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(\n    null,\n  );\n\n  const [visitId, setVisitId] = React.useState<number | null>(null);\n  const [confirmReCreateVisit, setConfirmReCreateVisit] =\n    React.useState(false);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleStart = (item: VisitData) => {\n    setAnchorEl(null);\n    setVisitId(item.visitId);\n    if (item.conferenceStatus === 'finished') {\n      setConfirmReCreateVisit(true);\n    } else {\n      props.onVideoCall(props.chat, item.visitId);\n    }\n  };\n\n  const visitData = React.useMemo(() => {\n    return props.visitData.filter(\n      (it) => it.contactId === props.chat.userId,\n    );\n  }, [props.visitData, props.chat]);\n\n  /**\n   * <Button\n                  aria-label=\"video call\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"small\"\n                  startIcon={<VideoCallIcon />}\n                  onClick={() =>\n                    visitId &&\n                    !isEmpty(\n                      visitData.find(\n                        (it) =>\n                          it.conferenceStatus === 'finished' &&\n                          it.visitId === Number(visitId),\n                      ),\n                    )\n                      ? setConfirmReCreateVisit(true)\n                      : onVideoCall(contact, null)\n                  }\n                  fullWidth\n                >\n                  {t(\n                    visitId\n                      ? 'CHAT.CONFERENCE.RESTART'\n                      : 'CHAT.CONFERENCE.START',\n                  )}\n                </Button>              \n   */\n\n  return (\n    <div>\n      <Button\n        id=\"conference-button\"\n        aria-controls={open ? 'conference-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        color=\"primary\"\n        size=\"small\"\n        variant=\"contained\"\n        disableElevation\n        onClick={handleClick}\n        startIcon={<VideoCallIcon />}\n        endIcon={<KeyboardArrowDownIcon />}\n        disabled={visitData.length === 0}\n      >\n        {t('CHAT.CONFERENCE.START')}\n      </Button>\n      <ConfirmDialogSlide\n        open={confirmReCreateVisit}\n        setOpen={setConfirmReCreateVisit}\n        contentText={t('CHAT.CONFERENCE.CONFIRM_RECREATE_CONF')}\n        callback={() => {\n          if (visitId && confirmReCreateVisit) {\n            props.onVideoCall(props.chat, visitId, true);\n          }\n        }}\n      />\n      <StyledMenu\n        id=\"conference-menu\"\n        MenuListProps={{\n          'aria-labelledby': 'conference-button',\n        }}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        {visitData.map((item) => {\n          return (\n            <MenuItem\n              onClick={() => handleStart(item)}\n              key={item.visitId}\n              value={item.visitId}\n              disableRipple\n            >\n              {item.conferenceStatus === 'finished' ? (\n                <RestartAltIcon />\n              ) : (\n                <PlayArrowIcon />\n              )}\n              {getVisitMessage(item)}\n            </MenuItem>\n          );\n        })}\n      </StyledMenu>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Avatar,\n  CardHeader,\n  Button,\n  Popover,\n  IconButton,\n} from '@mui/material';\nimport { Theme } from '@mui/material/styles';\nimport GroupIcon from '@mui/icons-material/Group';\nimport { useTranslation } from 'react-i18next';\nimport CallEndIcon from '@mui/icons-material/CallEnd';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactStatus from './ContactStatus';\nimport ContactList from './ContactList';\nimport AddContact from './AddContact';\nimport {\n  ChatRoom,\n  Contact,\n  Group,\n  SetTyping,\n  User,\n  ConferenceData,\n  VisitData,\n} from '../types';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport { combineURLs, formatTime, isEmpty } from '../utils/common';\nimport ConferenceTime from './ConferenceTime';\nimport ConfirmDialogSlide from './ConfirmDialogSlide';\nimport ConferenceButton from './ConferenceButton';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    popover: {\n      pointerEvents: 'none',\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n    avatarGroup: {\n      backgroundColor: '#28B7C6',\n      color: '#fff',\n    },\n  }),\n);\n\ntype RoomHeaderProps = {\n  apiUrl: string;\n  user: User;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  conferenceJoined: boolean;\n  className: string;\n  operators: Contact[];\n  visitData: VisitData[];\n  onVideoCall?: (\n    chat: ChatRoom,\n    visitId?: number,\n    recreate?: boolean,\n  ) => void;\n  onVideoEnd?: (conference: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst getGroupStatus = (group: Group, t: (key: string) => string) => {\n  const status = [`${group.members?.length} ${t('CHAT.MEMBERS')}`];\n  const onlineCount = (group.members || []).reduce(\n    (sum: number, contact) => (contact.online ? sum + 1 : sum),\n    0,\n  );\n  if (onlineCount)\n    status.push(`${onlineCount} ${t('CHAT.STATUS.ONLINE')}`);\n  return status.join(', ');\n};\n\nconst getVisitMessage = (visit: VisitData) => {\n  const visitDate = new Date(visit.visitDate);\n\n  return `${formatTime(visitDate, 'HH:mm')} - ${formatTime(\n    new Date(visitDate.getTime() + visit.duration * 60_000),\n    'HH:mm',\n  )} ${visit.conferenceStatus}`;\n};\n\nconst RoomHeader: React.FC<RoomHeaderProps> = ({\n  apiUrl,\n  user,\n  chat,\n  typing,\n  conference,\n  visitData,\n  conferenceJoined,\n  className,\n  operators,\n  onVideoCall,\n  onVideoEnd,\n  onConferencePause,\n  onOperatorAdd,\n  onLeaveGroup,\n}: RoomHeaderProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null);\n  const [addOperatorOpen, setAddOperatorOpen] = useState(false);\n\n  if (!chat)\n    return (\n      <CardHeader\n        avatar={<Avatar />}\n        title=\"\"\n        subheader=\"\"\n        className={className}\n      />\n    );\n\n  const handlePopoverOpen = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>,\n  ) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleAddOperatorOpen = () => {\n    setAddOperatorOpen(true);\n  };\n\n  const handleAddOperatorClose = (operator?: Contact) => {\n    setAddOperatorOpen(false);\n    if (onOperatorAdd && operator && chat)\n      onOperatorAdd(chat as Group, operator);\n  };\n\n  const group = chat as Group;\n  if (group.groupId) {\n    // группа\n    return (\n      <CardHeader\n        avatar={\n          <Avatar alt={group.name} className={classes.avatarGroup}>\n            <GroupIcon />\n          </Avatar>\n        }\n        title={group.name}\n        subheader={\n          <React.Fragment>\n            <span\n              aria-owns={anchorEl ? 'mouse-over-popover' : undefined}\n              aria-haspopup=\"true\"\n              onMouseEnter={handlePopoverOpen}\n              onMouseLeave={handlePopoverClose}\n            >\n              {getGroupStatus(group, t)}\n            </span>\n            <Popover\n              id=\"mouse-over-popover\"\n              className={classes.popover}\n              classes={{\n                paper: classes.paper,\n              }}\n              open={!!anchorEl}\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              onClose={handlePopoverClose}\n              disableRestoreFocus\n            >\n              <ContactList\n                apiUrl={apiUrl}\n                contacts={group.members as Contact[]}\n                owner={group.userId}\n              />\n            </Popover>\n          </React.Fragment>\n        }\n        className={className}\n        action={\n          <React.Fragment>\n            {user.role === 4 && (\n              <React.Fragment>\n                <IconButton\n                  aria-label=\"add user\"\n                  onClick={handleAddOperatorOpen}\n                >\n                  <PersonAddIcon />\n                </IconButton>\n                <AddContact\n                  apiUrl={apiUrl}\n                  open={addOperatorOpen}\n                  contacts={operators}\n                  onClose={handleAddOperatorClose}\n                />\n              </React.Fragment>\n            )}\n            {user.role === 4 &&\n              group.members?.find(\n                (it) => it.userId !== user.userId && it.role === 4,\n              ) &&\n              onLeaveGroup && (\n                <IconButton\n                  aria-label=\"leave group\"\n                  onClick={() => onLeaveGroup(group)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              )}\n          </React.Fragment>\n        }\n      />\n    );\n  }\n  const contact = chat as Contact;\n  const isTyping =\n    !!typing?.contactId && typing?.userId === contact.userId;\n\n  return (\n    <CardHeader\n      avatar={\n        <Avatar\n          alt={contact.username}\n          src={\n            contact.avatar ? combineURLs(apiUrl, contact.avatar) : ''\n          }\n        />\n      }\n      title={contact.username}\n      subheader={\n        <ContactStatus contact={contact} isTyping={isTyping} />\n      }\n      className={className}\n      action={\n        <React.Fragment>\n          {user.role !== 1 &&\n            conferenceJoined &&\n            conference &&\n            !isEmpty(conference) &&\n            onConferencePause != null && (\n              <Button\n                aria-label=\"cancel call\"\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                startIcon={<CallEndIcon color=\"error\" />}\n                onClick={() => onConferencePause(conference)}\n              >\n                {t('CHAT.CONFERENCE.PAUSE')}\n              </Button>\n            )}\n\n          {conference &&\n            !isEmpty(conference) &&\n            onVideoEnd != null &&\n            user.role != null &&\n            [3, 4].includes(user.role) && (\n              <Button\n                aria-label=\"cancel call\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                startIcon={<CallEndIcon color=\"error\" />}\n                onClick={() => onVideoEnd(conference)}\n                style={{ marginLeft: 8 }}\n              >\n                {t('CHAT.CONFERENCE.FINISH')}\n              </Button>\n            )}\n\n          {isEmpty(conference) &&\n            onVideoCall != null &&\n            user.role &&\n            [3, 4].includes(user.role) && (\n              <ConferenceButton\n                visitData={visitData}\n                chat={contact}\n                onVideoCall={onVideoCall}\n              />\n            )}\n\n          {conference?.finishDate != null && (\n            <ConferenceTime finishDate={conference.finishDate} />\n          )}\n        </React.Fragment>\n      }\n    />\n  );\n};\n\nexport default RoomHeader;\n","import React from \"react\";\nimport { Avatar, Box } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\nimport { getFileMeta, splitFileName } from \"../../utils/common\";\nimport { ChatMessage } from \"../../types\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fileIcon: {\n      fontSize: \"0.75rem\"\n    },\n    fileBody: {\n      paddingLeft: theme.spacing(1.2)\n    }\n  })\n);\ntype FileProps = {\n  message: ChatMessage;\n};\n\nconst File: React.FC<FileProps> = ({ message }: FileProps) => {\n  const classes = useStyles();\n  const meta = getFileMeta(message.content);\n  const { name, ext } = splitFileName(meta.name);\n  return (\n    <Box display=\"flex\" flexDirection=\"row\">\n      <Avatar className={classes.fileIcon}>{ext.toUpperCase()}</Avatar>\n      <Box display=\"flex\" flexDirection=\"column\" className={classes.fileBody}>\n        {name}\n        <span>{`${ext} ${meta.size}`}</span>\n      </Box>\n    </Box>\n  );\n};\n\nexport default File;\n","import React from 'react';\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material/styles';\nimport { ChatMessage } from '../../types';\nimport { combineURLs } from '../../utils/common';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  mediaContent: {\n    maxWidth: 284,\n    maxHeight: 190,\n    backgroundColor: theme.palette.secondary.main,\n    borderRadius: theme.spacing(1.2),\n    [theme.breakpoints.down('sm')]: {\n      maxWidth: 250,\n      maxHeight: 210,\n    },\n  },\n}));\n\ntype VideoProps = {\n  apiUrl: string;\n  message: ChatMessage;\n  isConference: boolean;\n};\n\nconst Video: React.FC<VideoProps> = ({\n  apiUrl,\n  message,\n  isConference,\n}: VideoProps) => {\n  const classes = useStyles();\n  let src = '';\n  if (isConference) {\n    const meta = JSON.parse(message.content);\n    src = combineURLs(\n      apiUrl,\n      `/static/conf/${meta.visitId}/${meta.name}`,\n    );\n  } else src = combineURLs(apiUrl, `/static/file/${message.content}`);\n  return (\n    <video\n      src={src}\n      className={classes.mediaContent}\n      controls\n      muted\n      preload=\"none\"\n    >\n      Ваш браузер не поддерживает тег video.\n    </video>\n  );\n};\n\nexport default Video;\n","import React from 'react';\n\nimport { Theme } from '@mui/material/styles';\n//import { getImageMeta } from \"../../utils/common\";\nimport { ChatMessage } from '../../types';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport { AspectRatio } from 'react-aspect-ratio';\nimport { combineURLs } from '../../utils/common';\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    img: {\n      cursor: 'pointer',\n      borderRadius: theme.spacing(1.2),\n      maxWidth: 284,\n      maxHeight: 190,\n      [theme.breakpoints.down('sm')]: {\n        maxWidth: 250,\n        maxHeight: 170,\n      },\n    },\n    aspect: {\n      maxWidth: 284,\n      maxHeight: 190,\n      [theme.breakpoints.down('sm')]: {\n        maxWidth: 250,\n        maxHeight: 170,\n      },\n    },\n  }),\n);\ntype ImageProrps = {\n  apiUrl: string;\n  message: ChatMessage;\n  setViewerData: (value: { visible: boolean; src: string }) => void;\n};\n\nconst Image: React.FC<ImageProrps> = ({\n  apiUrl,\n  message,\n  setViewerData,\n}: ImageProrps) => {\n  const classes = useStyles();\n  //const meta = getImageMeta(message.content);\n\n  return (\n    <AspectRatio ratio=\"3/4\" className={classes.aspect}>\n      <img\n        src={combineURLs(apiUrl, `/static/image/${message.content}`)}\n        onClick={() => {\n          setViewerData({\n            visible: true,\n\n            src: combineURLs(\n              apiUrl,\n              `/static/image/${message.content}`,\n            ),\n          });\n        }}\n        className={classes.img}\n        alt={message.cdate}\n      />\n    </AspectRatio>\n  );\n};\n\nexport default Image;\n","import React from 'react';\nimport File from './File';\nimport Video from './Video';\nimport Image from './Image';\nimport { ChatMessage } from '../../types';\n\ntype MessageProps = {\n  apiUrl: string;\n  message: ChatMessage;\n  setViewerData: (value: { visible: boolean; src: string }) => void;\n};\nconst MessageContent: React.FC<MessageProps> = ({\n  apiUrl,\n  message,\n  setViewerData,\n}: MessageProps) => {\n  switch (message.messageType) {\n    case 'text':\n      return <React.Fragment>{message.content}</React.Fragment>;\n    case 'video':\n    case 'video_conference':\n      return (\n        <Video\n          message={message}\n          apiUrl={apiUrl}\n          isConference={message.messageType === 'video_conference'}\n        />\n      );\n    case 'image':\n      return (\n        <Image\n          message={message}\n          apiUrl={apiUrl}\n          setViewerData={setViewerData}\n        />\n      );\n    case 'file':\n      return <File message={message} />;\n  }\n  return null;\n};\n\nexport default MessageContent;\n","import { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles } from \"@mui/styles\";\n\nexport default makeStyles((theme: Theme) =>\n  createStyles({\n    rootContact: {\n      padding: 1,\n      paddingLeft: theme.spacing(2),\n      \"& span\": {\n        float: \"right\",\n        color: theme.palette.text.secondary,\n        fontSize: \"0.8rem\"\n      },\n      \"& $message\": {\n        backgroundColor: theme.palette.grey[200],\n        color: theme.palette.text.primary,\n        borderTopRightRadius: theme.spacing(3),\n        borderBottomRightRadius: theme.spacing(3)\n      },\n      \"& $firstMessage\": {\n        borderTopLeftRadius: theme.spacing(3),\n        marginTop: 10\n      },\n      \"& $lastMessage\": {\n        borderTopRightRadius: theme.spacing(3),\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: theme.spacing(3),\n        marginBottom: 10\n      }\n    },\n    rootUser: {\n      padding: 1,\n      paddingRight: theme.spacing(2),\n      justifyContent: \"flex-end\",\n      \"& span\": {\n        float: \"right\",\n        color: \"#D9DEEC\",\n        fontSize: \"0.8rem\"\n      },\n      \"& $message\": {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        borderTopLeftRadius: theme.spacing(3),\n        borderBottomLeftRadius: theme.spacing(3)\n      },\n      \"& $firstMessage\": {\n        borderTopRightRadius: theme.spacing(3),\n        marginTop: 10\n      },\n      \"& $lastMessage\": {\n        borderTopLeftRadius: theme.spacing(3),\n        borderBottomRightRadius: 0,\n        marginBottom: 10\n      }\n    },\n    rootNotify: {\n      justifyContent: \"center\",\n      \"& span\": {\n        float: \"right\",\n        color: theme.palette.text.secondary,\n        fontSize: \"0.8rem\"\n      },\n      \"& > *\": {\n        //padding: `0px ${theme.spacing(1)}`,\n        borderRadius: theme.spacing(3),\n        fontWeight: 500\n      }\n    },\n    message: {\n      //maxWidth: \"55%\",\n      //minWidth: \"50%\",\n      maxWidth: \"65%\",\n\n      [theme.breakpoints.down(\"md\")]: {\n        maxWidth: \"95%\"\n      },\n      [theme.breakpoints.down(\"sm\")]: {\n        maxWidth: \"85%\"\n      },\n      borderRadius: theme.spacing(0.6),\n      padding: theme.spacing(0.9),\n      paddingLeft: theme.spacing(1.8),\n      paddingRight: theme.spacing(1.8)\n    },\n    firstMessage: {},\n    lastMessage: {},\n\n    file: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      cursor: \"pointer\"\n    },\n    header: {\n      flex: \"0 0 100%\",\n      overflow: \"hidden\",\n      fontWeight: \"bold\"\n    },\n    body: {\n      flex: \"1 1 auto\",\n      wordBreak: \"break-word\",\n      overflow: \"hidden\"\n    },\n    status: {\n      paddingLeft: theme.spacing(1),\n      flex: \"1 1 auto\",\n      alignSelf: \"flex-end\"\n    },\n    statusImage: {\n      fontSize: \"1rem\",\n      marginRight: theme.spacing(0.5),\n      verticalAlign: \"middle\"\n    }\n  })\n);\n","import * as React from 'react';\nimport { Box, Link, ListItem, Typography } from '@mui/material';\n\nimport { DoneAll, Done } from '@mui/icons-material';\nimport { combineURLs, formatTime } from '../utils/common';\nimport MessageContent from './MessageContent';\nimport { Alert } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\nimport { ChatMessage, Contact, PrivateMessage, User } from '../types';\n\n/* styles */\nimport useStyles from './styles';\n\ntype MessageProps = {\n  apiUrl: string;\n  user: User;\n  message: ChatMessage;\n  owner: Contact;\n  isGroupMessage: boolean; // сообщение в группу\n  isUserFirst: boolean; // начинает группу сообщений от одного пользователя\n  isUserLast: boolean; // завершает группу сообщений от одного пользователя\n  onContextMenu: (event: React.MouseEvent<HTMLElement>) => void;\n  setViewerData: (value: { visible: boolean; src: string }) => void;\n  //refOnMess: React.RefObject<HTMLDivElement> | null;\n};\n\nconst wrapMessage = (\n  apiUrl: string,\n  message: ChatMessage,\n  classes: ReturnType<typeof useStyles>,\n  isUserFirst: boolean,\n  isUserLast: boolean,\n  onContextMenu:\n    | ((event: React.MouseEvent<HTMLElement>) => void)\n    | undefined,\n  child: JSX.Element,\n) => {\n  const { messageType } = message;\n\n  const className =\n    isUserFirst && isUserLast\n      ? `${classes.message} ${classes.firstMessage} ${classes.lastMessage}`\n      : isUserFirst\n      ? `${classes.message} ${classes.firstMessage}`\n      : isUserLast\n      ? `${classes.message} ${classes.lastMessage}`\n      : classes.message;\n\n  if (messageType === 'file') {\n    return (\n      <Link\n        className={`${className} ${classes.file}`}\n        underline=\"none\"\n        href={combineURLs(apiUrl, `/static/file/${message.content}`)}\n        target=\"_blank\"\n        download\n        onContextMenu={onContextMenu}\n      >\n        {child}\n      </Link>\n    );\n  }\n  const isMedia =\n    messageType === 'image' ||\n    messageType === 'video' ||\n    messageType === 'video_conference';\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection={isMedia ? 'column' : 'row'}\n      flexWrap=\"wrap\"\n      className={className}\n      onContextMenu={onContextMenu}\n    >\n      {child}\n    </Box>\n  );\n};\n\nconst Message: React.FC<MessageProps> = (props: MessageProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const {\n    apiUrl,\n    message,\n    owner,\n\n    user,\n    isGroupMessage,\n    isUserFirst,\n    isUserLast,\n    setViewerData,\n    //refOnMess,\n  } = props;\n  //console.log('message', message);\n\n  if (message.messageType === 'notify') {\n    // Уведомление - особый случай\n    const content =\n      message.content[0] === '{'\n        ? JSON.parse(message.content)\n        : message.content;\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Alert\n          //ref={refOnMess}\n          severity={\n            typeof content === 'string' ? 'info' : content.severity\n          }\n        >\n          {typeof content === 'string' ? content : content.message}\n        </Alert>\n      </ListItem>\n    );\n  }\n\n  if (message.isRevoke) {\n    // Удаленное сообщение\n    return (\n      <ListItem className={classes.rootNotify}>\n        <Typography\n          variant=\"body2\"\n          align=\"center\"\n          //ref={refOnMess}\n        >\n          {message.userId === user.userId\n            ? t('CHAT.MESSAGE.REVOKED.YOU')\n            : `${message.revokeUserName} ${t(\n                'CHAT.MESSAGE.REVOKED.CONTACT',\n              )}`}\n        </Typography>\n      </ListItem>\n    );\n  }\n\n  const isMine = user.userId === message.userId;\n\n  return (\n    <ListItem\n      className={\n        message.messageType === 'video_conference'\n          ? classes.rootNotify\n          : isMine\n          ? classes.rootUser\n          : classes.rootContact\n      }\n    >\n      {wrapMessage(\n        apiUrl,\n        message,\n        classes,\n        isUserFirst,\n        isUserLast,\n        props.onContextMenu,\n        <React.Fragment>\n          {!isMine && isGroupMessage && owner && isUserFirst && (\n            <div className={classes.header}>{owner.username}</div>\n          )}\n          <div\n            className={classes.body}\n            //ref={refOnMess}\n          >\n            <MessageContent\n              message={message}\n              apiUrl={apiUrl}\n              setViewerData={setViewerData}\n            />\n          </div>\n          <div className={classes.status}>\n            <span>\n              {isMine ? (\n                (message as PrivateMessage).status === 0 ? (\n                  <Done className={classes.statusImage} />\n                ) : (\n                  <DoneAll className={classes.statusImage} />\n                )\n              ) : null}\n              {formatTime(message.cdate)}\n            </span>\n          </div>\n        </React.Fragment>,\n      )}\n    </ListItem>\n  );\n};\nexport default Message;\n","import React from 'react';\nimport {\n  AddGroupMessages,\n  AddPrivateMessages,\n  ChatRoom,\n  Contact,\n  ContactGather,\n  Group,\n  GroupGather,\n  GroupMember,\n  GroupMessage,\n  MessageOperation,\n  PrivateMessage,\n  SetActiveRoom,\n  //SetUser,\n  SetTyping,\n  User,\n  ConferenceData,\n  GroupMap,\n  VisitData,\n} from '../types';\nimport { chatRoomComparer } from '../utils/common';\n\nexport interface ChatState {\n  user: User;\n  token: string;\n  refreshToken: string;\n  activeRoom: ChatRoom | null;\n  chatOld: ChatRoom | null;\n\n  groupGather: GroupGather;\n  userGather: ContactGather;\n  contactGather: ContactGather;\n  operators: Contact[];\n  initialContactId: number | null;\n  conference: {\n    data: ConferenceData | null;\n    joined: boolean;\n    ringPlayed: boolean;\n  };\n  typing: SetTyping | null;\n  loading: boolean;\n  error?: string;\n  success?: string;\n  visitData: VisitData[];\n}\n\nconst emptyUser: User = {\n  userId: 0,\n  username: '',\n  password: '',\n  avatar: '',\n  langCode: '',\n};\n\nconst emptyChatState: ChatState = {\n  user: emptyUser, // пользователь\n  token: '', // токен\n  refreshToken: '',\n  activeRoom: null, // активная комната\n  chatOld: null, // активная комната\n\n  groupGather: {}, // список групп\n  userGather: {}, // список онлайн\n  contactGather: {}, // контакты\n  operators: [], // операторы\n  initialContactId: null, // начальный контакт\n  conference: {\n    data: null, // данные конференции\n    joined: false,\n    ringPlayed: false,\n  },\n  typing: null, // кто печатает текст\n  loading: false, // загрузка данных\n  error: undefined, // ошибка\n  success: undefined, // НЕ ошибка\n  visitData: [],\n};\n\ntype ChatActionType =\n  | 'ADD_GROUP_MEMBER'\n  | 'ADD_GROUP_MESSAGE'\n  | 'ADD_GROUP_MESSAGES'\n  | 'SET_GROUP_MESSAGES'\n  | 'ADD_PRIVATE_MESSAGE'\n  | 'ADD_PRIVATE_MESSAGES'\n  | 'SET_PRIVATE_MESSAGES'\n  | 'SET_ACTIVE_ROOM'\n  | 'UPDATE_ACTIVE_ROOM'\n  | 'SET_GROUP_GATHER'\n  | 'SET_CONTACT_GATHER'\n  | 'SET_USER_GATHER'\n  | 'DEL_GROUP'\n  | 'DEL_GROUP_MEMBER'\n  | 'DEL_CONTACT'\n  | 'ADD_CONTACT_UNREAD_GATHER'\n  | 'LOSE_CONTACT_UNREAD_GATHER'\n  | 'ADD_GROUP_UNREAD_GATHER'\n  | 'LOSE_GROUP_UNREAD_GATHER'\n  | 'REVOKE_MESSAGE'\n  | 'USER_ONLINE'\n  | 'USER_OFFLINE'\n  | 'UPDATE_USER_INFO'\n  | 'SET_INITIAL_CONTACT_ID'\n  | 'SET_CONFERENCE'\n  | 'JOIN_CONFERENCE'\n  | 'PAUSE_CONFERENCE'\n  | 'STOP_CONFERENCE'\n  | 'SET_TYPING'\n  | 'MARK_AS_READ'\n  | 'UPDATE_GROUP_INFO'\n  | 'MARK_PRIVATE_MESSAGES_READ'\n  | 'SET_LOADING'\n  | 'SET_ERROR'\n  | 'SET_SUCCES'\n  | 'SET_USER'\n  | 'SET_TOKEN'\n  | 'CLEAR_USER'\n  | 'CLEAR_CHAT_DATA'\n  | 'SET_OPERATORS'\n  | 'SET_VISIT_DATA';\n\ntype Action = {\n  type: ChatActionType;\n  payload?:\n    | null\n    | boolean\n    | number\n    | string\n    | Group\n    | Contact\n    | User\n    | PrivateMessage\n    | GroupMessage\n    | SetTyping\n    | MessageOperation\n    | GroupMember\n    | AddPrivateMessages\n    | AddGroupMessages\n    | SetActiveRoom\n    | ConferenceData\n    | Contact[]\n    | GroupMap\n    | VisitData[];\n};\n\nconst getFreshActiveRoom = (state: ChatState) => {\n  if (state.activeRoom)\n    return (\n      state.groupGather[(state.activeRoom as Group).groupId] ||\n      state.contactGather[state.activeRoom.userId]\n    );\n  return null;\n};\n\nconst getActiveRoom = (state: ChatState) => {\n  const { activeRoom, initialContactId, contactGather } = state;\n  let newActiveRoom: ChatRoom | null = null;\n  if (initialContactId) {\n    newActiveRoom = contactGather[initialContactId];\n  } else if (activeRoom) {\n    newActiveRoom = getFreshActiveRoom(state);\n  } else {\n    // ищем комнату с самым свежим сообщением\n    const rooms = [\n      ...Object.values(state.contactGather),\n      ...Object.values(state.groupGather),\n    ].sort(chatRoomComparer);\n    if (rooms.length > 0) newActiveRoom = rooms[0];\n  }\n  return newActiveRoom;\n};\n\nconst setUserOnline = (\n  state: ChatState,\n  userId: number,\n  online: 0 | 1,\n): ChatState => {\n  const newState = { ...state };\n  // Обновить статусы приватных чатов\n  if (state.contactGather[userId])\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      online,\n    };\n\n  // Обновить статус участника в группах\n  for (const group of Object.values(state.groupGather) as Group[]) {\n    if (!group.members) continue;\n    const member = group.members.find(m => m.userId === userId);\n    if (member) {\n      const index = group.members.indexOf(member);\n      group.members[index] = { ...member, online };\n    }\n  }\n  // Обновить статус операторов\n  const idx = newState.operators.findIndex(\n    it => it.userId === userId,\n  );\n  if (idx !== -1)\n    newState.operators[idx] = { ...newState.operators[idx], online };\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addGroupMessage = (state: ChatState, payload: GroupMessage) => {\n  const newState = { ...state };\n  const { groupId } = payload;\n  if (newState.groupGather[groupId]) {\n    if (newState.groupGather[groupId].messages) {\n      newState.groupGather[groupId].messages = [\n        ...(newState.groupGather[groupId].messages as GroupMessage[]),\n        payload,\n      ];\n    } else {\n      newState.groupGather[groupId] = {\n        ...state.groupGather[groupId],\n        messages: [payload],\n      };\n    }\n  }\n\n  // увеличиваем счетчик новых сообщений, если это не активная комната и сообщение не от нас\n  const { activeRoom } = newState;\n  if (\n    activeRoom &&\n    (activeRoom as Group).groupId !== groupId &&\n    payload.userId !== state.user.userId\n  ) {\n    return groupUnreadGather(\n      newState,\n      groupId,\n      (x?: number) => (x || 0) + 1,\n    );\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst addPrivateMessage = (\n  state: ChatState,\n  payload: PrivateMessage,\n) => {\n  const newState = { ...state };\n  const contactId =\n    payload.contactId === state.user.userId\n      ? payload.userId\n      : payload.contactId;\n\n  // 1 добавляем сообщение\n  if (newState.contactGather[contactId].messages) {\n    newState.contactGather[contactId].messages = [\n      ...(newState.contactGather[contactId]\n        .messages as PrivateMessage[]),\n      payload,\n    ];\n  } else {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [payload],\n    };\n  }\n\n  // 2 если это сообщение в неактивной комнате и источник не мы (в соседней вкладке), то увеличиваем счетчик непрочитанных\n  if (\n    newState.activeRoom?.userId !== contactId &&\n    payload.userId !== state.user.userId\n  ) {\n    return contactUnreadGather(\n      newState,\n      contactId,\n      (x?: number) => (x || 0) + 1,\n    );\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst contactUnreadGather = (\n  state: ChatState,\n  userId: number,\n  predicate: (x?: number) => number,\n) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      unreadCount: predicate(\n        newState.contactGather[userId].unreadCount,\n      ),\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst groupUnreadGather = (\n  state: ChatState,\n  groupId: number,\n  predicate: (x?: number) => number,\n) => {\n  const newState = { ...state };\n\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      unreadCount: predicate(\n        newState.groupGather[groupId].unreadCount,\n      ),\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst revokeMessage = (\n  state: ChatState,\n  payload: MessageOperation,\n) => {\n  const { userId } = state.user;\n  const newState = { ...state };\n  const userName =\n    payload.username ||\n    newState.userGather[payload.userId as number].username;\n  if (payload.groupId) {\n    const { messages } = newState.groupGather[payload.groupId];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find(\n        message => message._id === payload._id,\n      );\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName,\n        };\n      }\n    }\n  } else {\n    const { messages } = newState.contactGather[\n      payload.contactId === userId\n        ? (payload.userId as number)\n        : (payload.contactId as number)\n    ];\n    // задаем isRevoke\n    if (messages) {\n      const msg = messages.find(\n        message => message._id === payload._id,\n      );\n      if (msg) {\n        const index = messages.indexOf(msg);\n        messages[index] = {\n          ...msg,\n          isRevoke: true,\n          revokeUserName: userName,\n        };\n      }\n    }\n  }\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst delContact = (state: ChatState, userId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.contactGather[userId];\n  delete newState.contactGather[userId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroup = (state: ChatState, groupId: number) => {\n  const newState = { ...state };\n  const updateActiveRoom =\n    newState.activeRoom === newState.groupGather[groupId];\n  delete newState.groupGather[groupId];\n  if (updateActiveRoom) newState.activeRoom = getActiveRoom(newState);\n\n  return newState;\n};\n\nconst delGroupMember = (state: ChatState, data: GroupMap) => {\n  const newState = { ...state };\n\n  const group = newState.groupGather[data.groupId];\n  if (group) {\n    group.members = group.members?.filter(\n      it => it.userId !== data.userId,\n    );\n  }\n\n  return newState;\n};\n\nconst updateGroupInfo = (state: ChatState, group: Group) => {\n  const newState = { ...state };\n\n  const { groupId, name, notice } = group;\n  const info = newState.groupGather[groupId];\n  if (info) {\n    newState.groupGather[groupId] = { ...info, name, notice };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst updateUserInfo = (state: ChatState, user: User) => {\n  const newState = { ...state };\n\n  const { userId, username, avatar } = user;\n\n  if (newState.userGather[userId]) {\n    newState.userGather[userId] = {\n      ...newState.userGather[userId],\n      username,\n      avatar,\n    };\n  }\n\n  if (newState.contactGather[userId]) {\n    newState.contactGather[userId] = {\n      ...newState.contactGather[userId],\n      username,\n      avatar,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMember = (state: ChatState, payload: GroupMember) => {\n  const members: Contact[] = payload.members.map(member => ({\n    ...member,\n    isManager: 0,\n  }));\n\n  const newState = { ...state };\n\n  if (newState.groupGather[payload.groupId].members && members) {\n    newState.groupGather[payload.groupId].members = [\n      ...(state.groupGather[payload.groupId].members as Contact[]),\n      ...members,\n    ];\n  } else {\n    newState.groupGather[payload.groupId] = {\n      ...newState.groupGather[payload.groupId],\n      members,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  return newState;\n};\n\nconst markPrivateMessagesRead = (\n  state: ChatState,\n  userId: number,\n) => {\n  const newState = { ...state };\n\n  if (newState.contactGather[userId]) {\n    const updatedValue = { ...newState.contactGather[userId] };\n\n    if (updatedValue.messages) {\n      for (let i = 0; i < updatedValue.messages.length; i++)\n        updatedValue.messages[i] = {\n          ...updatedValue.messages[i],\n          status: 1,\n        };\n    }\n    newState.contactGather[userId] = updatedValue;\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n  // помечаем все не прочитанные как прочитанные\n  if (newState.activeRoom != null && newState.activeRoom.messages) {\n    for (let i = 0; i < newState.activeRoom.messages.length; i++)\n      newState.activeRoom.messages[i] = {\n        ...newState.activeRoom.messages[i],\n        status: 1,\n      };\n  }\n  return newState;\n};\n\nconst addPrivateMessages = (\n  state: ChatState,\n  data: AddPrivateMessages,\n) => {\n  const newState = { ...state };\n\n  const { messages, contactId } = data;\n\n  if (newState.contactGather[contactId]) {\n    newState.contactGather[contactId] = {\n      ...newState.contactGather[contactId],\n      messages: [\n        ...(messages || []),\n        ...(newState.contactGather[contactId].messages || []),\n      ],\n      noMoreData: messages?.length\n        ? messages?.length < data.pageSize\n        : false,\n    };\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst addGroupMessages = (\n  state: ChatState,\n  data: AddGroupMessages,\n) => {\n  const newState = { ...state };\n\n  const { groupId, messages, userArr: users } = data;\n  if (newState.groupGather[groupId]) {\n    newState.groupGather[groupId] = {\n      ...newState.groupGather[groupId],\n      messages: [\n        ...(messages || []),\n        ...(newState.groupGather[groupId].messages || []),\n      ],\n      noMoreData: messages?.length\n        ? messages?.length < data.pageSize\n        : false,\n    };\n  }\n\n  newState.userGather = { ...newState.userGather };\n  for (const user of users) {\n    if (!newState.userGather[user.userId]) {\n      newState.userGather[user.userId] = user;\n    }\n  }\n\n  // обновляем активный чат\n  newState.activeRoom = getFreshActiveRoom(newState);\n\n  return newState;\n};\n\nconst setActiveRoom = (state: ChatState, data: SetActiveRoom) => {\n  //if (state.activeRoom && data.ifNotExists) return state;\n  return {\n    ...state,\n    chatOld:\n      state.activeRoom != null ? { ...state.activeRoom } : null,\n    activeRoom: data.groupId\n      ? state.groupGather[data.groupId]\n      : data.contactId\n      ? state.contactGather[data.contactId]\n      : null,\n  };\n};\n\nconst setToken = (state: ChatState, token: string): ChatState => {\n  return {\n    ...state,\n    token,\n  };\n};\n\nconst clearUser = (state: ChatState): ChatState => {\n  return {\n    ...state,\n    token: '',\n    user: emptyUser,\n  };\n};\n\nconst setConference = (\n  state: ChatState,\n  conference: ConferenceData,\n): ChatState => {\n  return {\n    ...state,\n    conference: {\n      data: { ...conference },\n      joined: conference?.userId === state.user.userId,\n      ringPlayed: conference?.userId !== state.user.userId,\n    },\n  };\n};\n\nconst pauseConference = (\n  state: ChatState,\n  conference: ConferenceData,\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: {\n      data: { ...state.conference.data },\n      joined: false,\n      ringPlayed: false,\n    },\n  };\n};\n\nconst stopConference = (\n  state: ChatState,\n  conference: ConferenceData,\n): ChatState => {\n  if (state.conference.data?.id !== conference?.id) return state;\n  return {\n    ...state,\n    conference: { data: null, joined: false, ringPlayed: false },\n  };\n};\n\nfunction chatReducer(state: ChatState, action: Action): ChatState {\n  switch (action.type) {\n    case 'SET_GROUP_GATHER':\n      return {\n        ...state,\n        groupGather: {\n          ...state.groupGather,\n          [(action.payload as Group)\n            .groupId]: action.payload as Group,\n        },\n      };\n    case 'SET_CONTACT_GATHER':\n      return {\n        ...state,\n        contactGather: {\n          ...state.contactGather,\n          [(action.payload as Contact)\n            .userId]: action.payload as Contact,\n        },\n      };\n    case 'DEL_GROUP':\n      return delGroup(state, action.payload as number);\n    case 'DEL_GROUP_MEMBER':\n      return delGroupMember(state, action.payload as GroupMap);\n    case 'DEL_CONTACT':\n      return delContact(state, (action.payload as Contact).userId);\n    case 'SET_USER_GATHER':\n      return {\n        ...state,\n        userGather: {\n          ...state.userGather,\n          [(action.payload as User).userId]: action.payload as User,\n        },\n      };\n    case 'UPDATE_ACTIVE_ROOM':\n      return { ...state, activeRoom: getActiveRoom(state) };\n    case 'SET_ACTIVE_ROOM':\n      return setActiveRoom(state, action.payload as SetActiveRoom);\n    case 'USER_ONLINE':\n      return setUserOnline(state, action.payload as number, 1);\n    case 'USER_OFFLINE':\n      return setUserOnline(state, action.payload as number, 0);\n    case 'ADD_GROUP_MESSAGE':\n      return addGroupMessage(state, action.payload as GroupMessage);\n    case 'ADD_PRIVATE_MESSAGE':\n      return addPrivateMessage(\n        state,\n        action.payload as PrivateMessage,\n      );\n    case 'ADD_GROUP_UNREAD_GATHER':\n      return groupUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1,\n      );\n    case 'ADD_CONTACT_UNREAD_GATHER':\n      return contactUnreadGather(\n        state,\n        action.payload as number,\n        (x?: number) => (x || 0) + 1,\n      );\n    case 'SET_TYPING':\n      return { ...state, typing: action.payload as SetTyping };\n    case 'LOSE_GROUP_UNREAD_GATHER':\n      return groupUnreadGather(\n        state,\n        action.payload as number,\n        () => 0,\n      );\n    case 'LOSE_CONTACT_UNREAD_GATHER':\n      return contactUnreadGather(\n        state,\n        action.payload as number,\n        () => 0,\n      );\n    case 'REVOKE_MESSAGE':\n      return revokeMessage(state, action.payload as MessageOperation);\n    case 'UPDATE_GROUP_INFO':\n      return updateGroupInfo(state, action.payload as Group);\n    case 'UPDATE_USER_INFO':\n      return updateUserInfo(state, action.payload as User);\n    case 'ADD_GROUP_MEMBER':\n      return addGroupMember(state, action.payload as GroupMember);\n    case 'SET_CONFERENCE':\n      return setConference(state, action.payload as ConferenceData);\n    case 'JOIN_CONFERENCE':\n      return {\n        ...state,\n        conference: {\n          data: { ...(action.payload as ConferenceData) },\n          joined: true,\n          ringPlayed: false,\n        },\n      };\n    case 'PAUSE_CONFERENCE':\n      return pauseConference(state, action.payload as ConferenceData);\n    case 'STOP_CONFERENCE':\n      return stopConference(state, action.payload as ConferenceData);\n    case 'MARK_PRIVATE_MESSAGES_READ':\n      return markPrivateMessagesRead(state, action.payload as number);\n    case 'ADD_PRIVATE_MESSAGES':\n      return addPrivateMessages(\n        state,\n        action.payload as AddPrivateMessages,\n      );\n    case 'ADD_GROUP_MESSAGES':\n      return addGroupMessages(\n        state,\n        action.payload as AddGroupMessages,\n      );\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload as boolean,\n        error: '',\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload as string,\n        success: undefined,\n      };\n    case 'SET_SUCCES':\n      return {\n        ...state,\n        success: action.payload as string,\n        error: undefined,\n      };\n    case 'SET_TOKEN':\n      return setToken(state, action.payload as string);\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload as User,\n      };\n    case 'CLEAR_USER':\n      return clearUser(state);\n    case 'CLEAR_CHAT_DATA':\n      return {\n        ...state,\n        activeRoom: null,\n        groupGather: {},\n        userGather: {},\n        contactGather: {},\n        conference: {\n          data: null,\n          joined: false,\n          ringPlayed: false,\n        },\n        typing: null,\n      };\n    case 'SET_OPERATORS':\n      return {\n        ...state,\n        operators: action.payload as Contact[],\n      };\n    case 'SET_VISIT_DATA':\n      return {\n        ...state,\n        visitData: action.payload as VisitData[],\n      };\n  }\n\n  return state;\n}\n\nexport type ChatDispatch = React.Dispatch<Action>;\nconst emptyDispatch: ChatDispatch = () => null;\n\ntype ChatProviderProps = {\n  defLang: string | undefined;\n  token: string;\n  refreshToken: string;\n  children: JSX.Element | JSX.Element[];\n};\n\nexport const ChatContext = React.createContext({\n  state: emptyChatState,\n  dispatch: emptyDispatch,\n});\n\nexport const ChatProvider: React.FC<ChatProviderProps> = (\n  props: ChatProviderProps,\n) => {\n  emptyUser.langCode = props.defLang;\n\n  const token = props.token;\n  const refreshToken = props.token;\n  const chatState: ChatState = {\n    ...emptyChatState,\n    token,\n    refreshToken,\n  };\n\n  const [state, dispatch] = React.useReducer(chatReducer, chatState);\n\n  return (\n    <ChatContext.Provider value={{ state, dispatch }}>\n      {props.children}\n    </ChatContext.Provider>\n  );\n};\n","import React from 'react';\nimport {\n  Box,\n  CardContent,\n  CircularProgress,\n  List,\n  Backdrop,\n  Fab,\n  Typography,\n} from '@mui/material';\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport KeyboardArrowDown from '@mui/icons-material/KeyboardArrowDown';\n\nimport Message from './Message';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { getChatId } from '../utils/common';\nimport { ChatMessage, ChatRoom, User, ContactGather } from '../types';\nimport { ChatContext } from '../context/ChatContext';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    messageListOuter: {\n      flex: 1,\n      overflowY: 'auto',\n      margin: 0,\n      padding: 0,\n    },\n    messageList: {\n      height: '100%',\n      overflowY: 'auto',\n      scrollbarWidth: 'thin',\n      scrollbarColor: `${theme.palette.primary.light} #fff`,\n    },\n    img: {\n      cursor: 'pointer',\n      borderRadius: theme.spacing(1.2),\n\n      maxWidth: 'auto',\n      maxHeight: '95%',\n      [theme.breakpoints.down('sm')]: {\n        maxWidth: 'auto',\n        maxHeight: '95%',\n      },\n    },\n\n    arrowDown: {\n      position: 'absolute',\n      left: '94.5%',\n      bottom: 105,\n      [theme.breakpoints.down('md')]: {\n        left: '91.5%',\n        bottom: 95,\n      },\n      [theme.breakpoints.down('sm')]: {\n        left: '84%',\n        bottom: 95,\n      },\n    },\n  }),\n);\n\ntype InitialMenuState = {\n  message: ChatMessage | null;\n  mouseX: null | number;\n  mouseY: null | number;\n  canCopy: boolean;\n  canDelete: boolean;\n};\n\ntype RoomMessageListProps = {\n  apiUrl: string;\n  user: User;\n  users: ContactGather;\n  chat: ChatRoom | null;\n  loading: boolean;\n  pageSize: number;\n\n  initialMenuState: InitialMenuState;\n\n  onNeedMoreMessages: (chat: ChatRoom) => Promise<void>;\n  onMeesageDelete?: (chat: ChatRoom, message: ChatMessage) => void;\n  setMenuState: React.Dispatch<\n    React.SetStateAction<InitialMenuState>\n  >;\n};\n\nconst Loading = ({ loading }: { loading: boolean }) => {\n  return (\n    loading && (\n      <Box sx={{ width: '100%', mx: 'auto', textAlign: 'center' }}>\n        <CircularProgress />\n      </Box>\n    )\n  );\n};\n\nconst RoomMessageList: React.FC<RoomMessageListProps> = (\n  props: RoomMessageListProps,\n) => {\n  const {\n    apiUrl,\n    user,\n    users,\n    chat,\n    loading,\n    pageSize,\n    setMenuState,\n    initialMenuState,\n  } = props;\n  const classes = useStyles();\n  const { dispatch } = React.useContext(ChatContext);\n  const [scrollDownButton, setScrollDownButton] = React.useState(\n    false,\n  );\n\n  const messages = chat?.messages;\n  const messageCount = messages?.length || 0;\n  // const lastMessage =\n  //   chat?.messages && chat.messages[messageCount - 1];\n\n  const [gap, setGap] = React.useState(564);\n\n  const messageCountUnreaded =\n    messages &&\n    messages.filter(it => it?.status != null && it.status === 0);\n\n  // const refOnMess = React.useRef<HTMLDivElement>(null);\n  // const refOnLastMess = React.useRef<HTMLDivElement>(null);\n  const refList = React.useRef<HTMLUListElement>(null);\n\n  const handleMenuPopup = (\n    message: ChatMessage,\n    event: React.MouseEvent<HTMLElement>,\n  ) => {\n    const canCopy = message.messageType === 'text';\n    const canDelete =\n      user.userId === message.userId &&\n      !!props.onMeesageDelete &&\n      new Date().getTime() - new Date(message.cdate).getTime() <=\n        1000 * 60 * 2;\n    if (!canCopy && !canDelete) {\n      setMenuState(initialMenuState);\n      return;\n    }\n    event.preventDefault();\n    setMenuState({\n      message,\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4,\n      canCopy,\n      canDelete,\n    });\n  };\n\n  const [viewerData, setViewerData] = React.useState<{\n    visible: boolean;\n    src: string;\n  }>({\n    visible: false,\n    src: '',\n  });\n\n  React.useEffect(() => {\n    const first = () => {\n      setTimeout(() => {\n        if (refList.current) {\n          dispatch({\n            type: 'MARK_PRIVATE_MESSAGES_READ',\n            payload: user.userId,\n          });\n          refList.current.scrollTop = refList.current.scrollHeight;\n        }\n      }, 1000);\n    };\n    first();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  React.useEffect(() => {\n    scrollDown();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getChatId(chat)]);\n\n  const scrollDown = () => {\n    if (refList.current) {\n      dispatch({\n        type: 'MARK_PRIVATE_MESSAGES_READ',\n        payload: user.userId,\n      });\n\n      refList.current.scrollTop = refList.current.scrollHeight;\n      const newGap =\n        refList.current.scrollHeight - refList.current.scrollTop;\n\n      setGap(newGap);\n    }\n  };\n\n  return (\n    <CardContent className={classes.messageListOuter}>\n      <List className={classes.messageList} ref={refList}>\n        <InfiniteScroll\n          pageStart={0}\n          loadMore={() => {\n            if (\n              messageCount >= pageSize &&\n              !loading &&\n              props.onNeedMoreMessages &&\n              chat\n            ) {\n              props.onNeedMoreMessages(chat);\n            }\n          }}\n          hasMore={chat && !chat.noMoreData ? true : false}\n          loader={<Loading loading={loading} key={0} />}\n          isReverse\n          useCapture\n          useWindow={false}\n          getScrollParent={() => {\n            if (refList.current) {\n              const diff =\n                refList.current.scrollHeight -\n                refList.current.scrollTop;\n              const isShowButton =\n                refList.current.scrollTop <\n                refList.current.scrollHeight - gap;\n\n              setScrollDownButton(isShowButton);\n              // console.log(\n              //   'scrollTop',\n              //   refList.current.scrollTop,\n              //   'scrollHeight',\n\n              //   refList.current.scrollHeight,\n              //   'diff:',\n              //   diff,\n              // );\n              if (diff > gap && diff < gap + 90) {\n                scrollDown();\n              }\n\n              //\n            }\n            return refList.current;\n          }}\n        >\n          {messages &&\n            (messages as ChatMessage[]).map((message, inx) => (\n              <Message\n                key={inx}\n                apiUrl={apiUrl}\n                user={user}\n                message={message}\n                owner={users[message.userId]}\n                isGroupMessage={!!chat?.groupId}\n                isUserFirst={\n                  inx === 0 ||\n                  messages[inx - 1].messageType === 'notify' ||\n                  messages[inx - 1].userId !== messages[inx].userId\n                }\n                isUserLast={\n                  inx === messages.length - 1 ||\n                  messages[inx + 1].messageType === 'notify' ||\n                  messages[inx + 1].userId !== messages[inx].userId\n                }\n                onContextMenu={event =>\n                  handleMenuPopup(message, event)\n                }\n                //refOnMess={defineRefOnMess(inx)}\n                setViewerData={setViewerData}\n              />\n            ))}\n        </InfiniteScroll>\n      </List>\n      {scrollDownButton && (\n        <Box className={classes.arrowDown} textAlign=\"center\">\n          <Fab\n            color=\"info\"\n            aria-label=\"add\"\n            size=\"medium\"\n            onClick={scrollDown}\n          >\n            <KeyboardArrowDown />\n          </Fab>\n          {messageCountUnreaded != null &&\n            messageCountUnreaded.length > 0 && (\n              <Fab\n                color=\"warning\"\n                aria-label=\"add\"\n                size=\"small\"\n                sx={{\n                  width: 24,\n                  height: 24,\n                  minHeight: 24,\n                  position: 'relative',\n                  top: -10,\n                  pointerEvents: 'none',\n                }}\n              >\n                <Typography\n                  variant=\"body2\"\n                  sx={theme => ({\n                    color: theme.palette.background.default,\n                  })}\n                >\n                  {messageCountUnreaded.length}\n                </Typography>\n              </Fab>\n            )}\n        </Box>\n      )}\n      {viewerData.visible && (\n        <Backdrop\n          sx={{\n            color: '#fff',\n            zIndex: (theme: Theme) => theme.zIndex.drawer + 1,\n          }}\n          open={viewerData.visible}\n          onClick={() => {\n            setViewerData({ visible: false, src: '' });\n          }}\n        >\n          <img src={viewerData.src} className={classes.img} alt=\"\" />\n        </Backdrop>\n      )}\n    </CardContent>\n  );\n};\n\nexport default RoomMessageList;\n","import React, { useCallback } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  ListItemIcon,\n  Menu,\n  MenuItem,\n  IconButton,\n  useMediaQuery,\n  Tooltip,\n} from '@mui/material';\nimport { Theme } from '@mui/material/styles';\nimport { makeStyles, createStyles } from '@mui/styles';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Entry from './Entry';\nimport RoomHeader from './RoomHeader';\nimport RoomMessageList from './RoomMessageList';\nimport { useTranslation } from 'react-i18next';\nimport {\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  SetTyping,\n  User,\n  Contact,\n  ConferenceData,\n  Group,\n  ContactGather,\n  VisitData,\n} from '../types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      minWidth: 360,\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n\n    roomHeader: {\n      flex: 1,\n    },\n\n    flexAll: {\n      flex: '1 1 auto',\n    },\n    flexEnd: {\n      justifyContent: 'flex-end',\n    },\n  }),\n);\n\nconst initialMenuState = {\n  message: null,\n  mouseX: null,\n  mouseY: null,\n  canCopy: false,\n  canDelete: false,\n};\n\ntype RoomProps = {\n  apiUrl: string;\n  user: User;\n  users: ContactGather;\n  chat: ChatRoom | null;\n  typing: SetTyping | null;\n  conference: ConferenceData | null;\n  visitData: VisitData[];\n  conferenceJoined: boolean;\n  loading: boolean;\n  pageSize: number;\n  operators: Contact[];\n  onExitRoom?: (chat: ChatRoom) => void;\n  onEnterRoom?: (chat: ChatRoom) => void;\n  onNeedMoreMessages: (chat: ChatRoom) => Promise<void>;\n  onMeesageDelete?: (chat: ChatRoom, message: ChatMessage) => void;\n  onTyping?: (chat: ChatRoom) => void;\n  onSendMessage?: (chat: ChatRoom, data: SendMessage) => void;\n  onVideoCall?: (\n    chat: ChatRoom,\n    visitId?: number,\n    recreate?: boolean,\n  ) => void;\n  onVideoEnd?: (chat: ConferenceData) => void;\n  onConferencePause?: (conference: ConferenceData) => void;\n  onOperatorAdd?: (chat: Group, operator: Contact) => void;\n  onLeaveGroup?: (chat: Group) => void;\n};\n\nconst Room: React.FC<RoomProps> = (props: RoomProps) => {\n  const {\n    apiUrl,\n    user,\n    users,\n    chat,\n    typing,\n    conference,\n    visitData,\n    conferenceJoined,\n    loading,\n    pageSize,\n  } = props;\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down('sm'),\n  );\n\n  const [menuState, setMenuState] = React.useState<{\n    message: ChatMessage | null;\n    mouseX: null | number;\n    mouseY: null | number;\n    canCopy: boolean;\n    canDelete: boolean;\n  }>(initialMenuState);\n\n  const handleMenuClose = () => {\n    setMenuState(initialMenuState);\n  };\n\n  const handleCopy = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (!message) return;\n    navigator.clipboard.writeText(message.content);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [menuState.message]);\n\n  const handleDelete = useCallback(() => {\n    const { message } = menuState;\n    setMenuState(initialMenuState);\n    if (props.onMeesageDelete && chat && message)\n      props.onMeesageDelete(chat, message);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [menuState.message]);\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <Box display=\"flex\" flexDirection=\"row\">\n        {chat && isMobile && (\n          <Tooltip title=\"Вернуться в конференцию\">\n            <IconButton\n              aria-label=\"exit room\"\n              onClick={() =>\n                props.onExitRoom && props.onExitRoom(chat)\n              }\n            >\n              <ArrowBackIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {/* {!isMobile && <CheckAudiVideoPerm />} */}\n\n        <RoomHeader\n          apiUrl={apiUrl}\n          user={user}\n          chat={chat}\n          typing={typing}\n          conference={conference}\n          visitData={visitData}\n          conferenceJoined={conferenceJoined}\n          operators={props.operators}\n          className={classes.roomHeader}\n          onVideoCall={props.onVideoCall}\n          onVideoEnd={props.onVideoEnd}\n          onConferencePause={props.onConferencePause}\n          onOperatorAdd={props.onOperatorAdd}\n          onLeaveGroup={props.onLeaveGroup}\n        />\n      </Box>\n      <Divider />\n      <RoomMessageList\n        apiUrl={apiUrl}\n        user={user}\n        users={users}\n        chat={chat}\n        loading={loading}\n        pageSize={pageSize}\n        initialMenuState={initialMenuState}\n        onNeedMoreMessages={props.onNeedMoreMessages}\n        onMeesageDelete={props.onMeesageDelete}\n        setMenuState={setMenuState}\n      />\n      <Divider />\n      <CardContent>\n        <Entry\n          chat={chat}\n          onTyping={props.onTyping}\n          onSendMessage={props.onSendMessage}\n        />\n      </CardContent>\n      <Menu\n        keepMounted\n        open={menuState.mouseY !== null}\n        onClose={handleMenuClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          menuState.mouseY !== null && menuState.mouseX !== null\n            ? { top: menuState.mouseY, left: menuState.mouseX }\n            : undefined\n        }\n      >\n        <MenuItem onClick={handleCopy} disabled={!menuState.canCopy}>\n          <span className={classes.flexAll}>\n            {t('CHAT.MESSAGE.MENU.COPY')}\n          </span>\n          <ListItemIcon className={classes.flexEnd}>\n            <FileCopyIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n        <MenuItem\n          onClick={handleDelete}\n          disabled={!menuState.canDelete}\n        >\n          <span className={classes.flexAll}>\n            {t('CHAT.MESSAGE.MENU.DELETE')}\n          </span>\n          <ListItemIcon className={classes.flexEnd}>\n            <DeleteIcon fontSize=\"small\" />\n          </ListItemIcon>\n        </MenuItem>\n      </Menu>\n    </Card>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport {\n  Avatar,\n  Badge,\n  Box,\n  Chip,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport { makeStyles, createStyles, withStyles } from \"@mui/styles\";\n\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport { combineURLs, formatTime, getChatName } from \"../utils/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatMessage, ChatRoom, Contact, Group, SetTyping } from \"../types\";\n\ntype RoomListItemProps = {\n  apiUrl: string;\n  chat: ChatRoom;\n  active: boolean;\n  typing: SetTyping | null;\n  onClick: React.MouseEventHandler<HTMLDivElement> | undefined;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      flex: \"1 1 auto\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\"\n    },\n    time: {\n      paddingLeft: theme.spacing(1),\n      justifyContent: \"flex-end\",\n      whiteSpace: \"nowrap\"\n    },\n    unread: {\n      justifyContent: \"flex-end\",\n      maxHeight: 20\n    },\n    avatarGroup: {\n      backgroundColor: \"#28B7C6\",\n      color: \"#fff\"\n    }\n  })\n);\n\nconst getMessageText = (\n  message: ChatMessage | null,\n  t: (key: string) => string\n) => {\n  if (!message) return null;\n  switch (message.messageType) {\n    case \"text\":\n      return message.content;\n    case \"image\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.IMAGE\")}]`;\n    case \"video\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.VIDEO\")}]`;\n    case \"file\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.FILE\")}]`;\n    case \"notify\":\n      return `[${t(\"CHAT.MESSAGE.TYPE.NOTIFY\")}]`;\n    default:\n      return null;\n  }\n};\n\nconst TypingBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: \"#44b700\",\n      color: \"#44b700\",\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n      \"&::after\": {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"50%\",\n        animation: \"$ripple 1.2s infinite ease-in-out\",\n        border: \"1px solid currentColor\",\n        content: '\"\"'\n      }\n    },\n    \"@keyframes ripple\": {\n      \"0%\": {\n        transform: \"scale(.8)\",\n        opacity: 1\n      },\n      \"100%\": {\n        transform: \"scale(2.4)\",\n        opacity: 0\n      }\n    }\n  })\n)(Badge);\n\nconst OnlineBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      backgroundColor: theme.palette.primary.main,\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`\n    }\n  })\n)(Badge);\n\nconst contactAvatar = (\n  apiUrl: string,\n  contact: Contact,\n  typing: SetTyping | null\n): JSX.Element => {\n  const avatar = (\n    <Avatar\n      alt={contact.username}\n      src={contact.avatar ? combineURLs(apiUrl, contact.avatar) : \"\"}\n    />\n  );\n\n  const isTyping = !!typing?.contactId && typing?.userId === contact.userId;\n  if (isTyping)\n    return (\n      <TypingBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </TypingBadge>\n    );\n\n  if (contact?.online)\n    return (\n      <OnlineBadge\n        overlap=\"circular\"\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\"\n        }}\n        variant=\"dot\"\n      >\n        {avatar}\n      </OnlineBadge>\n    );\n\n  return avatar;\n};\n\nconst RoomListItem: React.FC<RoomListItemProps> = (\n  props: RoomListItemProps\n) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { apiUrl, chat, typing } = props;\n  const roomName = getChatName(chat);\n\n  const avatar = (chat as Group).groupId ? (\n    <Avatar alt={roomName} className={classes.avatarGroup}>\n      <GroupIcon />{\" \"}\n    </Avatar>\n  ) : (\n    contactAvatar(apiUrl, chat as Contact, typing)\n  );\n\n  const lastMessage =\n    chat.messages && chat.messages.length > 0\n      ? chat.messages[chat.messages.length - 1]\n      : null;\n\n  const roomText = getMessageText(lastMessage, t);\n  const roomTime = lastMessage?.cdate;\n\n  return (\n    <ListItem button selected={props.active} onClick={props.onClick}>\n      <ListItemAvatar>{avatar}</ListItemAvatar>\n      <ListItemText\n        secondaryTypographyProps={{ component: \"span\" }}\n        primary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomName}</span>\n            <span className={classes.time}>{formatTime(roomTime)}</span>\n          </Box>\n        }\n        secondary={\n          <Box display=\"flex\" flexDirection=\"row\">\n            <span className={classes.main}>{roomText}</span>\n            {chat.unreadCount ? (\n              <Chip\n                className={classes.unread}\n                component=\"span\"\n                size=\"small\"\n                color=\"primary\"\n                label={chat.unreadCount}\n              />\n            ) : null}\n          </Box>\n        }\n      />\n    </ListItem>\n  );\n};\nexport default RoomListItem;\n","import React from \"react\";\nimport List from \"@mui/material/List\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport { Card, CardHeader, Divider, TextField } from \"@mui/material\";\nimport RoomListItem from \"./RoomListItem\";\nimport {\n  chatRoomComparer,\n  getChatId,\n  getChatName,\n  isEmpty\n} from \"../utils/common\";\nimport { useTranslation } from \"react-i18next\";\nimport { ChatRoom, Contact, Group, SetTyping, User } from \"../types\";\nimport { makeStyles } from \"@mui/styles\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  searchField: {\n    width: \"100%\"\n  },\n  listStyle: {\n    height: \"89.5%\",\n    overflowY: \"auto\",\n    scrollbarWidth: \"thin\",\n    scrollbarColor: `${theme.palette.primary.light} #fff`\n  }\n}));\n\ntype RoomListProps = {\n  apiUrl: string;\n  user: User;\n  activeRoom: ChatRoom | null;\n  groups: Group[];\n  contacts: Contact[];\n  typing: SetTyping | null;\n  onChangeChat?: (chat: ChatRoom) => void;\n};\n\nconst filterChats = (chats: ChatRoom[], filter: string | null): ChatRoom[] => {\n  if (filter === null) return chats;\n  const lowerFilter = filter.toLowerCase();\n  return chats.filter(\n    chat =>\n      getChatName(chat)\n        .toLowerCase()\n        .indexOf(lowerFilter.toLowerCase()) !== -1\n  );\n};\n\nconst sortChats = (\n  userId: number,\n  groups: ChatRoom[],\n  contacts: ChatRoom[]\n) => {\n  let roomArr = [...groups, ...contacts];\n  //console.log('groups', groups, 'contacts', contacts);\n\n  // Сортировать окно чата (по времени последних сообщений)\n  roomArr = roomArr.sort(chatRoomComparer);\n\n  // Проверяем, есть ли список, который нужно закрепить\n  const topChatId = localStorage.getItem(`${userId}-topChatId`) as string;\n  if (topChatId) {\n    const chat = roomArr.find(c => getChatId(c) === topChatId);\n    if (chat) {\n      // На первое место\n      roomArr = roomArr.filter(k => getChatId(k) !== topChatId);\n      chat.isTop = true;\n      roomArr.unshift(chat);\n    }\n  }\n\n  return roomArr;\n};\n\nconst RoomList: React.FC<RoomListProps> = (props: RoomListProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const [chats, setChats] = React.useState<ChatRoom[]>(\n    sortChats(\n      props.user.userId,\n      filterChats(props.groups, null),\n      filterChats(props.contacts, null)\n    )\n  );\n\n  const onSearchChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    //console.log(\"e.target.value\", e.target.value);\n\n    setChats(\n      sortChats(\n        props.user.userId,\n        filterChats(props.groups, e.target.value),\n        filterChats(props.contacts, e.target.value)\n      )\n    );\n  };\n  //const activeItem = (id: number) => id === props.activeRoom?.userId;\n\n  //console.log(\"chats\", chats);\n\n  return (\n    <Card elevation={1} className={classes.root}>\n      <CardHeader\n        title={\n          <TextField\n            className={classes.searchField}\n            label={t(\"CHAT.INPUT_SEARCH_CONTACT\")}\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            onChange={onSearchChange}\n          />\n        }\n      />\n      <Divider />\n      <List aria-label=\"rooms\" className={classes.listStyle}>\n        {!isEmpty(chats) &&\n          chats.map(\n            chat =>\n              !isEmpty(chat) && (\n                <RoomListItem\n                  key={getChatId(chat)}\n                  apiUrl={props.apiUrl}\n                  chat={chat}\n                  active={chat === props.activeRoom}\n                  typing={props.typing}\n                  onClick={() =>\n                    props.onChangeChat != null && props.onChangeChat(chat)\n                  }\n                />\n              )\n          )}\n      </List>\n    </Card>\n  );\n};\nexport default RoomList;\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport { ConferenceData } from \"../types\";\nfunction updateUrlParameter(url: string, param: string, value: string) {\n  const regex = new RegExp(\"(\" + param + \"=)[^&]+\");\n  return url.replace(regex, \"$1\" + value);\n}\nconst transLang = (lang: string) =>\n  lang === \"ru\" ? \"rus\" : lang === \"fr\" ? \"fra\" : lang === \"en\" ? \"eng\" : \"\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 4\n  }\n}));\n\ntype ConferenceProps = {\n  conference: ConferenceData | null;\n  onClose: (conference: ConferenceData | null) => void;\n  langCode?: string | null;\n};\n\nconst Conference: React.FC<ConferenceProps> = ({\n  conference,\n  onClose,\n  langCode = \"en\"\n}: ConferenceProps) => {\n  const classes = useStyles();\n  const ref = React.useRef<HTMLIFrameElement>(null);\n  const confUrl =\n    conference?.url && langCode\n      ? updateUrlParameter(conference?.url, \"lang\", transLang(langCode))\n      : \"\";\n\n  useEffect(() => {\n    const listener = ({ source, data }: MessageEvent) => {\n      if (source === ref.current?.contentWindow) {\n        const { type } = data;\n\n        if (\n          [\n            \"notSupported\",\n            \"connectionFail\",\n            // \"loginFail\",\n            \"callFail\",\n            \"hangUp\",\n            \"remoteHangUp\"\n            // \"onParticipantLeft\"\n          ].includes(type)\n        )\n          onClose(conference);\n      }\n    };\n    window.addEventListener(\"message\", listener);\n    return () => {\n      window.removeEventListener(\"message\", listener);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conference?.id, langCode]);\n\n  return (\n    <iframe\n      title=\"conference\"\n      className={classes.root}\n      src={confUrl}\n      allowFullScreen\n      allow=\"microphone; camera; autoplay; display-capture\"\n      ref={ref}\n    />\n  );\n};\nexport default Conference;\n","import React from \"react\";\nimport { Avatar, Button, Paper } from \"@mui/material\";\nimport { ConferenceData, Contact } from \"../types\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from \"@mui/styles\";\nimport { combineURLs } from \"../utils/common\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  pulse: {\n    height: 100,\n    width: 100,\n    borderRadius: \"50%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\",\n    \"&::before\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\"\n    },\n    \"&::after\": {\n      content: \"''\",\n      position: \"absolute\",\n      border: \"1px solid green\",\n      width: \"calc(100% + 40px)\",\n      height: \"calc(100% + 40px)\",\n      borderRadius: \"50%\",\n      animation: \"$pulse 1s linear infinite\",\n      animationDelay: \"0.3s\"\n    }\n  },\n  avatar: {\n    width: \"80%\",\n    height: \"80%\"\n  },\n  footer: {\n    width: \"100%\",\n    alignSelf: \"flex-end\",\n    paddingTop: 64,\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  \"@keyframes pulse\": {\n    \"0%\": {\n      transform: \"scale(0.5)\",\n      opacity: 0\n    },\n    \"50%\": {\n      transform: \"scale(1)\",\n      opacity: 1\n    },\n    \"100%\": {\n      transform: \"scale(1.3)\",\n      opacity: 0\n    }\n  }\n}));\n\ntype ConferenceCallProps = {\n  conference: ConferenceData;\n  contact: Contact;\n  apiUrl: string;\n  onAccept: (conference: ConferenceData) => void;\n};\n\nconst ConferenceCall: React.FC<ConferenceCallProps> = ({\n  conference,\n  contact,\n  apiUrl,\n  onAccept\n}: ConferenceCallProps) => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.pulse}>\n        {contact ? (\n          <Avatar\n            className={classes.avatar}\n            alt={contact.username}\n            src={contact.avatar ? combineURLs(apiUrl, contact.avatar) : \"\"}\n          />\n        ) : (\n          <Avatar className={classes.avatar} />\n        )}\n      </div>\n      <div className={classes.footer}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => onAccept(conference)}\n        >\n          {t(\"CHAT.CONFERENCE.JOIN\")}\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n\nexport default ConferenceCall;\n","import React, { createContext, useCallback, useContext } from 'react';\nimport { ChatContext, ChatDispatch } from './ChatContext';\nimport axios, { AxiosError, AxiosInstance } from 'axios';\nimport {\n  Contact,\n  Group,\n  PagingResponse,\n  PrivateMessage,\n} from '../types';\n\nexport interface IRestContext {\n  apiUrl: string;\n  pageSize: number;\n  fetch: AxiosInstance | null;\n  getPrivateMessages: (chat: Contact) => Promise<void>;\n  getGroupMessages: (chat: Group) => Promise<void>;\n  getUserByMmk: (\n    mmkId: string | null,\n    guid: string | null,\n  ) => Promise<number | undefined>;\n}\nconst initialContext = {} as IRestContext;\n\nexport const RestContext: React.Context<IRestContext> = createContext(\n  initialContext,\n);\n\ntype RestProviderProps = {\n  baseURLApi: string;\n  pageSize: number;\n  children: JSX.Element;\n};\n\nexport function clearLocalStorage() {\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('refreshToken');\n  localStorage.removeItem('user');\n  localStorage.removeItem('doctor');\n  localStorage.removeItem('chatUser');\n}\nexport const signOut = async () => {\n  try {\n    await axios.post('auth/logout');\n  } catch (error) {\n    console.log('ERROR Logout', error);\n  }\n\n  clearLocalStorage();\n  window.location.href = '/';\n};\n\nexport const getRefreshToken = async (\n  authToken: string,\n  refreshToken: string,\n  dispatch: ChatDispatch,\n) => {\n  try {\n    const { data } = await axios.post('auth/refreshToken', {\n      authToken,\n      refreshToken,\n    });\n    localStorage.setItem('authToken', data?.authToken);\n    localStorage.setItem('refreshToken', data?.refreshToken);\n    window.location.href = '/';\n  } catch (error) {\n    console.log('ERROR RefreshToken', error);\n    dispatch({ type: 'CLEAR_USER' });\n    signOut();\n  }\n};\nexport const RestProvider: React.FC<RestProviderProps> = ({\n  baseURLApi,\n  pageSize,\n  children,\n}: RestProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n  const errorInterceptor = (error: AxiosError) => {\n    if (error.response != null && error.response.status === 401) {\n      getRefreshToken(state.token, state.refreshToken, dispatch);\n    }\n  };\n\n  const fetch: AxiosInstance = axios.create({\n    timeout: 60000, // Таймаут минута\n    baseURL: baseURLApi,\n    headers: {\n      'Cache-Control': 'no-cache',\n      Pragma: 'no-cache',\n      Authorization: `Bearer ${state.token}`,\n    },\n    withCredentials: false,\n  });\n\n  fetch.interceptors.response.use(\n    response => {\n      return response;\n    },\n    (error: AxiosError) => {\n      console.log('ERROR AxiosError');\n      errorInterceptor(error);\n      return Promise.reject(error);\n    },\n  );\n\n  const getPrivateMessages = useCallback(\n    async (chat: Contact, callback?: () => void) => {\n      const contactId = chat.userId;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        const { data } = await fetch.get('/contact/messages', {\n          params: {\n            contactId,\n            current,\n            pageSize,\n          },\n        });\n\n        if (data) {\n          dispatch({\n            type: 'ADD_PRIVATE_MESSAGES',\n            payload: {\n              pageSize,\n              contactId,\n              messages: data as PrivateMessage[],\n            },\n          });\n          if (callback) {\n            callback();\n          }\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: 'SET_ERROR', payload: err.message });\n      } finally {\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    },\n    [dispatch],\n  );\n\n  const getGroupMessages = useCallback(\n    async (chat: Group) => {\n      const { groupId } = chat;\n      const current = chat.messages?.length;\n      try {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        const { data }: { data: PagingResponse } = await fetch.get(\n          '/group/messages',\n          {\n            params: {\n              groupId,\n              current,\n              pageSize,\n            },\n          },\n        );\n        if (data) {\n          dispatch({\n            type: 'ADD_GROUP_MESSAGES',\n            payload: {\n              pageSize,\n              groupId,\n              ...data,\n            },\n          });\n        }\n      } catch (error) {\n        const err = error as AxiosError;\n        dispatch({ type: 'SET_ERROR', payload: err.message });\n      } finally {\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    },\n    [dispatch],\n  );\n\n  const getUserByMmk = async (\n    mmkId: string | null,\n    guid: string | null,\n  ) => {\n    try {\n      const { data }: { data: number } = await fetch.get(\n        '/contact/find',\n        {\n          params: {\n            mmkId,\n            guid,\n          },\n        },\n      );\n      if (data != null) {\n        return data;\n      }\n    } catch (error) {\n      console.log('err getUserByMmk', error);\n    }\n  };\n\n  return (\n    <RestContext.Provider\n      value={{\n        apiUrl: baseURLApi,\n        pageSize,\n        fetch,\n        getPrivateMessages,\n        getGroupMessages,\n        getUserByMmk,\n      }}\n    >\n      {children}\n    </RestContext.Provider>\n  );\n};\n","import React, { createContext, useContext, useEffect } from 'react';\nimport { Socket } from 'socket.io-client';\nimport { useSocket } from '../hooks/useSocket';\nimport {\n  ChatData,\n  Contact,\n  Group,\n  GroupMessage,\n  JoinGroup,\n  MessageOperation,\n  PrivateMessage,\n  SetTyping,\n  User,\n  ConferenceData,\n  SetActiveRoom,\n  GroupMap,\n  VisitData,\n} from '../types';\nimport { ChatContext } from './ChatContext';\nimport { getRefreshToken } from './RestContext';\n\n// Формат ответа сервера\ninterface ServerRes {\n  code: number;\n  msg: string;\n  data: unknown;\n}\n\nexport interface ISocketContext {\n  socket: Socket | null;\n  online: boolean;\n}\nconst initialContext = {\n  online: false,\n} as ISocketContext;\n\nexport const SocketContext: React.Context<ISocketContext> = createContext(\n  initialContext,\n);\n\ntype SocketProviderProps = {\n  wsUrl: string;\n  wsPath: string;\n  children: JSX.Element;\n};\n\nexport const SocketProvider: React.FC<SocketProviderProps> = ({\n  wsUrl,\n  wsPath,\n  children,\n}: SocketProviderProps) => {\n  const { state, dispatch } = useContext(ChatContext);\n  const {\n    socket,\n    online,\n    disconnectSocket,\n    connectSocket,\n  } = useSocket(wsUrl, wsPath, state.token);\n\n  useEffect(() => {\n    if (state.token) {\n      connectSocket();\n    }\n    return () => {\n      disconnectSocket();\n    };\n  }, [state.token, connectSocket]);\n\n  useEffect(() => {\n    if (!state.token) disconnectSocket();\n  }, [state.token, disconnectSocket]);\n\n  // listen unauthorized event\n  useEffect(() => {\n    const listener = (msg: string) => {\n      console.log('unauthorized msg', msg);\n      getRefreshToken(state.token, state.refreshToken, dispatch);\n    };\n\n    // attach\n    socket?.on('unauthorized', listener);\n    // detatch\n    return () => {\n      socket?.off('unauthorized', listener);\n    };\n  }, [socket?.id]);\n\n  // listen chatData event\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      console.log('res.data', res.data);\n      const payload = res.data as ChatData;\n      const groupArr = payload.groupData;\n      const contactArr = payload.contactData;\n      const userArr = payload.userData;\n      dispatch({ type: 'CLEAR_CHAT_DATA' });\n      dispatch({ type: 'SET_USER', payload: payload.user });\n      if (groupArr.length) {\n        for (const group of groupArr) {\n          socket?.emit('joinGroupSocket', {\n            groupId: group.groupId,\n          });\n          dispatch({ type: 'SET_GROUP_GATHER', payload: group });\n        }\n      }\n      if (contactArr.length) {\n        for (const contact of contactArr) {\n          socket?.emit('joinPrivateSocket', {\n            contactId: contact.userId,\n          });\n          dispatch({ type: 'SET_CONTACT_GATHER', payload: contact });\n        }\n      }\n      dispatch({\n        type: 'SET_OPERATORS',\n        payload: payload.operatorData,\n      });\n      if (userArr.length) {\n        for (const user_ of userArr) {\n          dispatch({ type: 'SET_USER_GATHER', payload: user_ });\n        }\n      }\n      dispatch({ type: 'UPDATE_ACTIVE_ROOM' });\n      dispatch({\n        type: 'SET_CONFERENCE',\n        payload: payload.conferenceData,\n      });\n      dispatch({\n        type: 'SET_VISIT_DATA',\n        payload: payload.visitData,\n      });\n    };\n    socket?.on('chatData', listener);\n    return () => {\n      socket?.off('chatData', listener);\n    };\n  }, [socket?.id]);\n\n  // listen user online\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: 'USER_ONLINE', payload: res.data as number });\n    };\n    socket?.on('userOnline', listener);\n    return () => {\n      socket?.off('userOnline', listener);\n    };\n  }, [socket?.id]);\n\n  // listen user offline\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      dispatch({ type: 'USER_OFFLINE', payload: res.data as number });\n    };\n    socket?.on('userOffline', listener);\n    return () => {\n      socket?.off('userOffline', listener);\n    };\n  }, [socket?.id]);\n\n  // listen private socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      console.log('Успешно вошел в приватный чат');\n    };\n    socket?.on('joinPrivateSocket', listener);\n    return () => {\n      socket?.off('joinPrivateSocket', listener);\n    };\n  }, [socket?.id]);\n\n  // listen group socket join\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as JoinGroup;\n      const newUser: Contact = data.user;\n      newUser.online = 1;\n      const { group } = data;\n      const groupObj = state.groupGather[group.groupId];\n      // Информация о присоединении к группе новых пользователей\n      if (\n        groupObj &&\n        !groupObj.members?.find(\n          member => member.userId === newUser.userId,\n        )\n      ) {\n        newUser.isManager = 0;\n        groupObj.members?.push(newUser);\n        // Vue.prototype.$message.info(res.msg);\n      }\n      dispatch({ type: 'SET_USER_GATHER', payload: newUser });\n    };\n    socket?.on('joinGroupSocket', listener);\n    return () => {\n      socket?.off('joinGroupSocket', listener);\n    };\n  }, [socket?.id, state.groupGather]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMessage;\n      dispatch({ type: 'ADD_GROUP_MESSAGE', payload: data });\n      const { activeRoom } = state;\n      if (\n        activeRoom &&\n        (activeRoom as Group).groupId === data.groupId &&\n        data.userId !== state.user.userId\n      ) {\n        socket?.emit('markAsRead', {\n          groupId: data.groupId,\n          _id: data._id,\n        });\n      }\n    };\n\n    socket?.on('groupMessage', listener);\n    return () => {\n      socket?.off('groupMessage', listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    const listener = async (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as PrivateMessage;\n      if (\n        data.contactId === state.user.userId ||\n        data.userId === state.user.userId\n      ) {\n        dispatch({\n          type: 'ADD_PRIVATE_MESSAGE',\n          payload: data,\n        });\n\n        // если есть активная комната и это приватная комната (!groupId && userId) с отправителем сообщения (userId)\n        if (\n          state.activeRoom &&\n          !(state.activeRoom as Group).groupId &&\n          state.activeRoom?.userId === data.userId\n        ) {\n          socket?.emit('markAsRead', {\n            contactId: data.userId,\n            _id: data._id,\n          });\n        }\n      }\n    };\n\n    socket?.on('privateMessage', listener);\n    return () => {\n      socket?.off('privateMessage', listener);\n    };\n  }, [socket?.id, state.activeRoom]);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      if (timer) clearTimeout(timer);\n      dispatch({\n        type: 'SET_TYPING',\n        payload: res.data as SetTyping,\n      });\n      timer = setTimeout(() => {\n        dispatch({ type: 'SET_TYPING', payload: null });\n      }, 1000);\n    };\n    socket?.on('typing', listener);\n    return () => {\n      if (timer) clearTimeout(timer);\n      socket?.off('typing', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      if (data.userId === state.user.userId) {\n        if (data.groupId) {\n          dispatch({\n            type: 'LOSE_GROUP_UNREAD_GATHER',\n            payload: data.groupId,\n          });\n        } else {\n          dispatch({\n            type: 'LOSE_CONTACT_UNREAD_GATHER',\n            payload: data.contactId,\n          });\n        }\n      } else {\n        if (data.contactId)\n          dispatch({\n            type: 'MARK_PRIVATE_MESSAGES_READ',\n            payload: data.userId,\n          });\n      }\n    };\n    socket?.on('markAsRead', listener);\n    return () => {\n      socket?.off('markAsRead', listener);\n    };\n  }, [socket?.id, state.user.userId]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as MessageOperation;\n      dispatch({ type: 'REVOKE_MESSAGE', payload: data });\n    };\n    socket?.on('revokeMessage', listener);\n    return () => {\n      socket?.off('revokeMessage', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: 'SET_GROUP_GATHER',\n        payload: res.data as Group,\n      });\n    };\n    socket?.on('addGroup', listener);\n    return () => {\n      socket?.off('addGroup', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: 'SET_CONTACT_GATHER', payload: data });\n      dispatch({ type: 'SET_USER_GATHER', payload: data });\n      socket?.emit('joinPrivateSocket', {\n        contactId: data.userId,\n      });\n    };\n    socket?.on('addContact', listener);\n    return () => {\n      socket?.off('addContact', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as GroupMap;\n      if (data.userId === state.user.userId) {\n        // если удаляем себя из группы\n        dispatch({ type: 'DEL_GROUP', payload: data.groupId });\n      } else {\n        dispatch({ type: 'DEL_GROUP_MEMBER', payload: data });\n      }\n    };\n    socket?.on('deleteGroup', listener);\n    return () => {\n      socket?.off('deleteGroup', listener);\n    };\n  }, [socket?.id, state.user]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as Contact;\n      dispatch({ type: 'DEL_CONTACT', payload: data });\n    };\n    socket?.on('deleteContact', listener);\n    return () => {\n      socket?.off('deleteContact', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as Group;\n      dispatch({ type: 'UPDATE_GROUP_INFO', payload: data });\n    };\n    socket?.on('updateGroupInfo', listener);\n    return () => {\n      socket?.off('updateGroupInfo', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const data = res.data as User;\n      dispatch({ type: 'UPDATE_USER_INFO', payload: data });\n    };\n    socket?.on('updateUserInfo', listener);\n    return () => {\n      socket?.off('updateUserInfo', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const { group, user: newUser } = res.data as JoinGroup;\n\n      if (!state.groupGather[group.groupId]) {\n        console.log('joined to a new group');\n        // Если группы еще у нас нет, то получаем информацию о пользователях в группе\n        socket?.emit('chatData');\n      } else if (newUser.userId !== state.user.userId) {\n        // Новые пользователи присоединяются к группе\n        dispatch({\n          type: 'ADD_GROUP_MEMBER',\n          payload: {\n            groupId: group.groupId,\n            members: [newUser],\n          },\n        });\n      }\n    };\n    socket?.on('joinGroup', listener);\n    return () => {\n      socket?.off('joinGroup', listener);\n    };\n  }, [socket?.id, state.user, state.groupGather]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: 'SET_CONFERENCE',\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on('startConference', listener);\n    return () => {\n      socket?.off('startConference', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: 'PAUSE_CONFERENCE',\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on('pauseConference', listener);\n    return () => {\n      socket?.off('pauseConference', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: 'STOP_CONFERENCE',\n        payload: res.data as ConferenceData,\n      });\n    };\n    socket?.on('stopConference', listener);\n    return () => {\n      socket?.off('stopConference', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n    };\n    socket?.on('addOperator', listener);\n    return () => {\n      socket?.off('addOperator', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      dispatch({\n        type: 'SET_ACTIVE_ROOM',\n        payload: res.data as SetActiveRoom,\n      });\n    };\n    socket?.on('setActiveRoom', listener);\n    return () => {\n      socket?.off('setActiveRoom', listener);\n    };\n  }, [socket?.id]);\n\n  useEffect(() => {\n    const listener = (res: ServerRes) => {\n      if (res.code) {\n        dispatch({ type: 'SET_ERROR', payload: res.msg });\n        return;\n      }\n      const payload = res.data as {visitData: VisitData};\n      dispatch({\n        type: 'SET_VISIT_DATA',\n        payload: payload.visitData,\n      });\n    };\n    socket?.on('visitData', listener);\n    return () => {\n      socket?.off('visitData', listener);\n    };\n  }, [socket?.id]);\n\n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport io, { Socket } from \"socket.io-client\";\n\nexport const useSocket = (\n  url: string,\n  path: string,\n  accessToken: string\n): {\n  socket: Socket | null;\n  online: boolean;\n  connectSocket: () => void;\n  disconnectSocket: () => void;\n} => {\n  const [socket, setSocket] = useState<Socket | null>(null);\n\n  const connectSocket = useCallback(() => {\n    // console.log(\"do connect\");\n    const socketTemp = io(url, {\n      path,\n      reconnection: true,\n      extraHeaders: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    setSocket(socketTemp);\n  }, [url, path, accessToken]);\n\n  const disconnectSocket = useCallback(() => {\n    // console.log(\"do disconnect\");\n    socket?.disconnect();\n    setSocket(null);\n  }, [socket]);\n\n  const [online, setOnline] = useState<boolean>(false);\n\n  useEffect(() => {\n    setOnline(socket?.connected ? true : false);\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"connect\", () => {\n      // console.log(\"connected\");\n      setOnline(true);\n      socket.emit(\"chatData\");\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"disconnect\", () => {\n      // console.log(\"disconnected\");\n      setOnline(false);\n    });\n  }, [socket]);\n\n  return {\n    socket,\n    online,\n    disconnectSocket,\n    connectSocket,\n  };\n};\n","import React from 'react';\nimport { IconButton, Tooltip } from '@mui/material';\nimport SettingsSuggestIcon from '@mui/icons-material/SettingsSuggest';\nimport SettingsVoiceIcon from '@mui/icons-material/SettingsVoice';\nimport VideoSettingsIcon from '@mui/icons-material/VideoSettings';\nimport { ChatContext } from '../context/ChatContext';\nimport { useTranslation } from 'react-i18next';\ntype CheckAudiVideoPermProps = {\n  audio: boolean;\n  video: boolean;\n};\n\nconst CheckAudiVideoPerm: React.FC<CheckAudiVideoPermProps> = ({\n  audio,\n  video,\n}: CheckAudiVideoPermProps) => {\n  const { t } = useTranslation();\n  //const [havePermissions, setHavePermissions] = useState(false);\n  const { dispatch } = React.useContext(ChatContext);\n  const checkPermissions = () => {\n    const permissions = navigator.mediaDevices.getUserMedia({\n      audio,\n      video,\n    });\n    permissions\n      .then(data => {\n        console.log('permissions', data);\n        dispatch({\n          type: 'SET_SUCCES',\n          payload: t('CHAT.CONFERENCE.ALLOK'),\n        });\n      })\n      .catch(err => {\n        let payload = t('CHAT.CONFERENCE.ErrorAny');\n        if (err.name === 'NotFoundError') {\n          payload = t('CHAT.CONFERENCE.NotFoundError');\n        }\n        if (err.name === 'NotAllowedError') {\n          payload = t('CHAT.CONFERENCE.NotAllowedError');\n        }\n\n        dispatch({\n          type: 'SET_ERROR',\n          payload,\n        });\n        //setHavePermissions(false);\n        console.log('err', `${err.name} : ${err.message}`);\n      });\n  };\n\n  const title =\n    audio && video\n      ? t('CHAT.CONFERENCE.CheckCamMic')\n      : audio\n      ? t('CHAT.CONFERENCE.CheckMic')\n      : t('CHAT.CONFERENCE.CheckCam');\n  return (\n    <Tooltip title={title}>\n      <IconButton\n        aria-label=\"check\"\n        onClick={() => checkPermissions()}\n        size=\"large\"\n      >\n        {audio && video ? (\n          <SettingsSuggestIcon />\n        ) : audio ? (\n          <SettingsVoiceIcon />\n        ) : (\n          <VideoSettingsIcon />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default CheckAudiVideoPerm;\n","import React from \"react\";\nimport { ChatContext } from \"../context/ChatContext\";\nimport { Alert, Snackbar } from \"@mui/material\";\n\nconst ChatAlert: React.FC = () => {\n  // const { t } = useTranslation();\n  //const [havePermissions, setHavePermissions] = useState(false);\n  const {\n    state: { error, success },\n    dispatch\n  } = React.useContext(ChatContext);\n\n  const handleClose = () => {\n    dispatch({ type: \"SET_ERROR\", payload: undefined });\n    dispatch({ type: \"SET_SUCCES\", payload: undefined });\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={!!error || !!success}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <Alert onClose={handleClose} severity={error ? \"error\" : \"success\"}>\n        {error ? error : success}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default ChatAlert;\n","import * as React from 'react';\nimport {\n  Container,\n  Box,\n  Grid,\n  useMediaQuery,\n  Paper,\n  IconButton,\n  Tooltip,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material/styles';\nimport { Room, RoomList, Conference } from '../components';\nimport { ChatContext } from '../context/ChatContext';\nimport { RestContext } from '../context/RestContext';\nimport { SocketContext } from '../context/SocketContext';\nimport {\n  ChatPageProps,\n  Group,\n  Contact,\n  ChatMessage,\n  ChatRoom,\n  SendMessage,\n  ConferenceData,\n} from '../types';\nimport { getParam, isEmpty, allMessCount } from '../utils/common';\nimport ConferenceCall from '../components/ConferenceCall';\nimport { ArrowForward } from '@mui/icons-material';\nimport { useTranslation } from 'react-i18next';\nimport CheckAudiVideoPerm from '../components/CheckAudiVideoPerm';\nimport ChatAlert from '../components/Alert';\n\n// Отключили проигрыш звука\n// const getRingAudio = (): HTMLAudioElement => {\n//   const audio = new Audio(\n//     process.env.PUBLIC_URL + '/audio/ring-in.ogg',\n//   );\n//   audio.loop = true;\n//   return audio;\n// };\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    height: '100%',\n    overflow: 'hidden',\n    padding: 0,\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  },\n  innerGrid: {\n    height: '100%',\n    width: '100%',\n  },\n  conAbsOnConf: {\n    position: 'absolute',\n    top: 42,\n    left: 25,\n    zIndex: 1000,\n    margin: theme.spacing(3),\n  },\n}));\n\nexport const ChatPage: React.FC<ChatPageProps> = ({\n  activeGroupId,\n  activeChatUserId,\n  inModale = true,\n  hideRooms = false,\n}: ChatPageProps) => {\n  const classes = useStyles();\n  const isMobile = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down('sm'),\n  );\n  const { t } = useTranslation();\n  const { state, dispatch } = React.useContext(ChatContext);\n  const { socket } = React.useContext(SocketContext);\n\n  const {\n    apiUrl,\n    pageSize,\n    getPrivateMessages,\n    getGroupMessages,\n    getUserByMmk,\n  } = React.useContext(RestContext);\n\n  // const [ringAudio] = React.useState(getRingAudio());\n\n  const onExitActiveRoom = React.useCallback(() => {\n    dispatch({\n      type: 'SET_ACTIVE_ROOM',\n      payload: {},\n    });\n  }, [dispatch]);\n\n  const onNeedMoreMessages = React.useCallback(\n    async (chat: ChatRoom) => {\n      if ((chat as Group).groupId)\n        await getGroupMessages(chat as Group);\n      else await getPrivateMessages(chat as Contact);\n    },\n    [getPrivateMessages, getGroupMessages],\n  );\n\n  const onMessageDelete = React.useCallback(\n    (chat: ChatRoom, message: ChatMessage) => {\n      socket?.emit('revokeMessage', {\n        groupId: (chat as Group).groupId, // Идентификатор группы\n        contactId: chat.userId, // Идентификатор контакта\n        _id: message._id, // Идентификатор удаленного сообщения\n      });\n    },\n    [socket?.id],\n  );\n\n  const onTyping = React.useCallback(\n    (chat: ChatRoom) => {\n      socket?.emit('typing', {\n        groupId: (chat as Group)?.groupId,\n        contactId: chat?.userId,\n      });\n    },\n    [socket?.id],\n  );\n\n  const onSendMessage = React.useCallback(\n    (chat: ChatRoom, data: SendMessage) => {\n      if ((chat as Group).groupId) {\n        socket?.emit('groupMessage', {\n          groupId: (chat as Group)?.groupId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size,\n        });\n      } else {\n        socket?.emit('privateMessage', {\n          contactId: chat?.userId,\n          content: data.message,\n          width: data.width,\n          height: data.height,\n          fileName: data.fileName,\n          messageType: data.messageType,\n          size: data.size,\n        });\n      }\n    },\n    [socket?.id],\n  );\n\n  const onChangeChat = React.useCallback(\n    (chat: ChatRoom) => {\n      dispatch({\n        type: 'SET_ACTIVE_ROOM',\n        payload: {\n          groupId: (chat as Group)?.groupId,\n          contactId: chat?.userId,\n        },\n      });\n      onEnterRoom(chat);\n    },\n    [socket?.id, dispatch],\n  );\n\n  const onEnterRoom = React.useCallback(\n    (chat: ChatRoom) => {\n      if (!chat.messages || chat.messages.length === 0) return;\n      if ((chat as Group).groupId) {\n        socket?.emit('markAsRead', {\n          groupId: (chat as Group).groupId,\n          _id: chat.messages[chat.messages.length - 1]._id,\n        });\n      } else {\n        socket?.emit('markAsRead', {\n          contactId: chat.userId,\n          _id: chat.messages[chat.messages.length - 1]._id,\n        });\n      }\n    },\n    [socket?.id],\n  );\n\n  const onVideoCall = React.useCallback(\n    (chat: ChatRoom, visitId?: number, recreate?: boolean) => {\n      // console.log('-----------', {\n      //   groupId: (chat as Group).groupId,\n      //   contactId: chat.userId,\n      //   visitId,\n      //   recreate: visitId ? true : false,\n      // });\n      socket?.emit('startConference', {\n        groupId: (chat as Group).groupId,\n        contactId: chat.userId,\n        visitId,\n        recreate,\n      });\n    },\n    [socket?.id],\n  );\n\n  const onVideoEnd = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit('stopConference', {\n          id: conference?.id,\n        });\n    },\n    [socket?.id],\n  );\n\n  const onConferencePause = React.useCallback(\n    (conference: ConferenceData | null) => {\n      if (conference?.id != null)\n        socket?.emit('pauseConference', {\n          id: conference.id,\n        });\n    },\n    [socket?.id],\n  );\n\n  const onConferenceCallAccept = React.useCallback(\n    (conference: ConferenceData) => {\n      // отправляем resumeConference чтобы возобновить запись\n      if (conference?.id != null)\n        socket?.emit('resumeConference', {\n          id: conference.id,\n        });\n      dispatch({ type: 'JOIN_CONFERENCE', payload: conference });\n    },\n    [socket?.id, dispatch],\n  );\n\n  const onOperatorAdd = React.useCallback(\n    (group: Group, operator: Contact) => {\n      socket?.emit('addOperator', {\n        groupId: group.groupId,\n        operatorId: operator.userId,\n      });\n    },\n    [socket?.id],\n  );\n\n  const onLeaveGroup = React.useCallback(\n    (group: Group) => {\n      socket?.emit('deleteGroup', {\n        groupId: group.groupId,\n      });\n    },\n    [socket?.id],\n  );\n\n  React.useEffect(() => {\n    if (activeChatUserId != null && !isEmpty(state.contactGather)) {\n      const Chat = Object.values(state.contactGather).find(\n        item => item.userId === activeChatUserId,\n      );\n      onChangeChat(Chat);\n    }\n\n    const mmkId = getParam('mmk');\n    const guid = getParam('guid');\n    if (\n      (mmkId != null || guid != null) &&\n      !isEmpty(state.contactGather)\n    ) {\n      //console.log(\"mmkId\", mmkId);\n      const changeChatByMmkId = async () => {\n        const userId = await getUserByMmk(mmkId, guid);\n        if (userId != null) {\n          const Chat = Object.values(state.contactGather).find(\n            item => item.userId === userId,\n          );\n          onChangeChat(Chat);\n        }\n      };\n      changeChatByMmkId();\n    }\n  }, [state.contactGather]);\n\n  React.useEffect(() => {\n    if (activeGroupId != null && !isEmpty(state.groupGather)) {\n      const onlyChat = Object.values(state.groupGather).find(\n        item => item.groupId === activeGroupId,\n      );\n\n      if (!isEmpty(onlyChat)) {\n        onChangeChat(onlyChat);\n      }\n    }\n  }, [state.groupGather]);\n\n  // Отключили проигрыш звука\n  // React.useEffect(() => {\n  //   if (\n  //     state.conference.data?.id &&\n  //     state.conference.ringPlayed &&\n  //     !state.conference.joined\n  //   )\n  //     ringAudio.play();\n  //   else ringAudio.pause();\n  // }, [state.conference.data?.id, state.conference.ringPlayed]);\n\n  // console.log('state--', state);\n  const renderRoom = state.activeRoom != null && (\n    <Room\n      apiUrl={apiUrl}\n      user={state.user}\n      users={state.userGather}\n      operators={state.operators}\n      chat={state.activeRoom}\n      typing={state.typing}\n      conference={state.conference.data}\n      visitData={state.visitData}\n      conferenceJoined={state.conference.joined}\n      loading={state.loading}\n      pageSize={pageSize}\n      onExitRoom={onExitActiveRoom}\n      onEnterRoom={onEnterRoom}\n      onNeedMoreMessages={onNeedMoreMessages}\n      onMeesageDelete={onMessageDelete}\n      onTyping={onTyping}\n      onSendMessage={onSendMessage}\n      onVideoCall={onVideoCall}\n      onVideoEnd={onVideoEnd}\n      onConferencePause={onConferencePause}\n      onOperatorAdd={onOperatorAdd}\n      onLeaveGroup={onLeaveGroup}\n    />\n  );\n\n  const GetRoomList = () => (\n    <RoomList\n      apiUrl={apiUrl}\n      user={state.user}\n      activeRoom={state.activeRoom}\n      groups={Object.values(state.groupGather)}\n      contacts={Object.values(state.contactGather)}\n      typing={state.typing}\n      onChangeChat={onChangeChat}\n    />\n  );\n\n  const GetConferenceCall = () =>\n    state.conference.data && (\n      <ConferenceCall\n        apiUrl={apiUrl}\n        contact={\n          state.contactGather[\n            state.user.userId === state.conference.data.userId\n              ? state.conference.data.contactId\n              : state.conference.data.userId\n          ]\n        }\n        conference={state.conference.data}\n        onAccept={onConferenceCallAccept}\n      />\n    );\n\n  const GetConference = () => (\n    <Conference\n      conference={state.conference.data}\n      onClose={onConferencePause}\n      langCode={state.user.langCode}\n    />\n  );\n\n  // const getMessCount = (data: GroupGather) => {\n  //   const messages = ;\n  //   return messages.reduce((a: number, b: number) => a + b, 0);\n  // };\n\n  const messageCountUnreaded =\n    state.activeRoom?.messages &&\n    state.activeRoom?.messages.filter(\n      it => it?.status != null && it.status === 0,\n    );\n\n  const depsContats = state.conference.data?.id\n    ? [\n        state.conference.joined,\n        state.conference.data?.id,\n        state.conference.data?.contactId,\n        state.activeRoom?.groupId,\n        state.activeRoom?.userId,\n      ]\n    : [\n        state.activeRoom?.groupId,\n        state.activeRoom?.userId,\n        messageCountUnreaded,\n        // allMessCount(state.contactGather),\n      ];\n\n  const Contacts = React.useMemo(\n    () =>\n      state.conference.data?.id != null ? (\n        <>\n          {state.conference.joined ? (\n            <GetConference />\n          ) : (\n            <GetConferenceCall />\n          )}\n          <Box className={classes.conAbsOnConf}>\n            <Paper style={{ borderRadius: 8 }}>\n              <Box display=\"flex\" flexDirection=\"row\" my={3}>\n                {((isEmpty(state.activeRoom) && isMobile) ||\n                  (!isEmpty(state.activeRoom) && !isMobile)) && (\n                  <>\n                    <CheckAudiVideoPerm audio={true} video={false} />\n                    <CheckAudiVideoPerm audio={false} video={true} />\n                  </>\n                )}\n\n                {isEmpty(state.activeRoom) &&\n                  state.chatOld != null &&\n                  isMobile && (\n                    <Tooltip title={t('CHAT.CONFERENCE.BACK')}>\n                      <IconButton\n                        aria-label=\"check\"\n                        onClick={() =>\n                          state.chatOld != null &&\n                          onChangeChat(state.chatOld)\n                        }\n                        size=\"large\"\n                      >\n                        <ArrowForward />\n                      </IconButton>\n                    </Tooltip>\n                  )}\n              </Box>\n            </Paper>\n          </Box>\n        </>\n      ) : (\n        <GetRoomList />\n      ),\n\n    depsContats,\n  );\n\n  console.log('chat state', state);\n\n  return (\n    <Container\n      maxWidth=\"lg\"\n      className={classes.root}\n      sx={theme => ({\n        width: inModale\n          ? `calc(100vw - ${theme.spacing(8)})`\n          : '100%',\n      })}\n    >\n      {isMobile ? (\n        <React.Fragment>\n          {Contacts}\n          {renderRoom}\n        </React.Fragment>\n      ) : (\n        <Grid container spacing={1} className={classes.innerGrid}>\n          {(state.conference.data?.id != null || !hideRooms) && (\n            <Grid\n              item\n              sm={state.conference.data?.id != null ? 6 : 4}\n              className={classes.innerGrid}\n            >\n              {Contacts}\n            </Grid>\n          )}\n          <Grid\n            item\n            sm={\n              state.conference.data?.id != null\n                ? 6\n                : hideRooms\n                ? 12\n                : 8\n            }\n            className={classes.innerGrid}\n          >\n            {renderRoom}\n          </Grid>\n        </Grid>\n      )}\n\n      <ChatAlert />\n    </Container>\n  );\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport en from './en.json';\nimport fr from './fr.json';\nimport ru from './ru.json';\n\nimport LanguageDetector from 'i18next-browser-languagedetector';\nconst getLang = () => {\n  const str = localStorage.getItem('user');\n  if (str) {\n    const user = JSON.parse(str);\n    return user?.lang;\n  }\n  return 'ru';\n};\n\nconst lang = getLang();\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      ru: { translations: ru },\n      en: { translations: en },\n      fr: { translations: fr },\n    },\n    lng: lang,\n    load: 'languageOnly',\n    fallbackLng: lang,\n    debug: true,\n\n    // have a common namespace used around the full app\n    ns: ['translations'],\n    defaultNS: 'translations',\n    lowerCaseLng: true,\n  });\n\nexport default i18n;\n","import React, {\n  useContext,\n  useReducer,\n  Dispatch,\n  createContext,\n} from 'react';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from '../translations';\n\ninterface LanguageState {\n  language: Language;\n}\n\ntype Language = 'ru' | 'fr' | 'en';\n\ntype Action = {\n  type: 'RU' | 'FR' | 'EN';\n  payload: Language;\n};\ninterface LanguageContextI {\n  languageState: LanguageState;\n  dispatchLanguage: Dispatch<Action>;\n}\n\nconst languageWithoutCountry = (): Language => {\n  return i18n.language.substring(0, 2) as Language;\n};\n\nexport const LANGUAGES: Record<string, Language> = {\n  RU: 'ru',\n  FR: 'fr',\n  EN: 'en',\n};\n\nexport const LANGUAGES_ACTIONS = {\n  SET_RUSSIAN: 'SET_RUSSIAN',\n  SET_ENGLISH: 'SET_ENGLISH',\n  SET_FRENCH: 'SET_FRENCH',\n};\n\nconst reducer = (\n  state: LanguageState,\n  action: Action,\n): LanguageState => {\n  switch (action.type) {\n    case LANGUAGES_ACTIONS.SET_ENGLISH:\n      i18n.changeLanguage('en');\n      return { language: LANGUAGES.EN };\n    case LANGUAGES_ACTIONS.SET_FRENCH:\n      i18n.changeLanguage('fr');\n      return { language: LANGUAGES.FR };\n    case LANGUAGES_ACTIONS.SET_RUSSIAN:\n      i18n.changeLanguage('ru');\n      return { language: LANGUAGES.RU };\n    default:\n      return state;\n  }\n};\n\nexport const LanguageContext = createContext({} as LanguageContextI);\ninterface AppLanguageProviderProps {\n  children: React.ReactNode;\n}\nexport const AppLanguageProvider: React.FC<AppLanguageProviderProps> = props => {\n  const [languageState, dispatchLanguage] = useReducer(reducer, {\n    language: languageWithoutCountry(),\n  });\n\n  return (\n    <LanguageContext.Provider\n      value={{\n        languageState,\n        dispatchLanguage,\n      }}\n    >\n      <I18nextProvider i18n={i18n}>{props.children}</I18nextProvider>\n    </LanguageContext.Provider>\n  );\n};\n\nexport const useLanguageValue = () => useContext(LanguageContext);\n","import React from 'react';\nimport { ChatProps } from '../../types'; // TODO: upgrade to latest eslint tooling\n\nimport { AppLanguageProvider } from '../../context/LanguageContext';\nimport { ChatProvider } from '../../context/ChatContext';\nimport { RestProvider } from '../../context/RestContext';\nimport { SocketProvider } from '../../context/SocketContext';\nimport { ChatPage } from '../../pages/chat';\n\nexport const ChatIndex: React.FC<ChatProps> = ({\n  activeGroupId,\n  activeChatUserId,\n  hideRooms = false,\n  lang,\n  chatBaseURLApi,\n  chatWsUrl,\n  chatWsPath,\n  token,\n  inModale = false,\n  refreshToken,\n}: ChatProps) => {\n  return (\n    <AppLanguageProvider>\n      <ChatProvider\n        defLang={lang}\n        token={token}\n        refreshToken={refreshToken}\n      >\n        <RestProvider baseURLApi={chatBaseURLApi} pageSize={25}>\n          <SocketProvider wsUrl={chatWsUrl} wsPath={chatWsPath}>\n            <ChatPage\n              activeGroupId={activeGroupId}\n              activeChatUserId={activeChatUserId}\n              hideRooms={hideRooms}\n              inModale={inModale}\n            />\n          </SocketProvider>\n        </RestProvider>\n      </ChatProvider>\n    </AppLanguageProvider>\n  );\n};\n"],"names":["MessageStatus","Role","ContextMenuType","useStyles","makeStyles","createStyles","item","cursor","Emoji","props","classes","emojiClick","e","onSelect","target","innerText","Item","itemProps","React","Box","m","component","onClick","className","emoji","display","flexDirection","theme","typingText","paddingLeft","spacing","typingDot","verticalAlign","width","height","margin","background","palette","primary","main","borderRadius","opacity","animation","&:nth-child(1)","animationDelay","&:nth-child(2)","&:nth-child(3)","@keyframes loadingFade","0%","50%","100%","Typing","createElement","Typography","color","variant","message","input","flex","inputUpload","attachmentIcon","fill","stroke","Entry","chat","t","useTranslation","empjiEl","setEmojiEl","useState","text","setText","lastTyping","setLastTyping","time","handleEmojiClose","sendMessage","data","onSendMessage","submit","trim","length","messageType","emojiOpen","Boolean","enojiId","undefined","TextField","placeholder","autoFocus","InputProps","disableUnderline","startAdornment","InputAdornment","position","accept","id","type","onChange","event","currentTarget","files","file","includes","image","Image","url","window","URL","webkitURL","src","createObjectURL","onload","imageSize","getImageSize","fileName","name","size","htmlFor","IconButton","aria-label","SvgIcon","d","strokeWidth","strokeLinecap","strokeLinejoin","aria-describedby","InsertEmoticon","endAdornment","edge","preventDefault","Send","value","_ref","onTyping","Date","now","onKeyPress","key","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","ContactStatus","isTyping","contact","online","isEmpty","Object","keys","formatTime","format","dayjs","add","startOf","isAfter","getChatId","groupId","userId","getChatName","username","chatRoomComparer","a","b","hasMessagesA","Array","isArray","messages","hasMessagesB","cdate","getTime","getParam","param","QueryString","location","search","URLSearchParams","get","combineURLs","baseURL","relativeURL","queryParams","replace","toString","star","fontSize","ContactList","apiUrl","contacts","owner","List","map","ListItem","button","ListItemAvatar","Avatar","alt","avatar","ListItemText","StarIcon","secondary","AddContact","Dialog","handleClose","aria-labelledby","DialogTitle","Transition","forwardRef","ref","Slide","_extends","direction","AlertDialog","children","setOpen","severity","TransitionComponent","keepMounted","DialogContent","Alert","DialogActions","Button","AlertModale","modaleInfo","setModaleInfo","strTime","useMemo","textAlign","ConferenceTime","_ref2","finishDate","currTime","finTime","diffTimeSec","Math","round","counter","max","setCounter","counterRef","useRef","useEffect","current","setInterval","prev","clearInterval","handlerRefresh","useCounter","minutes","seconds","totalSeconds","hours","floor","strHours","hhMmSs","ConfirmDialogSlide","contentText","callback","handleCloseOk","StyledMenu","styled","Menu","elevation","& .MuiPaper-root","marginTop","minWidth","mode","grey","boxShadow","& .MuiMenu-list","padding","& .MuiMenuItem-root","& .MuiSvgIcon-root","marginRight","&:active","backgroundColor","alpha","action","selectedOpacity","ConferenceButton","setAnchorEl","visitId","setVisitId","confirmReCreateVisit","setConfirmReCreateVisit","visitData","filter","it","contactId","aria-controls","aria-haspopup","aria-expanded","disableElevation","startIcon","VideoCallIcon","endIcon","KeyboardArrowDownIcon","disabled","onVideoCall","MenuListProps","MenuItem","conferenceStatus","handleStart","disableRipple","RestartAltIcon","PlayArrowIcon","visit","visitDate","plExamName","duration","getVisitMessage","popover","pointerEvents","paper","avatarGroup","getGroupStatus","group","status","_group$members","members","onlineCount","reduce","sum","push","join","RoomHeader","user","typing","conference","conferenceJoined","operators","onVideoEnd","onConferencePause","onOperatorAdd","onLeaveGroup","addOperatorOpen","setAddOperatorOpen","CardHeader","title","subheader","handlePopoverClose","_group$members2","GroupIcon","Fragment","aria-owns","onMouseEnter","onMouseLeave","disableRestoreFocus","role","handleAddOperatorOpen","PersonAddIcon","operator","find","DeleteIcon","CallEndIcon","style","marginLeft","fileIcon","fileBody","File","meta","content","split","date","getFileMeta","ext","idx","lastIndexOf","slice","splitFileName","toUpperCase","mediaContent","maxWidth","maxHeight","[object Object]","breakpoints","down","Video","isConference","JSON","parse","controls","muted","preload","img","aspect","setViewerData","AspectRatio","ratio","visible","MessageContent","rootContact","& span","float","& $message","borderTopRightRadius","borderBottomRightRadius","& $firstMessage","borderTopLeftRadius","& $lastMessage","borderBottomLeftRadius","marginBottom","rootUser","paddingRight","justifyContent","contrastText","rootNotify","& > *","fontWeight","firstMessage","lastMessage","flexWrap","header","overflow","body","wordBreak","alignSelf","statusImage","Message","isGroupMessage","isUserFirst","isUserLast","isRevoke","align","revokeUserName","isMine","wrapMessage","onContextMenu","child","Link","underline","href","download","Done","DoneAll","emptyUser","password","langCode","emptyChatState","token","refreshToken","activeRoom","chatOld","groupGather","userGather","contactGather","initialContactId","joined","ringPlayed","loading","error","success","getFreshActiveRoom","state","getActiveRoom","newActiveRoom","rooms","values","sort","setUserOnline","newState","member","index","indexOf","findIndex","contactUnreadGather","predicate","unreadCount","groupUnreadGather","chatReducer","payload","delGroup","updateActiveRoom","delGroupMember","delContact","setActiveRoom","addGroupMessage","x","addPrivateMessage","_newState$activeRoom","revokeMessage","userName","msg","_id","updateGroupInfo","notice","info","updateUserInfo","addGroupMember","isManager","setConference","pauseConference","_state$conference$dat","stopConference","_state$conference$dat2","markPrivateMessagesRead","updatedValue","i","addPrivateMessages","noMoreData","pageSize","addGroupMessages","userArr","users","setToken","clearUser","ChatContext","createContext","dispatch","emptyDispatch","ChatProvider","defLang","chatState","useReducer","Provider","messageListOuter","overflowY","messageList","scrollbarWidth","scrollbarColor","light","arrowDown","left","bottom","Loading","sx","mx","CircularProgress","RoomMessageList","setMenuState","initialMenuState","useContext","scrollDownButton","setScrollDownButton","messageCount","gap","setGap","messageCountUnreaded","refList","viewerData","setTimeout","scrollTop","scrollHeight","scrollDown","CardContent","InfiniteScroll","pageStart","loadMore","onNeedMoreMessages","hasMore","loader","isReverse","useCapture","useWindow","getScrollParent","diff","inx","handleMenuPopup","canCopy","canDelete","onMeesageDelete","mouseX","clientX","mouseY","clientY","Fab","KeyboardArrowDown","minHeight","top","default","Backdrop","zIndex","drawer","root","roomHeader","flexAll","flexEnd","Room","isMobile","useMediaQuery","menuState","handleCopy","useCallback","navigator","clipboard","writeText","handleDelete","Card","Tooltip","onExitRoom","ArrowBackIcon","Divider","handleMenuClose","anchorReference","anchorPosition","ListItemIcon","FileCopyIcon","whiteSpace","textOverflow","unread","TypingBadge","withStyles","badge","&::after","border","@keyframes ripple","transform","Badge","OnlineBadge","RoomListItem","roomName","contactAvatar","overlap","roomText","getMessageText","roomTime","selected","active","secondaryTypographyProps","Chip","label","searchField","listStyle","filterChats","chats","lowerFilter","toLowerCase","sortChats","groups","roomArr","topChatId","localStorage","getItem","c","k","isTop","unshift","RoomList","setChats","fullWidth","onChangeChat","Conference","confUrl","regex","RegExp","updateUrlParameter","lang","transLang","listener","source","_ref$current","contentWindow","addEventListener","removeEventListener","allowFullScreen","allow","alignItems","pulse","&::before","footer","paddingTop","@keyframes pulse","ConferenceCall","onAccept","Paper","RestContext","clearLocalStorage","removeItem","signOut","async","axios","post","console","log","getRefreshToken","authToken","setItem","RestProvider","baseURLApi","fetch","create","timeout","headers","Cache-Control","Pragma","Authorization","withCredentials","interceptors","response","use","errorInterceptor","Promise","reject","getPrivateMessages","_chat$messages","params","getGroupMessages","_chat$messages2","getUserByMmk","mmkId","guid","SocketContext","SocketProvider","wsUrl","wsPath","socket","disconnectSocket","connectSocket","useSocket","path","accessToken","setSocket","socketTemp","io","reconnection","extraHeaders","disconnect","setOnline","connected","on","emit","off","res","code","groupArr","groupData","contactArr","contactData","userData","operatorData","user_","conferenceData","newUser","groupObj","_groupObj$members2","_groupObj$members","_state$activeRoom","timer","clearTimeout","CheckAudiVideoPerm","audio","video","mediaDevices","getUserMedia","then","catch","err","SettingsSuggestIcon","SettingsVoiceIcon","VideoSettingsIcon","ChatAlert","Snackbar","autoHideDuration","innerGrid","conAbsOnConf","ChatPage","activeGroupId","activeChatUserId","inModale","hideRooms","onExitActiveRoom","onMessageDelete","onEnterRoom","recreate","onConferenceCallAccept","operatorId","Chat","changeChatByMmkId","onlyChat","renderRoom","GetRoomList","GetConferenceCall","GetConference","_state$activeRoom2","depsContats","_state$conference$dat3","_state$activeRoom3","_state$activeRoom4","_state$activeRoom5","_state$activeRoom6","Contacts","_state$conference$dat4","my","ArrowForward","Container","Grid","container","_state$conference$dat5","sm","_state$conference$dat6","_state$conference$dat7","getLang","str","i18n","LanguageDetector","initReactI18next","init","resources","ru","translations","en","fr","lng","load","fallbackLng","debug","ns","defaultNS","lowerCaseLng","reducer","changeLanguage","language","LanguageContext","AppLanguageProvider","languageState","dispatchLanguage","substring","I18nextProvider","chatBaseURLApi","chatWsUrl","chatWsPath"],"mappings":"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"}